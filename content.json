[{"title":"ElasticSearch 5 上手安装配置篇","date":"2017-01-10T08:24:57.000Z","path":"2017/01/10/ElasticSearch 5 上手安装配置篇/","text":"&#x5173;&#x4E8E;ElasticSearch 5ES 5&#x7248;&#x672C;&#x662F;&#x76F4;&#x63A5;&#x4ECE;ES 2.X&#x7248;&#x672C;&#x8DF3;&#x7740;&#x5347;&#x4E0A;&#x6765;&#x7684;&#xFF0C;&#x539F;&#x56E0;&#x7B80;&#x5355;&#x70B9;&#x7684;&#x8BF4;&#x662F;&#x4E3A;&#x4E86;&#x548C;Kibana&#x7B49;&#x4EA7;&#x54C1;&#x7684;&#x7248;&#x672C;&#x5C3D;&#x91CF;&#x7EDF;&#x4E00;&#xFF0C;&#x4E4B;&#x524D;&#x7248;&#x672C;&#x5DEE;&#x8DDD;&#x592A;&#x5927;&#x592A;&#x6DF7;&#x4E71;&#x2026; ES 5&#x76F8;&#x6BD4;&#x4E8E;ES 2&#x7684;&#x7248;&#x672C;&#x53D8;&#x5316;&#x5F88;&#x5927;&#xFF0C;&#x529F;&#x80FD;&#x548C;&#x6027;&#x80FD;&#x90FD;&#x5F97;&#x5230;&#x4E86;&#x5F88;&#x5927;&#x63D0;&#x5347;&#xFF0C;&#x5982;&#x5BF9;Lucene6&#x7684;&#x652F;&#x6301;&#xFF0C;&#x65B0;&#x589E;Reindex&#x7B49;&#x3002; &#x8FD9;&#x4E9B;&#x5C31;&#x5BFC;&#x81F4;&#x4E86;&#x64CD;&#x4F5C;&#x548C;API&#x7684;&#x5DEE;&#x522B;&#x4E5F;&#x5F88;&#x5927;&#xFF0C;&#x800C;&#x76EE;&#x524D;&#x7F51;&#x4E0A;&#x5173;&#x4E8E;ES 5&#x7248;&#x672C;&#x7684;&#x8D44;&#x6599;&#x4E5F;&#x6BD4;&#x8F83;&#x5C11;&#xFF0C;&#x672C;&#x6587;&#x5C31;&#x662F;&#x5728;&#x5B9E;&#x9645;&#x5E94;&#x7528;&#x4E2D;&#x8E29;&#x5751;&#x8FC7;&#x6765;&#x7684;&#xFF0C;&#x4EE5;&#x540E;&#x7528;&#x6700;&#x65B0;&#x7684;&#x4E1C;&#x897F;&#x7684;&#x65F6;&#x5019;&#x8981;&#x6700;&#x597D;&#x5FC3;&#x91CC;&#x51C6;&#x5907;&#x3002; &#x5B89;&#x88C5;&#x8FD0;&#x884C;&#x672C;&#x6587;&#x662F;&#x57FA;&#x4E8E;Mac OS&#x8FDB;&#x884C;&#x7684;&#xFF0C;&#x5176;&#x5B83;&#x5E73;&#x53F0;&#x57FA;&#x672C;&#x5DEE;&#x4E0D;&#x591A;&#x3002;&#x5B89;&#x88C5;&#x53EA;&#x8981;&#x4ECE;&#x5B98;&#x7F51;&#x4E0B;&#x8F7D;&#x538B;&#x7F29;&#x5305;&#x540E;&#xFF0C;&#x8FDB;&#x884C;&#x89E3;&#x538B;&#x653E;&#x5230;&#x559C;&#x6B22;&#x7684;&#x76EE;&#x5F55;&#x5C31;&#x597D;&#x3002; &#x4E0B;&#x8F7D;&#x5730;&#x5740;&#xFF1A;&#x4E0B;&#x8F7D;ElasticSearch&#x3002; &#x8FD0;&#x884C;&#x7684;&#x8BDD;&#x53EA;&#x8981;&#x8FDB;&#x5165;bin&#x76EE;&#x5F55;&#xFF0C;&#x6267;&#x884C;./elasticsearch&#x5373;&#x53EF;&#xFF08;Windows&#x662F;elasticsearch.bat&#xFF09; ./elasticsearch -d&#x8868;&#x793A;&#x4EE5;&#x5B88;&#x62A4;&#x8FDB;&#x7A0B;&#x8FD0;&#x884C;&#x3002; &#x6267;&#x884C;&#x6210;&#x529F;&#x540E;&#xFF0C;&#x6D4F;&#x89C8;&#x5668;&#x6216;Postman&#x8BBF;&#x95EE;http://localhost:9200/&#xFF0C;&#x51FA;&#x73B0;&#x4EE5;&#x4E0B;&#x7ED3;&#x679C;&#x8868;&#x793A;&#x6210;&#x529F;&#x3002;&#xFFFC;&#xFFFC; &#x5B89;&#x88C5;&#x6216;&#x5378;&#x8F7D;&#x63D2;&#x4EF6;&#x63D2;&#x4EF6;&#x4E5F;&#x662F;5&#x7248;&#x672C;&#x6BD4;&#x8F83;&#x5927;&#x7684;&#x4E00;&#x4E2A;&#x53D8;&#x5316;&#xFF0C;&#x4E4B;&#x524D;&#x7684;&#x7248;&#x672C;&#x9700;&#x8981;&#x4E00;&#x4E2A;&#x4E2A;&#x5B89;&#x88C5;&#x63D2;&#x4EF6;&#xFF0C;&#x4F46;&#x662F;5&#x7248;&#x672C;&#x5B98;&#x65B9;&#x5C06;&#x5E38;&#x7528;&#x7684;&#x5B89;&#x5168;&#xFF0C;&#x8B66;&#x62A5;&#xFF0C;&#x76D1;&#x89C6;&#x7B49;&#x529F;&#x80FD;&#x6253;&#x5305;&#x8FDB;&#x4E86;x-pack&#x8FD9;&#x4E2A;&#x5305;&#x4E2D;&#xFF0C;&#x4E0D;&#x80FD;&#x518D;&#x50CF;&#x4E4B;&#x524D;&#x4E00;&#x4E2A;&#x4E2A;&#x7684;&#x5B89;&#x88C5;&#x4E86;&#x3002; &#x5728;&#x7EBF;&#x5B89;&#x88C5;x-pack &#x53EA;&#x8981;&#x5728;bin&#x76EE;&#x5F55;&#x4E2D;&#x6267;&#x884C;&#xFF1A; 1./elasticsearch-plugin install x-pack &#x79BB;&#x7EBF;&#x5B89;&#x88C5; &#x4E0A;&#x9762;&#x7684;&#x5728;&#x7EBF;&#x5B89;&#x88C5;&#x5982;&#x679C;&#x7F51;&#x7EDC;&#x6BD4;&#x8F83;&#x5DEE;&#xFF0C;&#x4F1A;&#x6709;&#x6BD4;&#x8F83;&#x5927;&#x7684;&#x6982;&#x7387;&#x5931;&#x8D25;&#x6216;&#x51FA;&#x73B0;&#x610F;&#x60F3;&#x4E0D;&#x5230;&#x7684;&#x9519;&#x8BEF;&#xFF0C;&#x8FD9;&#x662F;&#x53EF;&#x4EE5;&#x5C06;x-pack&#x5305;&#x4E0B;&#x8F7D;&#x4E0B;&#x6765;&#x8FDB;&#x884C;&#x79BB;&#x7EBF;&#x5B89;&#x88C5;&#x3002; &#x4E0B;&#x8F7D;&#x5730;&#x5740;&#xFF1A;&#x4E0B;&#x8F7D;x-pack &#x4E0B;&#x8F7D;&#x597D;&#x540E;&#x901A;&#x8FC7;&#x4EE5;&#x4E0B;&#x547D;&#x4EE4;&#x5B89;&#x88C5; 1./kibana-plugin install file:///path/x-pack-5.1.1.zip file:///&#x540E;&#x9762;&#x5FC5;&#x987B;&#x662F;&#x7EDD;&#x5BF9;&#x8DEF;&#x5F84;&#xFF0C;Windows&#x662F;&#x7CFB;&#x7EDF;&#x7528;file:// &#x5378;&#x8F7D;&#x63D2;&#x4EF6; &#x6267;&#x884C;&#x4EE5;&#x4E0B;&#x547D;&#x4EE4;&#x5373;&#x53EF;&#xFF1A; 1bin/elasticsearch-plugin remove x-pack &#x5173;&#x4E8E;x-pack&#x7684;&#x8BE6;&#x7EC6;&#x4ECB;&#x7ECD;&#x53EF;&#x4EE5;&#x67E5;&#x770B;&#x5B98;&#x65B9;&#x6587;&#x6863;&#x3002; &#x6743;&#x9650;&#x7BA1;&#x7406;&#x5B89;&#x88C5;&#x597D;x-pack&#x63D2;&#x4EF6;&#x540E;&#xFF0C;ES&#x5C31;&#x5DF2;&#x7ECF;&#x96C6;&#x6210;&#x4E86;&#x5B89;&#x5168;&#x8BA4;&#x8BC1;&#x4E86;&#xFF0C;&#x8FD9;&#x65F6;&#x5019;&#x8BBF;&#x95EE;ES&#x5C31;&#x9700;&#x8981;&#x7528;&#x6237;&#x540D;&#x5BC6;&#x7801;&#x4E86;&#xFF0C;&#x9ED8;&#x8BA4;&#x7684;&#x7528;&#x6237;&#x540D;/&#x5BC6;&#x7801;&#xFF1A;elastic / changeme &#x4FEE;&#x6539;&#x9ED8;&#x8BA4;&#x7528;&#x6237;&#x5BC6;&#x7801; &#x53EF;&#x7528;Postman&#x8FDB;&#x884C;PUT&#x8BBF;&#x95EE;&#xFF0C;&#x56E0;&#x4E3A;&#x8FD9;&#x65F6;Postman&#x8BBF;&#x95EE;&#x4E5F;&#x8981;&#x6C42;&#x7528;&#x6237;&#x540D;&#x5BC6;&#x7801;&#x4E86;&#xFF0C;&#x6240;&#x4EE5;&#x8FDB;&#x884C;&#x4EE5;&#x4E0B;&#x8BBE;&#x7F6E;&#x5373;&#x53EF;&#xFF1A; &#x7136;&#x540E;&#x91C7;&#x7528;restful&#x7684;&#x5F62;&#x5F0F;&#x8BBF;&#x95EE;EShttp://localhost:9200/_xpack/security/user/elastic/_password &#x53C2;&#x6570;&#x4E3A;JSON&#x5B57;&#x7B26;&#x4E32; 123{ &quot;password&quot; : &quot;newpassword&quot;} &#x65B0;&#x5EFA;&#x7528;&#x6237; POST&#x8BBF;&#x95EE;http://localhost:9200/_xpack/security/user/{username}&#xFF0C;username &#x4E3A;&#x9700;&#x8981;&#x521B;&#x5EFA;&#x7684;&#x7528;&#x6237;&#x540D;&#xFF0C;&#x53C2;&#x6570;&#xFF1A; 123456{ &quot;password&quot; : &quot;userpassword&quot;, &quot;full_name&quot; : &quot;name&quot;, &quot;email&quot; : &quot;email@163.com&quot;, &quot;roles&quot; : [ &quot;admin&quot; ]} roles&#x4EE3;&#x8868;&#x89D2;&#x8272;&#xFF0C;&#x81EA;&#x5DF1;&#x53EF;&#x4EE5;&#x6839;&#x636E;&#x6743;&#x9650;&#x8BBE;&#x7F6E;&#x4E0D;&#x540C;&#x7684;&#x89D2;&#x8272;&#xFF0C;ES&#x6839;&#x636E;&#x96C6;&#x7FA4;&#xFF08;Cluster Privileges&#xFF09;&#x548C;&#x7D22;&#x5F15;&#xFF08;Indices Privileges&#xFF09;&#x5EFA;&#x7ACB;&#x4E86;&#x4E0D;&#x540C;&#x7684;&#x6743;&#x9650;&#x9009;&#x9879;&#xFF0C;&#x6709;&#x5174;&#x8DA3;&#x7684;&#x53EF;&#x4EE5;&#x67E5;&#x770B; ElasticSearch&#x6743;&#x9650;&#x3002; &#x5168;&#x6587;&#x5B8C;&#xFF0C;&#x4F1A;&#x4E0D;&#x5B9A;&#x671F;&#x66F4;&#x65B0;&#x5173;&#x952E;&#x77E5;&#x8BC6;&#x3002;","tags":[{"name":"技术","slug":"技术","permalink":"http://todoright.com/tags/技术/"},{"name":"ElasticSearch","slug":"ElasticSearch","permalink":"http://todoright.com/tags/ElasticSearch/"},{"name":"全文检索","slug":"全文检索","permalink":"http://todoright.com/tags/全文检索/"}]},{"title":"MySQL 5.6版本 Linux下内存占用过高的解决办法","date":"2016-11-24T08:56:41.000Z","path":"2016/11/24/MySQL-5-6版本-Linux下内存占用过高的解决办法/","text":"&#x6700;&#x8FD1;&#x5728;&#x963F;&#x91CC;&#x4E91;&#x8D2D;&#x4E70;&#x4E86;&#x4E00;&#x53F0;&#x4E91;&#x670D;&#x52A1;&#x5668;&#xFF0C;&#x56E0;&#x4E3A;&#x662F;&#x81EA;&#x5DF1;&#x6D4B;&#x8BD5;&#x73A9;&#x7684;&#xFF0C;&#x6240;&#x4EE5;&#x914D;&#x7F6E;&#x6309;&#x6700;&#x4F4E;&#x7684;&#x6765;&#x4E86;&#xFF0C;1G&#x5185;&#x5B58;&#xFF0C;&#x7136;&#x540E;&#x556A;&#x556A;&#x556A;&#xFF08;&#x6307;&#x952E;&#x76D8;&#x58F0;&#x97F3;&#xFF09;&#x7684;&#x5B89;&#x88C5;&#x4E86;JDK&#xFF0C;Tomcat&#xFF0C;MySQL&#xFF08;5.6&#xFF09;&#x7B49;&#x4E00;&#x7CFB;&#x5217;&#x73AF;&#x5883;&#xFF0C;&#x5F00;&#x59CB;&#x5F88;&#x723D;&#xFF0C;&#x7136;&#x540E;&#x5669;&#x68A6;&#x5F00;&#x59CB;&#x4E86;&#xFF1A; MySQL&#x4F1A;&#x7ECF;&#x5E38;&#x505C;&#x6B62;&#x8FD0;&#x884C;&#xFF0C;&#x800C;&#x4E14;&#x542F;&#x52A8;&#x90FD;&#x8D77;&#x4E0D;&#x8D77;&#x6765;&#xFF0C;&#x8981;reboot&#x624D;&#x884C;&#xFF0C;&#x5E38;&#x770B;MySQL&#x4FDD;&#x5B58;&#x65E5;&#x5FD7;&#xFF0C;&#x53D1;&#x73B0;&#x662F;&#x5185;&#x5B58;&#x4E0D;&#x591F;&#xFF0C;&#x770B;&#x4E86;&#x4E00;&#x4E0B;&#xFF0C;&#x73AF;&#x5883;&#x5168;&#x90E8;&#x5F00;&#x542F;&#x4EE5;&#x540E;&#xFF0C;&#x5185;&#x5B58;&#x5360;&#x7528;&#x57FA;&#x672C;&#x90FD;&#x5728;90%&#x4EE5;&#x4E0A;&#xFF0C;&#x901A;&#x8FC7;htop&#x4ED4;&#x7EC6;&#x67E5;&#x770B;&#x5185;&#x5B58;&#x5360;&#x7528;&#xFF0C;MySQL&#x8981;&#x5360;&#x7528;460M&#x5DE6;&#x53F3;&#x2026; &#x540E;&#x6765;&#x67E5;&#x9605;&#x76F8;&#x5173;&#x8D44;&#x6599;&#xFF0C;MySQL 5.6&#x7684;&#x9ED8;&#x8BA4;&#x7F13;&#x5B58;&#x8BBE;&#x7F6E;&#x5BF9;&#x4E8E;&#x4F4E;&#x5185;&#x5B58;&#x7684;&#x73AF;&#x5883;&#x5E76;&#x4E0D;&#x5408;&#x7406;&#xFF0C;&#x5982;&#x679C;&#x4F7F;&#x7528;&#x9ED8;&#x8BA4;&#x7684;&#x914D;&#x7F6E;&#xFF0C;&#x81F3;&#x5C11;&#x8981;&#x5360;&#x7528;400M&#x4EE5;&#x4E0A;&#x3002;&#x53EF;&#x4EE5;&#x4FEE;&#x6539;my.cnf&#x4E2D;&#x7684;&#x9ED8;&#x8BA4;&#x914D;&#x7F6E;&#xFF0C;&#x964D;&#x4F4E;&#x5185;&#x5B58;&#x5360;&#x7528;&#x3002; &#x6211;&#x7684;&#x7CFB;&#x7EDF;&#x662F;centos&#xFF0C;my.cnf&#x4F4D;&#x4E8E;/etc&#x76EE;&#x5F55;&#x4E0B;&#xFF0C;&#x5148;&#x5173;&#x95ED;MySQL&#x670D;&#x52A1;&#x7136;&#x540E;&#x7F16;&#x8F91;&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#xFF1A; 12service mysql stopsudo vi /etc/my.cnf &#x9ED8;&#x8BA4;&#x7684;&#x914D;&#x7F6E;&#x662F;&#xFF1A; 123performance_schema_max_table_instances 12500table_definition_cache 1400table_open_cache 2000 &#x4FEE;&#x6539;&#x4E3A;&#xFF1A; 123performance_schema_max_table_instances=600table_definition_cache=400table_open_cache=256 &#x5373;&#x53EF;&#xFF0C;&#x5982;&#x679C;&#x6CA1;&#x6709;&#x627E;&#x5230;&#x8FD9;&#x4E09;&#x4E2A;&#x914D;&#x7F6E;&#xFF0C;&#x53EF;&#x4EE5;&#x76F4;&#x63A5;&#x5728;&#x6587;&#x4EF6;&#x5C3E;&#x6DFB;&#x52A0;&#xFF0C;&#x7136;&#x540E;&#x542F;&#x52A8;MySQL&#x670D;&#x52A1;&#x5373;&#x53EF;&#xFF0C;&#x6211;&#x8FD9;&#x8FB9;&#x4FEE;&#x6539;&#x540E;&#x540E;MySQL&#x7684;&#x5185;&#x5B58;&#x5360;&#x7528;&#x5927;&#x6982;&#x5728;70M&#x591A;&#x3002;","tags":[{"name":"技术","slug":"技术","permalink":"http://todoright.com/tags/技术/"},{"name":"Linux","slug":"Linux","permalink":"http://todoright.com/tags/Linux/"},{"name":"Mysql","slug":"Mysql","permalink":"http://todoright.com/tags/Mysql/"},{"name":"数据库优化","slug":"数据库优化","permalink":"http://todoright.com/tags/数据库优化/"}]},{"title":"Oracle分析函数KEEP、DENSE_RANK的使用","date":"2016-11-24T08:49:06.000Z","path":"2016/11/24/Oracle分析函数KEEP、DENSE-RANK的使用/","text":"&#x6700;&#x8FD1;&#x5728;&#x5DE5;&#x4F5C;&#x4E2D;&#xFF0C;&#x78B0;&#x5230;&#x4E00;&#x4E2A;&#x95EE;&#x9898;&#xFF0C;&#x540E;&#x6765;&#x5728;&#x5904;&#x7406;&#x8FC7;&#x7A0B;&#x4E2D;&#x63A5;&#x89E6;&#x5230;&#x4E86;KEEP&#xFF0C;DENSE_RANK&#x5206;&#x6790;&#x51FD;&#x6570;&#xFF0C;&#x95EE;&#x9898;&#x77AC;&#x95F4;&#x88AB;&#x7B80;&#x5355;&#x7684;&#x89E3;&#x51B3;&#xFF0C;&#x5426;&#x5219;&#x6309;&#x7167;&#x5E38;&#x89C4;&#x5199;&#x6CD5;&#xFF0C;&#x80AF;&#x5B9A;&#x4F1A;&#x5199;&#x51FA;&#x5D4C;&#x5957;&#x8BED;&#x53E5;&#xFF0C;&#x4F46;&#x662F;&#x7F51;&#x4E0A;&#x5BF9;&#x8FD9;&#x4E2A;&#x65B9;&#x9762;&#x7684;&#x4ECB;&#x7ECD;&#x6BD4;&#x8F83;&#x5C11;&#xFF0C;&#x73B0;&#x5728;&#x7279;&#x6574;&#x7406;&#x4E86;&#x4E00;&#x4E0B;&#xFF1A;&#x4ECE;&#x76EE;&#x524D;&#x67E5;&#x5230;&#x7684;&#x6765;&#x770B;&#xFF1A;DENSE_RANK&#x662F;&#x548C;KEEP&#x7ED3;&#x5408;&#x4F7F;&#x7528;&#x7684;&#xFF0C;&#x7F51;&#x4E0A;&#x7ED9;&#x51FA;&#x7684;&#x89E3;&#x91CA;&#x662F;Returns the row ranked first using DENSE_RANK&#x3002;&#x6211;&#x7684;&#x7406;&#x89E3;&#x662F;&#x8FD4;&#x56DE; DENSE_RANK&#x51FD;&#x6570;&#x7684;&#x7B2C;&#x4E00;&#x7ED3;&#x679C;&#x3002;&#x4E00;&#x822C;&#x5199;&#x6CD5;&#x662F;MIN [ MAX ] (A) KEEP(DENSE_RANK FIRST [ LAST ] ORDER BY B)&#xFF0C;&#x8FD9;&#x91CC;&#x5F15;&#x7528;&#x522B;&#x4EBA;&#x8BF4;&#x7684;&#x660E;&#x7684;&#x89E3;&#x91CA;&#x4E00;&#x4E0B;&#xFF1A; DENSE_RANK&#x529F;&#x80FD;&#x63CF;&#x8FF0;&#xFF1A;&#x6839;&#x636E;ORDER BY&#x5B50;&#x53E5;&#x4E2D;&#x8868;&#x8FBE;&#x5F0F;&#x7684;&#x503C;&#xFF0C;&#x4ECE;&#x67E5;&#x8BE2;&#x8FD4;&#x56DE;&#x7684;&#x6BCF;&#x4E00;&#x884C;&#xFF0C;&#x8BA1;&#x7B97;&#x5B83;&#x4EEC;&#x4E0E;&#x5176;&#x5B83;&#x884C;&#x7684;&#x76F8;&#x5BF9;&#x4F4D;&#x7F6E;&#x3002;&#x7EC4;&#x5185;&#x7684;&#x6570;&#x636E;&#x6309;ORDER BY&#x5B50;&#x53E5;&#x6392;&#x5E8F;&#xFF0C;&#x7136;&#x540E;&#x7ED9;&#x6BCF;&#x4E00;&#x884C;&#x8D4B;&#x4E00;&#x4E2A;&#x53F7;&#xFF0C;&#x4ECE;&#x800C;&#x5F62;&#x6210;&#x4E00;&#x4E2A;&#x5E8F;&#x5217;&#xFF0C;&#x8BE5;&#x5E8F;&#x5217;&#x4ECE;1&#x5F00;&#x59CB;&#xFF0C;&#x5F80;&#x540E;&#x7D2F;&#x52A0;&#x3002;&#x6BCF;&#x6B21;ORDER BY&#x8868;&#x8FBE;&#x5F0F;&#x7684;&#x503C;&#x53D1;&#x751F;&#x53D8;&#x5316;&#x65F6;&#xFF0C;&#x8BE5;&#x5E8F;&#x5217;&#x4E5F;&#x968F;&#x4E4B;&#x589E;&#x52A0;&#x3002;&#x6709;&#x540C;&#x6837;&#x503C;&#x7684;&#x884C;&#x5F97;&#x5230;&#x540C;&#x6837;&#x7684;&#x6570;&#x5B57;&#x5E8F;&#x53F7;&#xFF08;&#x8BA4;&#x4E3A;null&#x65F6;&#x76F8;&#x7B49;&#x7684;&#xFF09;&#x3002;&#x5BC6;&#x96C6;&#x7684;&#x5E8F;&#x5217;&#x8FD4;&#x56DE;&#x7684;&#x65F6;&#x6CA1;&#x6709;&#x95F4;&#x9694;&#x7684;&#x6570;&#x3002; FIRST&#x529F;&#x80FD;&#x63CF;&#x8FF0;&#xFF1A;&#x4ECE;DENSE_RANK&#x8FD4;&#x56DE;&#x7684;&#x96C6;&#x5408;&#x4E2D;&#x53D6;&#x51FA;&#x6392;&#x5728;&#x6700;&#x524D;&#x9762;&#x7684;&#x4E00;&#x4E2A;&#x503C;&#x7684;&#x884C;&#xFF08;&#x53EF;&#x80FD;&#x591A;&#x884C;&#xFF0C;&#x56E0;&#x4E3A;&#x503C;&#x53EF;&#x80FD;&#x76F8;&#x7B49;&#xFF09;&#xFF0C;&#x56E0;&#x6B64;&#x5B8C;&#x6574;&#x7684;&#x8BED;&#x6CD5;&#x9700;&#x8981;&#x5728;&#x5F00;&#x59CB;&#x5904;&#x52A0;&#x4E0A;&#x4E00;&#x4E2A;&#x96C6;&#x5408;&#x51FD;&#x6570;&#x4EE5;&#x4ECE;&#x4E2D;&#x53D6;&#x51FA;&#x8BB0;&#x5F55;&#x3002; LAST&#x529F;&#x80FD;&#x63CF;&#x8FF0;&#xFF1A;&#x4ECE;DENSE_RANK&#x8FD4;&#x56DE;&#x7684;&#x96C6;&#x5408;&#x4E2D;&#x53D6;&#x51FA;&#x6392;&#x5728;&#x6700;&#x540E;&#x9762;&#x7684;&#x4E00;&#x4E2A;&#x503C;&#x7684;&#x884C;&#xFF08;&#x53EF;&#x80FD;&#x591A;&#x884C;&#xFF0C;&#x56E0;&#x4E3A;&#x503C;&#x53EF;&#x80FD;&#x76F8;&#x7B49;&#xFF09;&#xFF0C;&#x56E0;&#x6B64;&#x5B8C;&#x6574;&#x7684;&#x8BED;&#x6CD5;&#x9700;&#x8981;&#x5728;&#x5F00;&#x59CB;&#x5904;&#x52A0;&#x4E0A;&#x4E00;&#x4E2A;&#x96C6;&#x5408;&#x51FD;&#x6570;&#x4EE5;&#x4ECE;&#x4E2D;&#x53D6;&#x51FA;&#x8BB0;&#x5F55;&#x3002; &#x6240;&#x4EE5;&#x9ED8;&#x8BA4;&#x6392;&#x5E8F;&#x4E0B;&#xFF0C;FIRST&#x53EF;&#x4EE5;&#x7406;&#x89E3;&#x662F;&#x53D6;&#x5C0F;&#x503C;&#xFF0C;LAST&#x53D6;&#x5927;&#x503C;&#x3002;&#x800C;&#x524D;&#x9762;&#x7684;MIN&#x6216;&#x8005;MAX&#x5219;&#x662F;&#x5728;KEEP&#x7684;&#x7ED3;&#x679C;&#x96C6;&#x4E2D;&#x53D6;&#x67D0;&#x4E00;&#x5B57;&#x6BB5;&#x7684;&#x6700;&#x5927;&#x503C;&#x6216;&#x6700;&#x5C0F;&#x503C;&#x3002;&#x8BED;&#x6587;&#x6CA1;&#x5B66;&#x597D;&#x53EF;&#x601C;&#x4E0A;&#x9762;&#x7684;&#x53EF;&#x80FD;&#x6CA1;&#x8BF4;&#x6E05;&#x695A;&#xFF0C;&#x800C;&#x4E14;&#x7F51;&#x4E0A;&#x7684;&#x76F8;&#x5173;&#x7684;&#x8D44;&#x6599;&#x4E5F;&#x5C11;&#xFF0C;&#x6240;&#x4EE5;&#x6700;&#x540E;&#x7ED9;&#x5927;&#x5BB6;&#x770B;&#x4E00;&#x4E2A;&#x5B8C;&#x6574;&#x7684;SQL&#x8BED;&#x53E5;&#x5E76;&#x89E3;&#x91CA;&#x4E00;&#x4E0B;&#x4F5C;&#x7528;&#xFF0C;&#x5927;&#x5BB6;&#x81EA;&#x5DF1;&#x7406;&#x89E3;&#x4E00;&#x4E0B;&#x5427;&#x2026;.12345SELECT ZGH, MIN(WM) KEEP(DENSE_RANK FIRST ORDER BY WM), MIN(RQ) KEEP(DENSE_RANK FIRST ORDER BY WM) FROM T_JZG GROUP BY ZGH &#x8868;&#x7ED3;&#x6784;&#x5927;&#x6982;&#x5982;&#x4E0B;&#xFF1A;1234567ZGH | WM | RQA | 1 | 20130101A | 2 | 20140102A | 1 | 20120102B | 3 | 20131001B | 2 | 20140102B | 3 | 20121004 &#x5176;&#x4E2D;&#x76F8;&#x540C;ZGH&#x5BF9;&#x5E94;&#x7684;&#x5B57;&#x6BB5;WM&#x3001;RQ&#x503C;&#x53EF;&#x80FD;&#x6709;&#x591A;&#x6761;&#xFF0C;&#x8981;&#x6C42;&#x4ECE;&#x4E2D;&#x53D6;&#x51FA;WM&#x503C;&#x6700;&#x5C0F;&#x7684;&#x90A3;&#x4E00;&#x6761;&#xFF0C;&#x4F46;&#x53EF;&#x80FD;&#x5B58;&#x5728;&#x591A;&#x6761;&#xFF0C;&#x8FD9;&#x65F6;&#x8981;&#x53D6;&#x51FA;&#x5176;&#x4E2D;RQ&#x6700;&#x5C0F;&#x7684;&#x90A3;&#x4E00;&#x6761;&#xFF0C;&#x4EE5;&#x4E0A;&#x8BED;&#x53E5;&#x53EF;&#x4EE5;&#x5B9E;&#x73B0;&#x3002;&#x6700;&#x540E;&#x53D6;&#x51FA;&#x7684;&#x503C;&#x5E94;&#x8BE5;&#x662F;&#xFF1A;123ZGH | WM | RQA | 1 | 20120102B | 2 | 20140102","tags":[{"name":"技术","slug":"技术","permalink":"http://todoright.com/tags/技术/"},{"name":"数据库","slug":"数据库","permalink":"http://todoright.com/tags/数据库/"},{"name":"KEEP","slug":"KEEP","permalink":"http://todoright.com/tags/KEEP/"},{"name":"DENSE_RANK","slug":"DENSE-RANK","permalink":"http://todoright.com/tags/DENSE-RANK/"},{"name":"Oracle","slug":"Oracle","permalink":"http://todoright.com/tags/Oracle/"}]},{"title":"Java操作XML文件（写）","date":"2016-11-24T08:36:56.000Z","path":"2016/11/24/Java操作XML文件（写）/","text":"1 &#x6982;&#x8FF0;&#x540C;XML&#x6587;&#x4EF6;&#x7684;&#x8BFB;&#x53D6;&#x4E00;&#x6837;&#xFF0C;&#x751F;&#x6210;&#x6216;&#x5199;&#x5165;XML&#x6587;&#x4EF6;&#x4E5F;&#x6709;&#x56DB;&#x79CD;&#x65B9;&#x5F0F;&#xFF0C;&#x5206;&#x522B;&#x4E3A;DOM&#xFF0C;SAX&#xFF0C;DOM4J&#x548C;JDOM&#xFF0C;&#x5176;&#x4E2D;&#x524D;&#x4E24;&#x79CD;&#x4E3A;&#x5B98;&#x65B9;&#xFF0C;&#x540E;&#x4E24;&#x79CD;&#x7B2C;&#x4E09;&#x65B9;API&#xFF0C;&#x9700;&#x8981;&#x76F8;&#x5E94;jar&#x5305;&#xFF0C;&#x5176;&#x5B83;&#x8BE6;&#x89C1;Java&#x64CD;&#x4F5C;XML&#x6587;&#x4EF6;&#xFF08;&#x8BFB;&#xFF09;&#x8FD9;&#x7BC7;&#x6587;&#x7AE0;&#xFF0C;&#x8FD9;&#x91CC;&#x4E0D;&#x662F;&#x7D2F;&#x8FF0;&#x3002; 2 DOM&#x65B9;&#x5F0F;&#x751F;&#x6210;DOM&#x65B9;&#x5F0F;&#x7684;&#x751F;&#x6210;&#x662F;&#x57FA;&#x4E8E;&#x6811;&#xFF08;tree&#xFF09;&#x7ED3;&#x6784;&#xFF0C;&#x9996;&#x5148;&#x751F;&#x6210;&#x6811;&#xFF08;root&#xFF09;&#x8282;&#x70B9;&#xFF0C;&#x751F;&#x6210;&#x7684;DOM&#x6811;&#x4F1A;&#x9A7B;&#x7559;&#x5728;&#x5185;&#x5B58;&#x4E2D;&#xFF0C;&#x8FD9;&#x6837;&#x4F18;&#x70B9;&#x662F;&#x65B9;&#x4FBF;&#x968F;&#x65F6;&#x589E;&#x5220;&#x6539;&#xFF0C;&#x6240;&#x4EE5;&#x5982;&#x679C;XML&#x9700;&#x8981;&#x9891;&#x7E41;&#x7684;&#x4FEE;&#x6539;&#xFF0C;&#x63A8;&#x8350;&#x8FD9;&#x79CD;&#x65B9;&#x5F0F;&#x3002;&#x5177;&#x4F53;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A; 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061package com.jamie.writer;import java.io.File;import javax.xml.parsers.DocumentBuilder;import javax.xml.parsers.DocumentBuilderFactory;import javax.xml.parsers.ParserConfigurationException;import javax.xml.transform.OutputKeys;import javax.xml.transform.Transformer;import javax.xml.transform.TransformerConfigurationException;import javax.xml.transform.TransformerException;import javax.xml.transform.TransformerFactory;import javax.xml.transform.dom.DOMSource;import javax.xml.transform.stream.StreamResult;import org.w3c.dom.Document;import org.w3c.dom.Element;public class DomWriter { public static void main(String[] args) { // &#x521B;&#x5EFA;&#x4E00;&#x4E2A;DocumentBuilderFactory&#x5BF9;&#x8C61; DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance(); // &#x521B;&#x5EFA;DocumentBuilder&#x5BF9;&#x8C61; try { DocumentBuilder db = dbf.newDocumentBuilder(); // &#x83B7;&#x5F97;&#x4E00;&#x4E2A;Document&#x5BF9;&#x8C61;&#xFF0C;&#x5199;&#x5165;xml&#x7ED3;&#x6784; Document document = db.newDocument(); // &#x53BB;&#x6389;standalone&#x5C5E;&#x6027; document.setXmlStandalone(true); // &#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x6839;&#x8282;&#x70B9; Element classElement = document.createElement(&quot;class&quot;); // &#x751F;&#x4EA7;&#x6839;&#x8282;&#x70B9;&#x4E0B;&#x7684;&#x5B50;&#x8282;&#x70B9;&#xFF0C;&#x5E76;&#x6DFB;&#x52A0;&#x5C5E;&#x6027; Element personElement = document.createElement(&quot;person&quot;); personElement.setAttribute(&quot;id&quot;, &quot;1&quot;); // &#x6DFB;&#x52A0;name &#x6807;&#x7B7E;&#xFF0C;&#x5E76;&#x8D4B;&#x503C; Element nameElement = document.createElement(&quot;name&quot;); nameElement.setTextContent(&quot;&#x5C0F;&#x660E;&quot;); personElement.appendChild(nameElement); // &#x5C06;&#x5B50;&#x8282;&#x70B9;person&#x6DFB;&#x52A0;&#x5230;&#x6839;&#x8282;&#x70B9;class classElement.appendChild(personElement); // &#x5C06;&#x6839;&#x8282;&#x70B9;&#x6DFB;&#x52A0;&#x5230;document&#xFF0C;&#x751F;&#x4EA7;&#x4E00;&#x4E2A;dom&#x6811; document.appendChild(classElement); // &#x521B;&#x5EFA;xml&#x6587;&#x4EF6;&#xFF0C;&#x9700;&#x8981;&#x4E00;&#x4E2A;TransformerFactory&#x5BF9;&#x8C61; TransformerFactory tff = TransformerFactory.newInstance(); try { // &#x521B;&#x5EFA;&#x4E00;&#x4E2A;Transformer&#x5BF9;&#x8C61; Transformer tf = tff.newTransformer(); tf.setOutputProperty(OutputKeys.INDENT, &quot;yes&quot;); tf.transform(new DOMSource(document), new StreamResult( new File(&quot;clsss.xml&quot;))); } catch (TransformerConfigurationException e) { // TODO Auto-generated catch block e.printStackTrace(); } catch (TransformerException e) { // TODO Auto-generated catch block e.printStackTrace(); } } catch (ParserConfigurationException e) { e.printStackTrace(); } }} 3 SAX&#x65B9;&#x5F0F;&#x751F;&#x6210;SAX&#x65B9;&#x5F0F;&#x751F;&#x6210;XML&#x662F;&#x57FA;&#x4E8E;&#x4E8B;&#x4EF6;&#x6A21;&#x578B;&#x7684;&#xFF0C;&#x5F53;&#x628A;&#x67D0;&#x4E00;&#x6807;&#x7B7E;&#x8D70;&#x5B8C;&#x540E;&#xFF0C;&#x4E0D;&#x80FD;&#x8D70;&#x56DE;&#x5934;&#x8DEF;&#xFF0C;&#x56E0;&#x4E3A;&#x5B83;&#x6CA1;&#x6709;&#x72B6;&#x6001;&#x6027;&#x53EF;&#x8A00;&#xFF0C;&#x5373;&#x65E0;&#x6CD5;&#x8FD4;&#x56DE;&#x4FEE;&#x6539;&#x67D0;&#x4E00;&#x5B8C;&#x6210;&#x7684;&#x6807;&#x7B7E;&#xFF0C;&#x4F46;&#x662F;SAX&#x7684;&#x6548;&#x7387;&#x5F88;&#x9AD8;&#x3002;&#x5177;&#x4F53;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A; 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970package com.jamie.writer;import java.io.File;import java.io.FileNotFoundException;import java.io.FileOutputStream;import java.io.IOException; import javax.xml.transform.OutputKeys;import javax.xml.transform.Result;import javax.xml.transform.Transformer;import javax.xml.transform.TransformerConfigurationException;import javax.xml.transform.sax.SAXTransformerFactory;import javax.xml.transform.sax.TransformerHandler;import javax.xml.transform.stream.StreamResult;import org.xml.sax.SAXException;import org.xml.sax.helpers.AttributesImpl;public class SaxWrite { public static void main(String[] args) { // &#x521B;&#x5EFA;&#x4E00;&#x4E2A;SAXTransformerFactory SAXTransformerFactory stff = (SAXTransformerFactory) SAXTransformerFactory .newInstance(); try { // &#x83B7;&#x53D6;TransformerHandler&#x5BF9;&#x8C61; TransformerHandler handler = stff.newTransformerHandler(); // &#x901A;&#x8FC7;handler&#x521B;&#x5EFA;Transformers&#x5BF9;&#x8C61; Transformer former = handler.getTransformer(); // &#x901A;&#x8FC7;Transformer&#x5BF9;&#x8C61;&#x5BF9;&#x751F;&#x6210;&#x7684;xml&#x6587;&#x4EF6;&#x8FDB;&#x884C;&#x8BBE;&#x7F6E; former.setOutputProperty(OutputKeys.INDENT, &quot;yes&quot;); former.setOutputProperty(OutputKeys.ENCODING, &quot;utf-8&quot;); // &#x521B;&#x5EFA;&#x4E00;&#x4E2A;result&#x5BF9;&#x8C61;&#xFF0C;&#x7528;&#x4E8E;&#x8FDB;&#x884C;&#x6587;&#x4EF6;&#x7684;&#x521B;&#x5EFA;&#x548C;&#x6587;&#x4EF6;&#x8F93;&#x51FA;&#x6D41;&#x7684;&#x7F16;&#x5199;,&#x5E76;&#x4F7F;&#x5176;&#x4E0E;handler&#x5BF9;&#x8C61;&#x5173;&#x8054; File f = new File(&quot;sax.xml&quot;); if (!f.exists()) { f.createNewFile(); } Result rs = new StreamResult(new FileOutputStream(f)); handler.setResult(rs); // &#x5229;&#x7528;handler&#x5BF9;&#x8C61;&#x8FDB;&#x884C;xml&#x5185;&#x5BB9;&#x7684;&#x7F16;&#x5199; // &#x6253;&#x5F00;doument handler.startDocument(); // &#x521B;&#x5EFA;Attribute&#x5BF9;&#x8C61;&#xFF0C;&#x7528;&#x6237;&#x91CD;&#x590D;&#x5229;&#x7528; AttributesImpl attrs = new AttributesImpl(); handler.startElement(&quot;&quot;, &quot;&quot;, &quot;class&quot;, attrs); attrs.clear(); attrs.addAttribute(&quot;&quot;, &quot;&quot;, &quot;id&quot;, &quot;&quot;, &quot;1&quot;); // &#x521B;&#x5EFA;person&#x6807;&#x7B7E; handler.startElement(&quot;&quot;, &quot;&quot;, &quot;person&quot;, attrs); attrs.clear(); // &#x521B;&#x5EFA;name&#x6807;&#x7B7E; handler.startElement(&quot;&quot;, &quot;&quot;, &quot;name&quot;, attrs); String name = &quot;&#x5C0F;&#x660E;&quot;; handler.characters(name.toCharArray(), 0, name.length()); handler.endElement(&quot;&quot;, &quot;&quot;, &quot;name&quot;); handler.endElement(&quot;&quot;, &quot;&quot;, &quot;person&quot;); handler.endElement(&quot;&quot;, &quot;&quot;, &quot;class&quot;); // &#x5173;&#x95ED;document handler.endDocument(); } catch (TransformerConfigurationException e) { // TODO Auto-generated catch block e.printStackTrace(); } catch (FileNotFoundException e) { // TODO Auto-generated catch block e.printStackTrace(); } catch (IOException e) { // TODO Auto-generated catch block e.printStackTrace(); } catch (SAXException e) { // TODO Auto-generated catch block e.printStackTrace(); } }} 4 DOM4J&#x65B9;&#x5F0F;&#x751F;&#x6210;DOM4J&#x662F;&#x57FA;&#x4E8E;&#x5E95;&#x5C42;API&#xFF08;&#x4E5F;&#x5C31;&#x662F;&#x5B98;&#x65B9;&#x7684;&#x63D0;&#x4F9B;&#x7684;&#x65B9;&#x5F0F;&#xFF0C;DOM&#x548C;SAX&#xFF09;&#x7684;&#x4E00;&#x79CD;&#x751F;&#x6210;&#x65B9;&#x5F0F;&#xFF0C;&#x6548;&#x7387;&#x4E00;&#x822C;&#x6765;&#x8BF4;&#x4EC5;&#x6B21;&#x4E8E;SAX&#xFF0C;&#x5E76;&#x4E14;&#x5728;&#x529F;&#x80FD;&#x548C;&#x4F7F;&#x7528;&#x7684;&#x4FBF;&#x6377;&#x65B9;&#x9762;&#x90FD;&#x5F88;&#x5F3A;&#x5927;&#xFF0C;&#x6240;&#x4EE5;&#x4E5F;&#x662F;&#x73B0;&#x5B9E;&#x5F00;&#x53D1;&#x4E2D;&#x6BD4;&#x8F83;&#x5E38;&#x7528;&#x7684;&#x4E00;&#x79CD;&#x65B9;&#x5F0F;&#x3002;&#x5177;&#x4F53;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF0C;&#x522B;&#x5FD8;&#x4E86;&#x5F15;&#x5165;&#x76F8;&#x5E94;&#x7684;jar: 12345678910111213141516171819202122232425262728293031323334353637383940414243444546package com.jamie.writer;import java.io.File;import java.io.FileOutputStream;import java.io.IOException;import org.dom4j.*;import org.dom4j.io.OutputFormat;import org.dom4j.io.XMLWriter;public class Dom4jWriter { public static void main(String[] args) { // &#x8C03;&#x7528;&#x751F;&#x6210;&#x65B9;&#x6CD5; Dom4jWriter dom4j = new Dom4jWriter(); dom4j.createXml(); } /** ** &#x751F;&#x6210;&#x65B9;&#x6CD5; */ public void createXml() { // &#x4F7F;&#x7528;DocumentHelper&#x521B;&#x5EFA;Document&#x5BF9;&#x8C61;&#xFF0C;&#x5373;&#x6574;&#x4E2A;xml&#x6587;&#x6863; Document document = DocumentHelper.createDocument(); // &#x521B;&#x5EFA;&#x6839;&#x8282;&#x70B9;class &#x53CA;&#x76F8;&#x5E94;&#x7684;&#x8282;&#x70B9;&#xFF0C;&#x6CE8;&#x610F;addElement&#x65B9;&#x6CD5;&#x7684;&#x4F9D;&#x5C5E;&#x5173;&#x7CFB; Element classEle = document.addElement(&quot;class&quot;); Element personEle = classEle.addElement(&quot;person&quot;); Element nameEle = personEle.addElement(&quot;name&quot;); personEle.addAttribute(&quot;id&quot;, &quot;1&quot;); nameEle.setText(&quot;&#x5C0F;&#x660E;&quot;); // &#x8BBE;&#x7F6E;&#x751F;&#x6210;xml&#x5185;&#x5BB9;&#x7684;&#x683C;&#x5F0F;&#xFF0C;&#x6362;&#x884C; OutputFormat of = OutputFormat.createPrettyPrint(); System.out.println(document.asXML()); // &#x8BBE;&#x7F6E;&#x7F16;&#x7801; of.setEncoding(&quot;UTF-8&quot;); File fileWriter; try { // &#x521B;&#x5EFA;&#x6587;&#x4EF6; fileWriter = new File(&quot;dom4j.xml&quot;); // dom4j&#x63D0;&#x4F9B;&#x7684;&#x4E13;&#x95E8;&#x7684;&#x6587;&#x4EF6;&#x5199;&#x5165;&#x5BF9;&#x8C61;XMLWriter XMLWriter xmlWriter = new XMLWriter( new FileOutputStream(fileWriter), of); xmlWriter.write(document); xmlWriter.flush(); xmlWriter.close(); } catch (IOException e) { e.printStackTrace(); } }} 5 JDOM&#x65B9;&#x5F0F;&#x751F;&#x6210;&#x4E0E;DOM4J&#x7C7B;&#x4F3C;JDOM&#x4E5F;&#x662F;&#x4E00;&#x79CD;&#x7B2C;&#x4E09;&#x65B9;&#x7684;&#x57FA;&#x4E8E;&#x5E95;&#x5C42;API&#x65B9;&#x5F0F;&#x7684;&#x4E00;&#x79CD;&#x64CD;&#x4F5C;XML&#x6587;&#x4EF6;&#x7684;&#x5DE5;&#x5177;&#xFF0C;&#x5B83;&#x57FA;&#x4E8E;&#x6811;&#x578B;&#x7ED3;&#x6784;&#xFF0C;&#x5229;&#x7528;&#x7EAF;JAVA&#x7684;&#x6280;&#x672F;&#x5BF9;XML&#x6587;&#x6863;&#x5B9E;&#x73B0;&#x89E3;&#x6790;&#x3001;&#x751F;&#x6210;&#x3001;&#x5E8F;&#x5217;&#x5316;&#x4EE5;&#x53CA;&#x591A;&#x79CD;&#x64CD;&#x4F5C;&#x3002;&#x4E0E;&#x5176;&#x5B83;&#x65B9;&#x5F0F;&#x76F8;&#x6BD4;&#xFF0C;&#x5B83;&#x4F7F;&#x7528;&#x8D77;&#x6765;&#x66F4;&#x4FBF;&#x6377;&#xFF0C;&#x4F46;&#x662F;&#x6548;&#x7387;&#x8F83;&#x4F4E;&#xFF0C;&#x5EFA;&#x8BAE;&#x5728;&#x5C0F;&#x6587;&#x6863;&#x60C5;&#x51B5;&#x4E0B;&#x4F7F;&#x7528;&#x3002;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A; 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748package com.jamie.writer;import java.io.File;import java.io.FileNotFoundException;import java.io.FileOutputStream;import java.io.IOException;import java.io.OutputStream;import java.io.OutputStreamWriter;import org.jdom2.Document;import org.jdom2.Element;import org.jdom2.output.Format;import org.jdom2.output.XMLOutputter;public class JdomWriter { public static void main(String[] args) { JdomWriter jd = new JdomWriter(); jd.createXml(); } public void createXml() { // &#x521B;&#x5EFA;&#x6839;&#x8282;&#x70B9; Element root = new Element(&quot;class&quot;); // &#x751F;&#x6210;&#x4E00;&#x4E2A;document&#x5BF9;&#x8C61; Document document = new Document(root); // &#x521B;&#x5EFA;person&#x8282;&#x70B9; Element person = new Element(&quot;person&quot;); person.setAttribute(&quot;id&quot;, &quot;1&quot;); root.addContent(person); // &#x521B;&#x5EFA;nam&#x8282;&#x70B9; Element name = new Element(&quot;name&quot;); name.setText(&quot;&#x5C0F;&#x660E;&quot;); person.addContent(name); // &#x5BF9;xml&#x8FDB;&#x884C;&#x6392;&#x7248;&#x683C;&#x5F0F;&#x5316;,&#x4E24;&#x79CD;&#x65B9;&#x5F0F; Format format = Format.getPrettyFormat(); /* ** Format format =Format.getCompactFormat(); format.setIndent(&quot;&quot;); */ // &#x521B;&#x5EFA;XMLOutputter&#x5BF9;&#x8C61; XMLOutputter out = new XMLOutputter(format); // &#x4F7F;&#x7528;XMLOutputter&#x5BF9;&#x8C61;&#x5C06;Document&#x5BF9;&#x8C61;&#x8F6C;&#x6210;xml&#x6587;&#x6863; try { out.output(document, new FileOutputStream(new File(&quot;jdom.xml&quot;))); } catch (FileNotFoundException e) { e.printStackTrace(); } catch (IOException e) { e.printStackTrace(); } }} 6 &#x603B;&#x7ED3;&#x4EE5;&#x4E0A;&#x4EE3;&#x7801;&#x751F;&#x6210;&#x7684;xml&#x6587;&#x4EF6;&#x5185;&#x5BB9;&#x90FD;&#x5E94;&#x8BE5;&#x5982;&#x4E0B;&#xFF1A; 123456&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&lt;class&gt; &lt;person id=&quot;1&quot;&gt; &lt;name&gt;&#x5C0F;&#x660E;&lt;/name&gt; &lt;/person&gt;&lt;/class&gt; &#x4F8B;&#x5B50;&#x90FD;&#x6BD4;&#x8F83;&#x7B80;&#x5355;&#xFF0C;&#x4F46;&#x662F;&#x5E38;&#x7528;&#x7684;&#x6D89;&#x53CA;&#x5230;&#x4E86;&#xFF0C;&#x51E0;&#x79CD;&#x65B9;&#x6CD5;&#x4E2D;&#x6700;&#x5E38;&#x7528;&#x7684;&#x8FD8;&#x662F;&#x5C5E;&#x4E8E;DOM4J&#x7684;&#x65B9;&#x5F0F;&#xFF0C;&#x73B0;&#x5728;&#x5F88;&#x591A;&#x6846;&#x67B6;&#x4E2D;&#x4E5F;&#x4F7F;&#x7528;&#x8FD9;&#x79CD;&#x65B9;&#x5F0F;&#x3002;&#x4EE5;&#x4E0A;&#x4EE3;&#x7801;&#x90FD;&#x662F;&#x81EA;&#x5DF1;&#x4E00;&#x4E2A;&#x4E2A;&#x6572;&#x7684;&#xFF0C;&#x4E00;&#x662F;&#x8BA9;&#x81EA;&#x5DF1;&#x52A0;&#x6DF1;&#x5B66;&#x4E60;&#x5370;&#x8C61;&#xFF0C;&#x4E8C;&#x662F;&#x5982;&#x679C;&#x53EF;&#x4EE5;&#x4E5F;&#x7ED9;&#x9700;&#x8981;&#x7684;&#x4EBA;&#x505A;&#x4E00;&#x4E2A;&#x53C2;&#x8003;&#x3002;&#x56E0;&#x4E3A;&#x81EA;&#x5DF1;&#x8FD8;&#x5728;&#x521D;&#x7EA7;&#x5B66;&#x4E60;&#x9636;&#x6BB5;&#xFF0C;&#x5982;&#x679C;&#x6709;&#x95EE;&#x9898;&#xFF0C;&#x5E0C;&#x671B;&#x6709;&#x5FC3;&#x4EBA;&#x6307;&#x51FA;&#xFF0C;&#x76F8;&#x4E92;&#x4EA4;&#x6D41;&#x5B66;&#x4E60;&#xFF0C;&#x8C22;&#x8C22;&#xFF01;","tags":[{"name":"技术","slug":"技术","permalink":"http://todoright.com/tags/技术/"},{"name":"java","slug":"java","permalink":"http://todoright.com/tags/java/"},{"name":"xml读写","slug":"xml读写","permalink":"http://todoright.com/tags/xml读写/"}]},{"title":"Java操作XML文件（读）","date":"2016-11-24T08:15:13.000Z","path":"2016/11/24/Java操作XML文件（读）/","text":"1 &#x6982;&#x8FF0;&#xFF1A;&#x76EE;&#x524D;&#xFF0C;Java&#x5E73;&#x53F0;&#x4E0A;&#x5BF9;XML&#x6587;&#x4EF6;&#x7684;&#x64CD;&#x4F5C;&#x4E3B;&#x8981;&#x6709;4&#x4E2D;&#x65B9;&#x5F0F;&#xFF1A;DOM&#x3001;SAX&#x3001;DOM4J&#x4EE5;&#x53CA;JDOM&#xFF0C;&#x524D;&#x4E24;&#x79CD;Java&#x5E73;&#x53F0;&#x81EA;&#x5E26;&#x7684;&#x89E3;&#x6790;&#x64CD;&#x4F5C;&#x65B9;&#x5F0F;&#xFF0C;&#x540E;&#x4E24;&#x79CD;&#x662F;&#x7B2C;&#x4E09;&#x65B9;&#x63D0;&#x4F9B;&#x7684;&#xFF0C;&#x6240;&#x4EE5;&#x4F7F;&#x7528;&#x7684;&#x65F6;&#x5019;&#x9700;&#x8981;&#x5BFC;&#x5165;&#x76F8;&#x5E94;&#x7684;jar&#x5305;&#xFF0C;&#x9700;&#x8981;&#x7684;&#x53EF;&#x4EE5;&#x53BB;&#x4E0B;&#x8F7D; &#xFF1A;jar&#x5305;&#x4E0B;&#x8F7D;&#x3002; 2 DOM &#x65B9;&#x5F0F;&#x89E3;&#x6790;DOM&#x65B9;&#x5F0F;&#x5B98;&#x65B9;&#x63D0;&#x4F9B;&#x7684;&#x65B9;&#x5F0F;&#xFF0C;&#x975E;Java&#x5E73;&#x53F0;&#x72EC;&#x6709;&#xFF0C;&#x5F88;&#x591A;&#x5176;&#x5B83;&#x5E73;&#x53F0;&#x4E5F;&#x53EF;&#x4F7F;&#x7528;&#x6B64;&#x65B9;&#x5F0F;&#xFF0C;&#x5373;&#x5177;&#x6709;&#x8DE8;&#x5E73;&#x53F0;&#x7684;&#x7279;&#x70B9;&#xFF0C;&#x5B83;&#x7684;&#x7279;&#x70B9;&#x4E3B;&#x8981;&#x662F;&#x6613;&#x7528;&#x6027;&#x5F3A;&#xFF0C;&#x904D;&#x5386;&#x7B80;&#x5355;&#xFF0C;&#x4F46;&#x662F;&#x56E0;&#x4E3A;&#x5B83;&#x662F;&#x4E00;&#x6B21;&#x6027;&#x5C06;XML&#x6587;&#x6863;&#x5168;&#x90E8;&#x8BFB;&#x53D6;&#x5230;&#x5185;&#x5B58;&#x4E2D;&#xFF0C;&#x6240;&#x4EE5;&#x6BD4;&#x8F83;&#x5403;&#x5185;&#x5B58;&#xFF0C;&#x6548;&#x7387;&#x4F4E;&#xFF0C;&#x5F53;&#x6587;&#x4EF6;&#x5F88;&#x5927;&#x65F6;&#xFF0C;&#x5BB9;&#x6613;&#x53D1;&#x751F;&#x5185;&#x5B58;&#x6CC4;&#x6F0F;&#x3002;&#x4E3B;&#x8981;&#x64CD;&#x4F5C;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF0C;&#x6CE8;&#x91CA;&#x5F88;&#x8BE6;&#x7EC6;&#xFF0C;&#x5C31;&#x4E0D;&#x518D;&#x505A;&#x8BF4;&#x660E;&#xFF1A; 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081package com.jamie.xml;import java.io.IOException;import javax.xml.parsers.DocumentBuilder;import javax.xml.parsers.DocumentBuilderFactory;import javax.xml.parsers.ParserConfigurationException;import org.w3c.dom.Document;import org.w3c.dom.NamedNodeMap;import org.w3c.dom.Node;import org.w3c.dom.NodeList;import org.xml.sax.SAXException;/** * DOM&#x65B9;&#x5F0F;&#x89E3;&#x6790;XML&#x6587;&#x4EF6; * * @author Jamie * */public class DomTest { public void parseXml() { // &#x901A;&#x8FC7;&#x5DE5;&#x5382;&#x7C7B;&#x7684;newInstance&#xFF0C;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;DocumentBuilderFactory&#x7684;&#x5BF9;&#x8C61; DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance(); try { // &#x83B7;&#x5F97;&#x4E00;&#x4E2A;DocumentBuilder&#x5BF9;&#x8C61; DocumentBuilder db = dbf.newDocumentBuilder(); // &#x901A;&#x8FC7;DocumentBuilder&#x7684;parse&#x65B9;&#x6CD5;&#x8BFB;&#x53D6;xml&#x6587;&#x4EF6;&#xFF0C;&#x5F97;&#x5230;Document&#x5BF9;&#x8C61; System.out.println(&quot;=======&#x5F00;&#x59CB;&#x89E3;&#x6790;XML&#x6587;&#x4EF6;======&quot;); Document doc = db.parse(&quot;class.xml&quot;); // &#x83B7;&#x53D6;&#x6240;&#x6709;person&#x8282;&#x70B9;&#x7684;&#x96C6;&#x5408; NodeList personList = doc.getElementsByTagName(&quot;person&quot;); // getLength&#x65B9;&#x6CD5;&#x53EF;&#x83B7;&#x5F97;&#x8282;&#x70B9;&#x7684;&#x4E2A;&#x6570; System.out.println(&quot;&#x5F53;&#x524D;&#x5171;&#x6709; &quot; + personList.getLength() + &quot;&#x4E2A;&#x8282;&#x70B9;&quot;); // &#x904D;&#x5386;&#x8282;&#x70B9; for (int i = 0; i &lt; personList.getLength(); i++) { System.out.println(&quot;=======&#x7B2C;&quot; + (i + 1) + &quot;&#x4E2A;&#x8282;&#x70B9;========&quot;); // &#x5982;&#x679C;&#x77E5;&#x9053;&#x8282;&#x70B9;&#x7684;&#x5C5E;&#x6027;&#x540D;&#x5E76;&#x53EA;&#x6709;&#x4E00;&#x4E2A;&#x5C5E;&#x6027;&#x65F6;&#x53EF;&#x7528;&#x4E0B;&#x9762;&#x7684;&#x65B9;&#x6CD5;&#xFF1A; /** * Element attEl = (Element) personList.item(i); * //getAttribute()&#x65B9;&#x6CD5;&#x83B7;&#x53D6;&#x5C5E;&#x6027;&#x503C; * System.out.println(&quot;ID:&quot;+attEl.getAttribute(&quot;id&quot;)); */ Node personNode = personList.item(i); // &#x83B7;&#x53D6;&#x5F53;&#x524D;&#x8282;&#x70B9;&#x7684;&#x5C5E;&#x6027;&#x4FE1;&#x606F;&#xFF0C;&#x6CE8;&#x610F;&#x8FD4;&#x56DE;&#x503C;&#x662F;NamedNodeMap NamedNodeMap attrs = personNode.getAttributes(); // &#x904D;&#x5386;&#x5C5E;&#x6027;&#x4FE1;&#x606F;&#xFF0C;getLength&#x65B9;&#x6CD5;&#x53EF;&#x83B7;&#x5F97;&#x5C5E;&#x6027;&#x7684;&#x4E2A;&#x6570; for (int j = 0; j &lt; attrs.getLength(); j++) { Node attr = attrs.item(j); // &#x83B7;&#x5F97;&#x5C5E;&#x6027;&#x540D;&#x548C;&#x5C5E;&#x6027;&#x503C; System.out.println(attr.getNodeName() + &quot;=&quot; + attr.getNodeValue()); } // &#x904D;&#x5386;&#x5B50;&#x8282;&#x70B9; NodeList chilNodes = personNode.getChildNodes(); // &#x6253;&#x5370;&#x8282;&#x70B9;&#x6570;&#xFF0C;&#x4F1A;&#x53D1;&#x73B0;&#x8F93;&#x51FA;&#x7684;&#x7ED3;&#x679C;&#x7528;&#x6211;&#x4EEC;&#x5728;XML&#x4E2D;&#x770B;&#x5230;&#x7684;&#x6709;&#x5DEE;&#x5F02;&#xFF0C;&#x56E0;&#x4E3A;&#x7A0B;&#x5E8F;&#x628A;&#x4E24;&#x4E2A;&#x8282;&#x70B9;&#x95F4;&#x7684;&#x6362;&#x884C;&#x7A7A;&#x683C;&#x4E5F;&#x7B97;&#x4F5C;&#x4E86;&#x4E00;&#x4E2A;&#x8282;&#x70B9;&#xFF0C;&#x4E00;&#x4E2A;&#x7C7B;&#x578B;&#x4E3A;text&#x7684;&#x8282;&#x70B9; // &#x800C;&#x50CF;&lt;sex&gt;&lt;/sex&gt;&#x8FD9;&#x79CD;&#x5C5E;&#x4E8E;Element&#x8282;&#x70B9; System.out.println(&quot;&#x5F53;&#x524D;&#x8282;&#x70B9;&#x4E0B;&#x5171;&#x6709;&#xFF1A;&quot; + chilNodes.getLength() + &quot;&#x4E2A;&#x8282;&#x70B9;&quot;); for (int j = 0; j &lt; chilNodes.getLength(); j++) { Node child = chilNodes.item(j); // &#x533A;&#x5206;&#x51FA;text&#x7C7B;&#x578B;&#x7684;&#x8282;&#x70B9;&#x4EE5;&#x53CA;element&#x7C7B;&#x578B;&#x7684;&#x8282;&#x70B9; if (child.getNodeType() != Node.TEXT_NODE) // &#x6253;&#x5370;&#x8F93;&#x5165;&#x8282;&#x70B9;&#x540D;&#x548C;&#x5BF9;&#x5E94;&#x7684;&#x503C;,&#x6CE8;&#x610F;&#x83B7;&#x53D6;&#x503C;&#x91C7;&#x7528;&#x7684;&#x662F;getTextContent&#xFF0C;&#x800C;&#x4E0D;&#x662F;getNodeValue() System.out.println(child.getNodeName() + &quot;:&quot; + child.getTextContent()); } } } catch (ParserConfigurationException e) { e.printStackTrace(); } catch (SAXException e) { e.printStackTrace(); } catch (IOException e) { e.printStackTrace(); } } public static void main(String[] args) { DomTest dt = new DomTest(); // &#x8C03;&#x7528;DOM&#x89E3;&#x6790;&#x65B9;&#x6CD5; dt.parseXml(); }} 3 SAX&#x65B9;&#x5F0F;&#x89E3;&#x6790;&#x4E0A;&#x9762;&#x8BF4;&#x9053;DOM&#x89E3;&#x6790;&#x9700;&#x8981;&#x4E00;&#x6B21;&#x6027;&#x5C06;XML&#x6587;&#x4EF6;&#x8BFB;&#x5230;&#x5185;&#x5B58;&#x4E2D;&#xFF0C;&#x5F53;&#x6587;&#x4EF6;&#x5F88;&#x5927;&#x65F6;&#xFF0C;&#x4F1A;&#x9020;&#x6210;&#x6548;&#x7387;&#x4F4E;&#x4E0B;&#x7B49;&#x95EE;&#x9898;&#xFF0C;&#x800C;SAX&#x89E3;&#x6790;&#x76F8;&#x6BD4;DOM&#x5C31;&#x662F;&#x4E00;&#x79CD;&#x901F;&#x5EA6;&#x66F4;&#x5FEB;&#x66F4;&#x6709;&#x6548;&#x7684;&#x65B9;&#x5F0F;&#xFF0C;&#x56E0;&#x4E3A;&#x5B83;&#x91C7;&#x7528;&#x7684;&#x662F;&#x4E00;&#x884C;&#x884C;&#x8BFB;&#x53D6;XML&#x6587;&#x4EF6;&#x7684;&#x65B9;&#x5F0F;&#xFF0C;&#x4F46;&#x662F;&#x4E5F;&#x6B63;&#x662F;&#x8FD9;&#x6837;&#x7684;&#x7279;&#x6027;&#x5BFC;&#x81F4;SAX&#x7684;&#x64CD;&#x4F5C;&#x4F1A;&#x6BD4;&#x8F83;&#x590D;&#x6742;&#xFF0C;&#x57FA;&#x4E8E;&#x4E8B;&#x4EF6;&#x9A71;&#x52A8;&#x65B9;&#x5F0F;&#xFF0C;&#x7075;&#x6D3B;&#x6027;&#x4E5F;&#x6BD4;&#x8F83;&#x4F4E;&#xFF0C;&#x5177;&#x4F53;&#x64CD;&#x4F5C;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF08;SAX&#x89E3;&#x6790;&#x65F6;&#xFF0C;&#x9700;&#x8981;&#x4E00;&#x4E2A;DefaultHandler&#x7C7B;&#xFF0C;&#x6240;&#x4EE5;&#x4EE3;&#x7801;&#x5206;&#x4E24;&#x5757;&#xFF09;&#xFF1A;SaxTest&#x7C7B;&#xFF1A; 12345678910111213141516171819202122232425262728293031323334353637383940package com.jamie.xml;import java.io.IOException;import javax.xml.parsers.ParserConfigurationException;import javax.xml.parsers.SAXParser;import javax.xml.parsers.SAXParserFactory;import org.xml.sax.SAXException;import com.jamie.handler.SaxParserHandler;/** * SAX&#x65B9;&#x5F0F;&#x89E3;&#x6790;XML&#x6587;&#x4EF6; * * @author Jamie * */public class SaxTest { public void saxParse() { // &#x901A;&#x8FC7;SAXParserFactory&#x7C7B;&#x7684;newInstance()&#x65B9;&#x6CD5;&#x83B7;&#x5F97;&#x4E00;&#x4E2A;SAXParserFactory&#x5BF9;&#x8C61; SAXParserFactory saf = SAXParserFactory.newInstance(); try { // &#x521B;&#x5EFA;&#x4E00;&#x4E2A;SAXParser&#x5BF9;&#x8C61; SAXParser parser = saf.newSAXParser(); // SAX&#x89E3;&#x6790;XML &#x65F6;&#x9700;&#x8981;&#x4E00;&#x4E2A;&#x7C7B;&#x7EE7;&#x627F;DefaultHandler&#x7C7B;&#x6210;&#x4E3A;Handler&#x7C7B;&#xFF0C;&#x6765;&#x8FDB;&#x884C;&#x5177;&#x4F53;&#x7684;&#x89E3;&#x6790;&#x64CD;&#x4F5C; SaxParserHandler handler = new SaxParserHandler(); parser.parse(&quot;class.xml&quot;, handler); } catch (ParserConfigurationException e) { e.printStackTrace(); } catch (SAXException e) { e.printStackTrace(); } catch (IOException e) { e.printStackTrace(); } } public static void main(String[] args) { SaxTest st = new SaxTest(); st.saxParse(); }} SaxParserHandler&#x7C7B;&#xFF1A; 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172package com.jamie.handler;import org.xml.sax.Attributes;import org.xml.sax.SAXException;import org.xml.sax.helpers.DefaultHandler;public class SaxParserHandler extends DefaultHandler { int index = 0; // &#x5F00;&#x59CB;&#x904D;&#x5386;xml&#x6587;&#x6863; @Override public void startDocument() throws SAXException { // TODO Auto-generated method stub super.startDocument(); System.out.println(&quot;==&#x5F00;&#x59CB;&#x89E3;&#x6790;===&quot;); } // &#x7ED3;&#x675F;&#x904D;&#x5386;xml&#x6587;&#x6863; @Override public void endDocument() throws SAXException { // TODO Auto-generated method stub super.endDocument(); System.out.println(&quot;==&#x7ED3;&#x675F;&#x89E3;&#x6790;===&quot;); } // &#x904D;&#x5386;&#x5F00;&#x59CB;&#x6807;&#x7B7E; @Override public void startElement(String uri, String localName, String qName, Attributes attributes) throws SAXException { super.startElement(uri, localName, qName, attributes); // &#x5F00;&#x59CB;&#x89E3;&#x6790;person &#x6807;&#x7B7E;,&#x6807;&#x7B7E;&#x540D;&#x533A;&#x5206;&#x5927;&#x5C0F;&#x5199; if (qName.equals(&quot;person&quot;)) { index++; System.out.println(&quot;======&#x5F00;&#x59CB;&#x904D;&#x5386;&#x7B2C;&quot; + index + &quot;&#x4E2A;&#x4EBA;======&quot;); // &#x77E5;&#x9053;&#x5C5E;&#x6027;&#x540D;&#x53CA;&#x4E2A;&#x6570;&#x65F6;&#xFF1A; // String id = attributes.getValue(&quot;id&quot;); // System.out.println(&quot;&#x5C5E;&#x6027;&#x503C;&#x4E3A;&#xFF1A;&quot; + id); // &#x4E0D;&#x77E5;&#x9053;&#x5C5E;&#x6027;&#x540D;&#x53CA;&#x4E2A;&#x6570;&#x65F6;&#xFF1A; int length = attributes.getLength(); for (int i = 0; i &lt; length; i++) { String id = attributes.getValue(i); String name = attributes.getQName(i); System.out.println(&quot;&#x5C5E;&#x6027;&#x540D;&#x4E3A;&#xFF1A;&quot; + name + &quot;&#xFF1B;&#x5C5E;&#x6027;&#x503C;&#x4E3A;&#xFF1A;&quot; + id); } } else { if (!qName.equals(&quot;class&quot;) || !qName.equals(&quot;person&quot;)) System.out.print(&quot;&#x8282;&#x70B9;&#x540D;&#x662F;&#xFF1A;&quot; + qName); } } // &#x904D;&#x5386;&#x7ED3;&#x675F;&#x6807;&#x7B7E; @Override public void endElement(String uri, String localName, String qName) throws SAXException { // TODO Auto-generated method stub super.endElement(uri, localName, qName); // &#x5224;&#x65AD;&#x662F;&#x5426;&#x7ED3;&#x675F;person&#x6807;&#x7B7E; if (qName.equals(&quot;person&quot;)) { System.out.println(&quot;======&#x7ED3;&#x675F;&#x904D;&#x5386;&#x7B2C;&quot; + index + &quot;&#x4E2A;&#x4EBA;======&quot;); } } // &#x83B7;&#x53D6;&#x8282;&#x70B9;&#x7684;&#x5185;&#x5BB9;char[] ch&#x662F;&#x6587;&#x6863;&#x91CC;&#x7684;&#x6240;&#x6709;&#x8282;&#x70B9;&#x5185;&#x5BB9; @Override public void characters(char[] ch, int start, int length) throws SAXException { super.characters(ch, start, length); String value = new String(ch, start, length); if (!value.trim().equals(&quot;&quot;)) { System.out.println(&quot;&#x8282;&#x70B9;&#x503C;:&quot; + value); } }} 4 JDOM&#x65B9;&#x5F0F;&#x89E3;&#x6790;JDOM&#x662F;&#x4E00;&#x79CD;&#x7B80;&#x5316;&#x7684;API&#xFF0C;&#x4F7F;&#x7528;&#x5177;&#x4F53;&#x7C7B;&#x800C;&#x4E0D;&#x662F;&#x63A5;&#x53E3;&#xFF0C;&#x8FD9;&#x6837;&#x65B9;&#x4FBF;&#x4F7F;&#x7528;&#xFF0C;&#x4F46;&#x662F;&#x540C;&#x65F6;&#x7075;&#x6D3B;&#x6027;&#x6BD4;&#x8F83;&#x4F4E;&#xFF0C;API&#x5927;&#x91CF;&#x4F7F;&#x7528;&#x4E86;Collections&#x7C7B;&#xFF0C;&#x5982;&#x679C;&#x4F60;&#x5BF9;&#x96C6;&#x5408;&#x7C7B;&#x719F;&#x6089;&#xFF0C;&#x4F7F;&#x7528;JDOM&#x5C31;&#x4F1A;&#x5F88;&#x5BB9;&#x6613;&#xFF0C;&#x5177;&#x4F53;&#x64CD;&#x4F5C;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A; 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768package com.jamie.xml;import java.io.FileInputStream;import java.io.FileNotFoundException;import java.io.IOException;import java.io.InputStream;import java.io.InputStreamReader;import java.util.List;import org.jdom2.Attribute;import org.jdom2.Document;import org.jdom2.Element;import org.jdom2.JDOMException;import org.jdom2.input.SAXBuilder;/** * JDOM&#x65B9;&#x5F0F;&#x89E3;&#x6790;XML&#x6587;&#x4EF6; * * @author JamieXu * */public class JDomTest { public static void main(String[] args) { // &#x4F7F;&#x7528;JDOM&#x65B9;&#x5F0F;&#x89E3;&#x6790;&#xFF0C;&#x9996;&#x5148;&#x9700;&#x8981;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;SAXBuilder&#x5BF9;&#x8C61; SAXBuilder saxb = new SAXBuilder(); // &#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x8F93;&#x5165;&#x6D41;&#xFF0C;&#x5C06;XML&#x6587;&#x4EF6;&#x8BFB;&#x53D6;&#x5230;&#x8F93;&#x5165;&#x6D41;&#x4E2D; InputStream is; try { is = new FileInputStream(&quot;class.xml&quot;); //&#x7528;InputStreamReader&#x5305;&#x88C5;&#x4E00;&#x4E0B;InputStream&#xFF0C;&#x5C06;&#x5B57;&#x8282;&#x6D41;&#x8F6C;&#x6362;&#x4E3A;&#x5B57;&#x7B26;&#x6D41;&#xFF0C;&#x6307;&#x5B9A;&#x5B57;&#x7B26;&#x96C6;&#x53EF;&#x4EE5;&#x89E3;&#x51B3;&#x89E3;&#x6790;&#x65F6;&#x51FA;&#x73B0;&#x7684;&#x4E71;&#x7801; InputStreamReader isr= new InputStreamReader(is, &quot;UTF-8&quot;); // &#x901A;&#x8FC7;SAXBuilder&#x7684;build&#x65B9;&#x6CD5;&#xFF0C;&#x5C06;&#x8F93;&#x5165;&#x6D41;&#x8BFB;&#x53D6;&#xFF0C;&#x8FD4;&#x56DE;&#x7684;&#x662F;Document&#x5BF9;&#x8C61; Document doc = saxb.build(isr); // &#x83B7;&#x53D6;XML&#x6587;&#x4EF6;&#x7684;&#x6839;&#x8282;&#x70B9; Element rootElement = doc.getRootElement(); // &#x83B7;&#x53D6;&#x6839;&#x8282;&#x70B9;&#x4E0B;&#x7684;&#x6240;&#x6709;&#x5B50;&#x8282;&#x70B9;&#xFF0C;&#x8FD4;&#x56DE;&#x7684;&#x4E00;&#x4E2A;Element&#x7684;&#x96C6;&#x5408; List&lt;Element&gt; personList = rootElement.getChildren(); for (Element person : personList) { System.out.println(&quot;=====&#x5F00;&#x59CB;&#x89E3;&#x6790;&#x7B2C;&quot; + (personList.indexOf(person) + 1) + &quot;&#x4E2A;&#x4EBA;=====&quot;); // &#x89E3;&#x6790;&#x5C5E;&#x6027; List&lt;Attribute&gt; attrList = person.getAttributes(); for (Attribute attr : attrList) { String name = attr.getName(); String value = attr.getValue(); System.out.println(&quot;&#x5C5E;&#x6027;&#x540D;:&quot; + name + &quot; &#x5C5E;&#x6027;&#x503C;:&quot; + value); } // &#x904D;&#x5386;&#x83B7;&#x53D6;&#x89E3;&#x6790;&#x4E0B;&#x4E00;&#x7EA7;&#x7684;&#x6240;&#x6709;&#x5B50;&#x8282;&#x70B9;&#xFF0C;&#x5373;person&#x4E0B;&#x7684;&#x5B50;&#x8282;&#x70B9; List&lt;Element&gt; personChildList = person.getChildren(); for (Element personChild : personChildList) { for (Attribute attr : attrList) { String name = personChild.getName(); String value = personChild.getValue(); System.out.println(&quot;&#x8282;&#x70B9;&#x540D;:&quot; + name + &quot; &#x8282;&#x70B9;&#x503C;:&quot; + value); } } System.out.println(&quot;=====&#x7ED3;&#x675F;&#x89E3;&#x6790;&#x7B2C;&quot; + (personList.indexOf(person) + 1) + &quot;&#x4E2A;&#x4EBA;=====&quot;); } } catch (FileNotFoundException e) { e.printStackTrace(); } catch (JDOMException e) { e.printStackTrace(); } catch (IOException e) { e.printStackTrace(); } }} 5 DOM4J&#x65B9;&#x5F0F;&#x89E3;&#x6790;DOM4J&#x4F7F;&#x7528;&#x63A5;&#x53E3;&#x548C;&#x62BD;&#x8C61;&#x57FA;&#x672C;&#x7C7B;&#x65B9;&#x6CD5;&#xFF0C;&#x662F;&#x4E00;&#x4E2A;&#x4F18;&#x79C0;&#x7684;Java XML API&#xFF0C;&#x662F;JDOM&#x7684;&#x4E00;&#x79CD;&#x667A;&#x80FD;&#x5206;&#x652F;&#xFF0C;&#x5408;&#x5E76;&#x4E86;&#x8BB8;&#x591A;&#x8D85;&#x51FA;&#x57FA;&#x672C;XML&#x6587;&#x6863;&#x8868;&#x793A;&#x7684;&#x529F;&#x80FD;&#xFF0C;&#x5177;&#x6709;&#x6027;&#x80FD;&#x4F18;&#x5F02;&#x3001;&#x529F;&#x80FD;&#x5F3A;&#x5927;&#x548C;&#x6781;&#x5176;&#x6613;&#x4F7F;&#x7528;&#x7684;&#x7279;&#x70B9;&#xFF0C;&#x56E0;&#x6B64;&#x662F;&#x4F7F;&#x7528;&#x975E;&#x5E38;&#x5E7F;&#x6CDB;&#x7684;&#x4E00;&#x4E2D;&#x89E3;&#x6790;XML&#x6587;&#x4EF6;&#x7684;&#x65B9;&#x5F0F;&#x3002;&#x5177;&#x4F53;&#x64CD;&#x4F5C;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A; 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950package com.jamie.xml;import java.io.File;import java.util.Iterator;import java.util.List;import org.dom4j.Attribute;import org.dom4j.Document;import org.dom4j.DocumentException;import org.dom4j.Element;import org.dom4j.io.SAXReader;/** * Dom4jTest&#x65B9;&#x5F0F;&#x89E3;&#x6790;XML&#x6587;&#x4EF6; * * @author JamieXu * */public class Dom4jTest { public static void main(String[] args) { // &#x521B;&#x5EFA;SAXReader&#x5BF9;&#x8C61; SAXReader sar = new SAXReader(); try { // &#x901A;&#x8FC7;SAXReader&#x5BF9;&#x8C61;&#x7684;read&#x65B9;&#x6CD5;&#x52A0;&#x8F7D;xml&#x6587;&#x4EF6;&#xFF0C;&#x8FD4;&#x56DE;Document&#x5BF9;&#x8C61; Document doc = sar.read(new File(&quot;class.xml&quot;)); // &#x83B7;&#x53D6;&#x6839;&#x8282;&#x70B9;&#x53CA;&#x5176;&#x8FED;&#x4EE3;&#x5668; Element rootElement = doc.getRootElement(); Iterator eIterator = rootElement.elementIterator(); // &#x904D;&#x5386;&#x8FED;&#x4EE3;&#x5668;,&#x83B7;&#x53D6;&#x6839;&#x8282;&#x70B9;&#x4E2D;&#x7684;&#x4FE1;&#x606F; while (eIterator.hasNext()) { Element person = (Element) eIterator.next(); System.out.println(&quot;====&#x5F00;&#x59CB;&#x89E3;&#x6790;&#x67D0;&#x4E2A;&quot; + person.getName() + &quot;====&quot;); List&lt;Attribute&gt; attrList = person.attributes(); for (Attribute attribute : attrList) { System.out.println(&quot;&#x5C5E;&#x6027;&#x540D;&#xFF1A;&quot; + attribute.getName() + &quot; &#x5C5E;&#x6027;&#x503C;&#xFF1A;&quot; + attribute.getValue()); } // &#x83B7;&#x53D6;Person&#x8282;&#x70B9;&#x7684;&#x5B50;&#x8282;&#x70B9;&#x8FED;&#x4EE3;&#x5668;&#x5E76;&#x904D;&#x5386;&#x8282;&#x70B9; Iterator childIterator = person.elementIterator(); while (childIterator.hasNext()) { Element child = (Element) childIterator.next(); System.out.println(&quot;&#x8282;&#x70B9;&#x540D;&#xFF1A;&quot; + child.getName() + &quot; &#x8282;&#x70B9;&#x503C;&#xFF1A;&quot; + child.getText()); } System.out.println(&quot;====&#x7ED3;&#x675F;&#x89E3;&#x6790;====&quot;); } } catch (DocumentException e) { e.printStackTrace(); } }} &#x6700;&#x540E;&#x9644;&#x4E0A;&#x6D4B;&#x8BD5;&#x8BFB;&#x53D6;&#x7528;&#x7684;XML&#x4F8B;&#x5B50;&#xFF1A;1234567891011121314&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&lt;class&gt;&lt;person id=&quot;1&quot;&gt; &lt;name&gt;&#x5C0F;&#x660E;&lt;/name&gt; &lt;age&gt;13&lt;/age&gt; &lt;sex&gt;&#x7537;&lt;/sex&gt; &lt;hobby&gt;&#x7BEE;&#x7403;&lt;/hobby&gt;&lt;/person&gt;&lt;person id=&quot;2&quot;&gt; &lt;name&gt;&#x5C0F;&#x7EA2;&lt;/name&gt; &lt;age&gt;12&lt;/age&gt; &lt;sex&gt;&#x5973;&lt;/sex&gt;&lt;/person&gt;&lt;/class&gt; &#x4EE5;&#x4E0A;&#x4EE3;&#x7801;&#x90FD;&#x662F;&#x81EA;&#x5DF1;&#x8FB9;&#x770B;&#x8FB9;&#x5B66;&#x8FB9;&#x6572;&#x51FA;&#x6765;&#xFF0C;&#x5982;&#x679C;&#x6709;&#x4EC0;&#x4E48;&#x95EE;&#x9898;&#xFF0C;&#x6B22;&#x8FCE;&#x5927;&#x5BB6;&#x6307;&#x51FA;&#xFF0C;&#x8C22;&#x8C22;&#xFF01;","tags":[{"name":"技术","slug":"技术","permalink":"http://todoright.com/tags/技术/"},{"name":"java","slug":"java","permalink":"http://todoright.com/tags/java/"},{"name":"xml读写","slug":"xml读写","permalink":"http://todoright.com/tags/xml读写/"}]},{"title":"Java设计模式第二弹之结构型模式","date":"2016-11-23T07:38:36.000Z","path":"2016/11/23/Java设计模式第二弹之结构型设计模式/","text":"&#x4EE3;&#x7406;&#x6A21;&#x5F0F;1 &#x4F55;&#x4E3A;&#x4EE3;&#x7406;&#x6A21;&#x5F0F;&#x4EE3;&#x7406;&#x6A21;&#x5F0F;&#xFF08;&#x4E5F;&#x53EB;&#x59D4;&#x6258;&#x6A21;&#x5F0F;&#xFF09;&#x7684;&#x5B9A;&#x4E49;&#xFF1A;&#x4E3A;&#x67D0;&#x4E2A;&#x5BF9;&#x8C61;&#x63D0;&#x4F9B;&#x4E00;&#x79CD;&#x4EE3;&#x7406;&#xFF0C;&#x4EE5;&#x63A7;&#x5236;&#x5BF9;&#x8FD9;&#x4E2A;&#x5BF9;&#x8C61;&#x7684;&#x8BBF;&#x95EE;&#xFF0C;&#x4EE3;&#x7406;&#x5BF9;&#x8C61;&#x8D77;&#x5230;&#x4E00;&#x4E2A;&#x4E2D;&#x4ECB;&#x4F5C;&#x7528;&#xFF0C;&#x53EF;&#x4EE5;&#x53BB;&#x6389;&#x539F;&#x6709;&#x7684;&#x529F;&#x80FD;&#x6216;&#x589E;&#x52A0;&#x989D;&#x5916;&#x7684;&#x529F;&#x80FD;&#x670D;&#x52A1;&#x3002;&#x706B;&#x8F66;&#x7968;&#x4EE3;&#x552E;&#x70B9;&#x5C31;&#x662F;&#x706B;&#x8F66;&#x7AD9;&#x7684;&#x4EE3;&#x7406;&#xFF0C;Spring AOP&#xFF08;&#x5207;&#x9762;&#x7F16;&#x7A0B;&#xFF09;&#x4E5F;&#x662F;&#x4E00;&#x79CD;&#x4EE3;&#x7406;&#x6A21;&#x5F0F;&#x7684;&#x5B9E;&#x73B0;&#xFF0C;&#x53EF;&#x4EE5;&#x5728;&#x4E0D;&#x5F71;&#x54CD;&#x6216;&#x6539;&#x53D8;&#x88AB;&#x4EE3;&#x7406;&#x5BF9;&#x8C61;&#x7684;&#x60C5;&#x51B5;&#xFF0C;&#x5B9E;&#x73B0;&#x7279;&#x5B9A;&#x529F;&#x80FD;&#xFF0C;&#x5982;&#x8BB0;&#x5F55;&#x65E5;&#x5FD7;&#xFF0C;&#x6743;&#x9650;&#x63A7;&#x5236;&#x7B49;&#x3002;&#x6211;&#x4EEC;&#x5148;&#x6765;&#x770B;&#x4E00;&#x4E0B;&#x4EE3;&#x7406;&#x6A21;&#x5F0F;&#x7684;&#x901A;&#x7528;&#x7C7B;&#x56FE;&#xFF1A; &#x7C7B;&#x56FE;&#x4E2D;&#x4E00;&#x5171;&#x6709;&#x4E09;&#x79CD;&#x89D2;&#x8272;&#xFF1A; Subject&#x62BD;&#x8C61;&#x89D2;&#x8272;&#xFF1A;&#x4E3B;&#x8981;&#x662F;&#x8981;&#x88AB;&#x5B9E;&#x73B0;&#x7684;&#x62BD;&#x8C61;&#x7C7B;&#x6216;&#x63A5;&#x53E3;&#xFF0C;&#x5B9A;&#x4E49;&#x4E86;&#x4E1A;&#x52A1;&#x63A5;&#x53E3;&#x3002; RealSubject&#x771F;&#x5B9E;&#x89D2;&#x8272;&#xFF1A;&#x88AB;&#x4EE3;&#x7406;&#xFF08;&#x59D4;&#x6258;&#xFF09;&#x7C7B;&#xFF0C;&#x5B9E;&#x73B0;&#x4E86;Subject&#x4E2D;&#x7684;&#x4E1A;&#x52A1;&#x903B;&#x8F91;&#x3002; Proxy&#x89D2;&#x8272;&#xFF1A;&#x4EE3;&#x7406;&#xFF08;&#x59D4;&#x6258;&#xFF09;&#x7C7B;&#xFF0C;&#x662F;RealSubject&#x7684;&#x4EE3;&#x7406;&#xFF0C;&#x4E5F;&#x5B9E;&#x73B0;&#x4E86;Subject&#x89D2;&#x8272;&#xFF0C;&#x4F46;&#x901A;&#x8FC7;RealSubject&#x6765;&#x5B9E;&#x73B0;&#x5177;&#x4F53;&#x4E1A;&#x52A1;&#x529F;&#x80FD;&#xFF0C;&#x5E76;&#x9644;&#x52A0;&#x4E86;&#x81EA;&#x5DF1;&#x7684;&#x529F;&#x80FD;&#xFF0C;&#x4E00;&#x822C;&#x662F;&#x505A;&#x9884;&#x5904;&#x7406;&#x6216;&#x5584;&#x540E;&#x5DE5;&#x4F5C;&#x3002; &#x5E38;&#x89C1;&#x7684;&#x4EE3;&#x7406;&#x6A21;&#x5F0F;&#xFF1A; &#x8FDC;&#x7A0B;&#x4EE3;&#x7406;&#xFF1A;&#x4E3A;&#x4E0D;&#x540C;&#x5730;&#x7406;&#x7684;&#x5BF9;&#x8C61;&#x63D0;&#x4F9B;&#x5C40;&#x57DF;&#x7F51;&#x4EE3;&#x8868;&#x5BF9;&#x8C61;&#x3002; &#x4FDD;&#x62A4;&#x4EE3;&#x7406;&#xFF1A;&#x63A7;&#x5236;&#x5BF9;&#x4E00;&#x4E2A;&#x5BF9;&#x8C61;&#x8BBF;&#x95EE;&#x7684;&#x6743;&#x9650;&#xFF08;&#x6743;&#x9650;&#x63A7;&#x5236;&#xFF09;&#x3002; &#x667A;&#x80FD;&#x5F15;&#x7528;&#x4EE3;&#x7406;&#xFF1A;&#x63D0;&#x4F9B;&#x5BF9;&#x76EE;&#x6807;&#x5BF9;&#x8C61;&#x989D;&#x5916;&#x7684;&#x670D;&#x52A1;&#xFF0C;&#x672C;&#x6587;&#x4EE3;&#x7801;&#x4EE5;&#x8FD9;&#x4E2A;&#x4E3A;&#x4F8B;&#x3002; &#x865A;&#x62DF;&#x4EE3;&#x7406;&#xFF1A;&#x6839;&#x636E;&#x9700;&#x8981;&#x5C06;&#x8D44;&#x6E90;&#x6D88;&#x8017;&#x5F88;&#x5927;&#x7684;&#x5BF9;&#x8C61;&#x8FDB;&#x884C;&#x5EF6;&#x8FDF;&#xFF0C;&#x771F;&#x6B63;&#x9700;&#x8981;&#x7684;&#x65F6;&#x5019;&#x624D;&#x521B;&#x5EFA;&#x3002; &#x4EE3;&#x7406;&#x7684;&#x5B9E;&#x73B0;&#x65B9;&#x5F0F;&#x6709;&#x4E24;&#x79CD;&#xFF1A; &#x9759;&#x6001;&#x4EE3;&#x7406;&#xFF1A;&#x4EE3;&#x7406;&#x548C;&#x88AB;&#x4EE3;&#x7406;&#x5BF9;&#x8C61;&#x5728;&#x4EE3;&#x7406;&#x524D;&#x662F;&#x786E;&#x5B9A;&#x7684;&#xFF0C;&#x4ED6;&#x4EEC;&#x90FD;&#x5B9E;&#x73B0;&#x4E86;&#x76F8;&#x540C;&#x7684;&#x63A5;&#x53E3;&#x6216;&#x8005;&#x7EE7;&#x627F;&#x76F8;&#x540C;&#x7684;&#x62BD;&#x8C61;&#x7C7B;&#x3002; &#x52A8;&#x6001;&#x4EE3;&#x7406;&#xFF1A;&#x52A8;&#x6001;&#x7684;&#x4EA7;&#x751F;&#x4EE3;&#x7406;&#xFF0C;&#x53EF;&#x4EE5;&#x5B9E;&#x73B0;&#x5BF9;&#x4E0D;&#x540C;&#x7C7B;&#x3001;&#x4E0D;&#x540C;&#x65B9;&#x6CD5;&#x7684;&#x4EE3;&#x7406;&#x3002; 2 &#x9759;&#x6001;&#x4EE3;&#x7406;&#x9759;&#x6001;&#x4EE3;&#x7406;&#x5B9E;&#x73B0;&#x8FD8;&#x5206;&#x4E3A;&#x7EE7;&#x627F;&#x548C;&#x805A;&#x5408;&#x4E24;&#x79CD;&#x65B9;&#x5F0F;&#x3002;&#x7EE7;&#x627F;&#x65B9;&#x5F0F;&#x4E3B;&#x8981;&#x662F;Proxy&#x7EE7;&#x627F;RealSubject&#xFF0C;&#x7136;&#x540E;&#x5B9E;&#x73B0;&#x6216;&#x76F4;&#x63A5;&#x8C03;&#x7528;RealSubject&#x7684;&#x65B9;&#x6CD5;&#x5E76;&#x52A0;&#x4E0A;&#x81EA;&#x5DF1;&#x7684;&#x64CD;&#x4F5C;&#xFF0C;&#x56E0;&#x4E3A;&#x8FD9;&#x79CD;&#x65B9;&#x6CD5;&#x62D3;&#x5C55;&#x6027;&#x8F83;&#x5DEE;&#xFF0C;&#x6240;&#x4EE5;&#x4E00;&#x822C;&#x4E0D;&#x63A8;&#x8350;&#xFF0C;&#x8FD9;&#x91CC;&#x4E0D;&#x7EC6;&#x8BF4;&#xFF0C;&#x53EF;&#x4EE5;&#x53C2;&#x8003;&#x6587;&#x672B;Demo&#x4EE3;&#x7801;&#x3002;&#x800C;&#x805A;&#x5408;&#x65B9;&#x5F0F;&#x5219;&#x662F;Proxy&#x548C;RealSubject&#x90FD;&#x5B9E;&#x73B0;&#x6216;&#x7EE7;&#x627F;Subject&#x5BF9;&#x8C61;&#xFF0C;&#x7136;&#x540E;&#x901A;&#x8FC7;&#x76F8;&#x4E92;&#x4EE3;&#x7406;&#x7684;&#x65B9;&#x5F0F;&#x5B9E;&#x73B0;&#x529F;&#x80FD;&#x91CD;&#x7528;&#xFF0C;&#x6BD4;&#x8F83;&#x7075;&#x6D3B;&#x3002;&#x8FD9;&#x91CC;&#x5C31;&#x4EE5;&#x5356;&#x706B;&#x8F66;&#x7968;&#x4E3A;&#x4F8B;&#xFF0C;show the code&#xFF1A;Subject&#x62BD;&#x8C61;&#x89D2;&#x8272;&#xFF08;&#x62BD;&#x8C61;&#x4E86;&#x5356;&#x7968;&#x7684;&#x65B9;&#x6CD5;&#x7684;&#x63A5;&#x53E3;&#xFF09;&#xFF1A;1234public interface TicketBusiness { //&#x5356;&#x7968;&#x65B9;&#x6CD5; public void saleTicket();} RealSubject&#x771F;&#x5B9E;&#x89D2;&#x8272;&#xFF1A;123456789public class RailwayStation implements TicketBusiness { //&#x5B9E;&#x73B0;&#x4E70;&#x7968;&#x65B9;&#x6CD5; @Override public void saleTicket() { //&#x968F;&#x673A;&#x751F;&#x6210;&#x4E00;&#x4E2A;&#x4EF7;&#x683C;&#x610F;&#x601D;&#x4E00;&#x4E0B; int price = new Random().nextInt(100); System.out.println(&quot;&#x4E00;&#x672C;&#x6B63;&#x7ECF;&#x7684;&#x5356;&#x7968;,&#x4EF7;&#x683C;:&quot; + price + &quot;&#x5143;&quot;); }} Proxy&#x89D2;&#x8272;&#x4E4B;&#x4E00;&#xFF0C;&#x4F5C;&#x4E3A;&#x4EE3;&#x552E;&#x70B9;&#xFF0C;&#x8981;&#x6536;&#x624B;&#x7EED;&#x8D39;&#x8D39;&#x6323;&#x94B1;&#x554A;&#xFF0C;&#x6240;&#x4EE5;&#x589E;&#x52A0;&#x4E86;&#x6536;&#x624B;&#x7EED;&#x8D39;&#x7684;&#x529F;&#x80FD;&#xFF1A;1234567891011121314public class ProxyByAddChargePoly implements TicketBusiness { TicketBusiness ticketBusiness; //&#x901A;&#x8FC7;&#x6784;&#x9020;&#x51FD;&#x6570;&#x65B9;&#x5F0F;&#x8C03;&#x7528;&#x88AB;&#x4EE3;&#x7406;&#x5BF9;&#x8C61; public ProxyByAddChargePoly(TicketBusiness ticketBusiness) { this.ticketBusiness = ticketBusiness; } @Override public void saleTicket() { //&#x8C03;&#x7528;&#x88AB;&#x4EE3;&#x7406;&#x5BF9;&#x8C61;&#x7684;&#x65B9;&#x6CD5; ticketBusiness.saleTicket(); //&#x589E;&#x52A0;&#x6536;&#x624B;&#x7EED;&#x8D39;&#x7684;&#x65B9;&#x6CD5; System.out.println(&quot;&#x6536;&#x53D6;&#x4E86;&#x624B;&#x7EED;&#x8D39;5&#x5143;!&quot;); }} &#x901A;&#x8FC7;&#x4EE5;&#x4E0A;&#x4EE3;&#x7801;&#x6211;&#x4EEC;&#x5C31;&#x80FD;&#x5B9E;&#x73B0;&#x805A;&#x5408;&#x65B9;&#x5F0F;&#x7684;&#x52A8;&#x6001;&#x4EE3;&#x7406;&#xFF0C;&#x6D4B;&#x8BD5;&#x65B9;&#x6CD5;&#xFF1A;12345678public class Test { public static void main(String[] args) { //&#x8C03;&#x7528;&#x805A;&#x5408;&#x7684;&#x65B9;&#x5F0F; RailwayStation railwayStation = new RailwayStation(); TicketBusiness ticketBusiness = new ProxyByAddChargePoly(railwayStation); ticketBusiness.saleTicket(); }} &#x8FD9;&#x65F6;&#x5019;&#x53C8;&#x6765;&#x65B0;&#x9700;&#x6C42;&#x4E86;&#xFF0C;&#x5F97;&#x8BB0;&#x5F55;&#x4E70;&#x7968;&#x524D;&#x540E;&#x7684;&#x65E5;&#x5FD7;&#xFF0C;&#x8BE5;&#x600E;&#x4E48;&#x505A;&#x5462;&#xFF1F;&#x8FD9;&#x91CC;&#x53EA;&#x8981;&#x6309;&#x7167;&#x4E0A;&#x9762;&#x6536;&#x624B;&#x7EED;&#x8D39;&#x7684;&#x65B9;&#x5F0F;&#x589E;&#x52A0;&#x4E00;&#x4E2A;&#x65E5;&#x5FD7;&#x8BB0;&#x5F55;&#x7684;&#x7C7B;&#xFF0C;&#x5E76;&#x5B9E;&#x73B0;Subject&#x5C31;&#x597D;&#x4E86;&#xFF1A;12345678910111213public class ProxyAddLogByPoly implements TicketBusiness { TicketBusiness ticketBusiness; //&#x901A;&#x8FC7;&#x6784;&#x9020;&#x51FD;&#x6570;&#x65B9;&#x5F0F;&#x8C03;&#x7528;&#x88AB;&#x4EE3;&#x7406;&#x5BF9;&#x8C61; public ProxyAddLogByPoly(TicketBusiness ticketBusiness) { this.ticketBusiness = ticketBusiness; } @Override public void saleTicket() { System.out.println(&quot;&#x65E5;&#x5FD7; ==&gt; &#x5F00;&#x59CB;&#x5356;&#x7968;&quot;); ticketBusiness.saleTicket(); System.out.println(&quot;&#x65E5;&#x5FD7; ==&gt; &#x7ED3;&#x675F;&#x5356;&#x7968;&quot;); }} &#x8FD9;&#x662F;&#x7684;&#x8C03;&#x7528;&#x65B9;&#x5F0F;&#x5C31;&#x53D8;&#x6210;&#x4E86;&#xFF1A;12345678public class Test { public static void main(String[] args) { RailwayStation ticketBusiness = new RailwayStation(); ProxyByAddChargePoly proxyByPoly = new ProxyByAddChargePoly(ticketBusiness); ProxyAddLogByPoly proxyAddLogByPoly = new ProxyAddLogByPoly(proxyByPoly); proxyAddLogByPoly.saleTicket(); }} 3 &#x52A8;&#x6001;&#x4EE3;&#x7406;&#x968F;&#x7740;&#x4EE3;&#x552E;&#x70B9;&#x7684;&#x4E1A;&#x52A1;&#x53D1;&#x5C55;&#xFF0C;&#x5F00;&#x59CB;&#x505A;&#x6C7D;&#x8F66;&#x7968;&#x7684;&#x4EE3;&#x552E;&#x4E86;&#xFF0C;&#x4E5F;&#x8981;&#x6536;&#x624B;&#x7EED;&#x8D39;&#x4E86;&#xFF0C;&#x4F46;&#x662F;&#x706B;&#x8F66;&#x7968;&#x548C;&#x6C7D;&#x8F66;&#x7968;&#x7684;Subject&#x662F;&#x4E0D;&#x4E00;&#x6837;&#x7684;&#xFF0C;&#x8FD9;&#x65F6;&#x5019;&#x9759;&#x6001;&#x4EE3;&#x7406;&#x5C31;&#x4E0D;&#x80FD;&#x5B9E;&#x73B0;&#x4E86;&#xFF0C;&#x6240;&#x4EE5;&#x9700;&#x8981;&#x52A8;&#x6001;&#x4EE3;&#x7406;&#x51FA;&#x73B0;&#x4E86;&#xFF1A;&#x53EF;&#x4EE5;&#x5B9E;&#x73B0;&#x5BF9;&#x4E0D;&#x540C;&#x7C7B;&#x3001;&#x4E0D;&#x540C;&#x65B9;&#x6CD5;&#x7684;&#x4EE3;&#x7406;&#x3002;&#x52A8;&#x6001;&#x4EE3;&#x7406;&#x76EE;&#x524D;&#x4E3B;&#x8981;&#x6709;&#x4E24;&#x79CD;&#x5B9E;&#x73B0;&#x65B9;&#x5F0F;&#xFF1A;JDK&#x548C;CGLib&#x3002; 3.1 JDK &#x5B9E;&#x73B0;&#x52A8;&#x6001;&#x4EE3;&#x7406;JDK &#x52A8;&#x6001;&#x4EE3;&#x7406;&#x4E3B;&#x8981;&#x5C31;&#x662F;&#x5728;&#x4EE3;&#x7406;&#x7C7B;&#x548C;&#x88AB;&#x4EE3;&#x7406;&#x7C7B;&#x52A0;&#x5165;&#x4E86;&#x5B9E;&#x73B0;InvocationHandler&#x63A5;&#x53E3;&#x7684;&#x5904;&#x7406;&#x7C7B;&#xFF08;&#x4E8B;&#x52A1;&#x5904;&#x7406;&#x5668;&#xFF09;&#xFF0C;&#x9700;&#x8981;&#x7684;&#x589E;&#x52A0;&#x7684;&#x529F;&#x80FD;&#x6216;&#x4E1A;&#x52A1;&#x5904;&#x7406;&#x5C31;&#x662F;&#x5728;&#x8FD9;&#x4E2A;&#x5904;&#x7406;&#x7C7B;&#x4E2D;&#x8FDB;&#x884C;&#x7684;&#x3002;&#x53E6;&#x5916;&#x8FD8;&#x589E;&#x52A0;&#x4E86;Proxy&#x8FD9;&#x4E2A;&#x7C7B;&#xFF0C;&#x8FD9;&#x4E2A;&#x7C7B;&#x5C31;&#x662F;&#x4EA7;&#x751F;&#x52A8;&#x6001;&#x4EE3;&#x7406;&#x7684;&#x7C7B;&#x3002;show the code:Subject &#x63A5;&#x53E3;&#x5BF9;&#x8C61;&#xFF1A;1234public interface TicketBusiness { //&#x5356;&#x7968;&#x65B9;&#x6CD5; public void saleTicket();} &#x5B9E;&#x73B0;&#x4E86;Subject&#x63A5;&#x53E3;&#x7684;&#x88AB;&#x4EE3;&#x7406;&#x5BF9;&#x8C61;&#xFF1A;123456789public class RailwayStation implements TicketBusiness { //&#x5B9E;&#x73B0;&#x4E70;&#x7968;&#x65B9;&#x6CD5; @Override public void saleTicket() { //&#x968F;&#x673A;&#x751F;&#x6210;&#x4E00;&#x4E2A;&#x4EF7;&#x683C; int price = new Random().nextInt(100); System.out.println(&quot;&#x4E00;&#x672C;&#x6B63;&#x7ECF;&#x7684;&#x5356;&#x7968;,&#x4EF7;&#x683C;:&quot; + price + &quot;&#x5143;&quot;); }} &#x5B9E;&#x73B0;&#x4E86;InvocationHandler&#x63A5;&#x53E3;&#x7684;&#x4EE3;&#x7406;&#x7C7B;&#xFF1A;12345678910111213141516171819202122public class ChargeProxyHandler implements InvocationHandler { private Object target; //&#x901A;&#x8FC7;&#x6784;&#x9020;&#x51FD;&#x6570;&#x65B9;&#x5F0F;&#x5F15;&#x5165;&#x88AB;&#x4EE3;&#x7406;&#x5BF9;&#x8C61; public ChargeProxyHandler(Object target) { this.target = target; } /** * @param proxy &#x88AB;&#x4EE3;&#x7406;&#x5BF9;&#x8C61; * @param method &#x88AB;&#x4EE3;&#x7406;&#x5BF9;&#x8C61;&#x7684;&#x65B9;&#x6CD5; * @param args &#x65B9;&#x6CD5;&#x7684;&#x53C2;&#x6570; * @return * @throws Throwable */ @Override public Object invoke(Object proxy, Method method, Object[] args) throws Throwable { method.invoke(target); //&#x589E;&#x52A0;&#x6536;&#x624B;&#x7EED;&#x8D39;&#x7684;&#x65B9;&#x6CD5; System.out.println(&quot;&#x6536;&#x53D6;&#x4E86;&#x624B;&#x7EED;&#x8D39;5&#x5143;!&quot;); return null; }} &#x6D4B;&#x8BD5;&#x8C03;&#x7528;&#xFF1A;1234567891011121314151617public class Test { public static void main(String[] args) { RailwayStation rs = new RailwayStation(); Class&lt;?&gt; c = rs.getClass(); InvocationHandler handler = new ChargeProxyHandler(rs); /** * &#x901A;&#x8FC7;Proxy&#x7684;newProxyInstance&#x65B9;&#x6CD5;&#x52A8;&#x6001;&#x521B;&#x5EFA;&#x4EE3;&#x7406;&#x7C7B; * newProxyInstance(ClassLoader loader,Class&lt;?&gt;[] interfaces,InvocationHandler h) * loader: &#x7C7B;&#x52A0;&#x8F7D;&#x5668; * interfaces: &#x5B9E;&#x73B0;&#x63A5;&#x53E3; * InvocationHandler &#x4EE3;&#x7406;&#x7C7B;(&#x4E8B;&#x52A1;&#x5904;&#x7406;&#x7C7B;) */ TicketBusiness t = (TicketBusiness) Proxy.newProxyInstance(c.getClassLoader(), c.getInterfaces(), handler); //&#x901A;&#x8FC7;&#x4EE3;&#x7406;&#x8C03;&#x7528;&#x65B9;&#x6CD5; t.saleTicket(); }} &#x589E;&#x52A0;&#x4E00;&#x4E2A;&#x65E5;&#x5FD7;&#x8BB0;&#x5F55;&#x7684;&#x4EE3;&#x7406;&#x7C7B;&#xFF0C;&#x5B9E;&#x73B0;&#x591A;&#x7EA7;&#x4EE3;&#x7406;&#xFF1A;1234567891011121314public class LogProxyHandler implements InvocationHandler { private Object target; public LogProxyHandler(Object target) { this.target = target; } @Override public Object invoke(Object proxy, Method method, Object[] args) throws Throwable { System.out.println(&quot;&#x65E5;&#x5FD7; ==&gt; &#x5F00;&#x59CB;&#x5356;&#x7968;&quot;); method.invoke(target); System.out.println(&quot;&#x65E5;&#x5FD7; ==&gt; &#x7ED3;&#x675F;&#x5356;&#x7968;&quot;); return null; }} &#x6D4B;&#x8BD5;&#x8C03;&#x7528;1234567891011121314public class Test { public static void main(String[] args) { RailwayStation rs = new RailwayStation(); Class&lt;?&gt; c = rs.getClass(); //&#x6536;&#x8D39;&#x4EE3;&#x7406;&#x7C7B; InvocationHandler handler = new ChargeProxyHandler(rs); TicketBusiness t = (TicketBusiness) Proxy.newProxyInstance(c.getClassLoader(), c.getInterfaces(), handler); //&#x65E5;&#x5FD7;&#x4EE3;&#x7406;&#x7C7B;,&#x6CE8;&#x610F;&#x8FD9;&#x91CC;&#x4F20;&#x5165;&#x7684;&#x662F;&#x4E0A;&#x9762;&#x52A8;&#x6001;&#x751F;&#x6210;&#x7684;&#x4EE3;&#x7406;&#x7C7B; InvocationHandler logHandler = new LogProxyHandler(t); TicketBusiness t2 = (TicketBusiness) Proxy.newProxyInstance(c.getClassLoader(), c.getInterfaces(), logHandler); t2.saleTicket(); }} &#x5230;&#x8FD9;&#x91CC;&#x6211;&#x4EEC;&#x5C31;&#x5B9E;&#x73B0;&#x4E86;JDK&#x7684;&#x52A8;&#x6001;&#x4EE3;&#x7406;&#xFF0C;&#x5176;&#x5B9E;&#x4E3B;&#x8981;&#x5C31;4&#x4E2A;&#x6B65;&#x9AA4;&#xFF1A; &#x521B;&#x5EFA;&#x63A5;&#x53E3;&#x53CA;&#x88AB;&#x4EE3;&#x7406;&#x7C7B; &#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x5B9E;&#x73B0;&#x4E86;InvocationHandler&#x63A5;&#x53E3;&#x7684;&#x4E8B;&#x52A1;&#x5904;&#x7406;&#x7C7B; &#x8C03;&#x7528;Proxy&#x7C7B;&#x7684;newProxyInstance&#x65B9;&#x6CD5;&#x52A8;&#x6001;&#x4EA7;&#x751F;&#x4EE3;&#x7406;&#x7C7B;&#x3002; &#x901A;&#x8FC7;&#x4EE3;&#x7406;&#x7C7B;&#x8C03;&#x7528;&#x65B9;&#x6CD5;&#x3002;JDK&#x52A8;&#x6001;&#x4EE3;&#x7406;&#x6709;&#x4E00;&#x4E2A;&#x5F0A;&#x7AEF;&#x5C31;&#x662F;&#x53EA;&#x80FD;&#x4EE3;&#x7406;&#x5B9E;&#x73B0;&#x4E86;&#x63A5;&#x53E3;&#x7684;&#x7C7B;&#xFF0C;&#x5982;&#x679C;&#x60F3;&#x8981;&#x52A8;&#x6001;&#x4EE3;&#x7406;&#x6CA1;&#x6709;&#x5B9E;&#x73B0;&#x63A5;&#x53E3;&#x7684;&#x7C7B;&#x5C31;&#x9700;&#x8981;CGLib&#x4E86;&#x3002; 3.2 CGLib&#x5B9E;&#x73B0;&#x52A8;&#x6001;&#x4EE3;&#x7406;CGLib&#x7684;&#x539F;&#x7406;&#x4E3B;&#x8981;&#x662F;&#x5BF9;&#x9700;&#x8981;&#x88AB;&#x4EE3;&#x7406;&#x7684;&#x76EE;&#x6807;&#x7C7B;&#x4EA7;&#x751F;&#x4E00;&#x4E2A;&#x5B50;&#x7C7B;&#xFF0C;&#x901A;&#x8FC7;&#x65B9;&#x6CD5;&#x62E6;&#x622A;&#x6280;&#x672F;&#x62E6;&#x622A;&#x6240;&#x6709;&#x7236;&#x7C7B;&#x65B9;&#x6CD5;&#x7684;&#x8C03;&#x7528;&#x3002;CGLib&#x5B9E;&#x73B0;&#x9700;&#x8981;&#x5F15;&#x5165;&#x76F8;&#x5E94;&#x7684;jar&#x5305;&#xFF1A;cglib-nodep-x.x.x.jar&#x3002;show the code&#xFF1A;&#x88AB;&#x4EE3;&#x7406;&#x7C7B;&#xFF08;&#x4E0D;&#x9700;&#x8981;&#x5B9E;&#x73B0;&#x63A5;&#x53E3;&#xFF09;12345678public class RailwayStation { //&#x4E70;&#x7968;&#x65B9;&#x6CD5; public void saleTicket() { //&#x968F;&#x673A;&#x751F;&#x6210;&#x4E00;&#x4E2A;&#x4EF7;&#x683C; int price = new Random().nextInt(100); System.out.println(&quot;&#x4E00;&#x672C;&#x6B63;&#x7ECF;&#x7684;&#x5356;&#x7968;,&#x4EF7;&#x683C;:&quot; + price + &quot;&#x5143;&quot;); }} &#x4EE3;&#x7406;&#x7C7B;&#xFF0C;&#x5B9E;&#x73B0;&#x4E86;MethodInterceptor&#x63A5;&#x53E3;123456789101112131415161718192021222324252627public class ProxyAddChargeByCglib implements MethodInterceptor { //&#x4E3A;&#x88AB;&#x4EE3;&#x7406;&#x5BF9;&#x8C61;&#x521B;&#x5EFA;&#x4EE3;&#x7406;&#x7C7B; private Enhancer enhancer = new Enhancer(); public Object getProxy(Class clazz) { //&#x521B;&#x5EFA;&#x88AB;&#x4EE3;&#x7406;&#x7C7B;&#x7684;&#x5B50;&#x7C7B; enhancer.setSuperclass(clazz); enhancer.setCallback(this); return enhancer.create(); } /** * &#x62E6;&#x622A;&#x6240;&#x6709;&#x88AB;&#x4EE3;&#x7406;&#x7C7B;&#x7684;&#x65B9;&#x6CD5;&#x7684;&#x8C03;&#x7528; * * @param o &#x88AB;&#x4EE3;&#x7406;&#x7C7B;&#x7684;&#x5B9E;&#x4F8B; * @param method &#x88AB;&#x4EE3;&#x7406;&#x7C7B;&#x65B9;&#x6CD5;&#x7684;&#x53CD;&#x5C04;&#x5BF9;&#x8C61; * @param objects &#x65B9;&#x6CD5;&#x7684;&#x53C2;&#x6570; * @param methodProxy &#x4EE3;&#x7406;&#x7C7B;&#x7684;&#x5B9E;&#x4F8B; * @return * @throws Throwable */ @Override public Object intercept(Object o, Method method, Object[] objects, MethodProxy methodProxy) throws Throwable { //&#x4EE3;&#x7406;&#x7C7B;&#x8C03;&#x7528;&#x7236;&#x7C7B;&#x7684;&#x65B9;&#x6CD5; methodProxy.invokeSuper(o, objects); System.out.println(&quot;&#x6536;&#x53D6;&#x4E86;&#x624B;&#x7EED;&#x8D39;5&#x5143;!&quot;); return null; }} &#x8C03;&#x7528;&#x6D4B;&#x8BD5;&#xFF1A;12345678public class Test { public static void main(String[] args) { ProxyAddChargeByCglib proxy = new ProxyAddChargeByCglib(); //&#x83B7;&#x53D6;&#x52A8;&#x6001;&#x4EE3;&#x7406; RailwayStation r = (RailwayStation) proxy.getProxy(RailwayStation.class); r.saleTicket(); }} &#x8FD9;&#x6837;CGLib&#x5B9E;&#x73B0;&#x52A8;&#x6001;&#x4EE3;&#x7406;&#x5C31;&#x5B8C;&#x6210;&#x4E86;&#xFF0C;&#x4F46;&#x662F;&#x76F8;&#x6BD4;JDK&#x7684;&#x65B9;&#x5F0F;&#xFF0C;CGLib&#x6700;&#x5927;&#x7684;&#x7F3A;&#x70B9;&#x597D;&#x50CF;&#x662F;&#x4E0D;&#x80FD;&#x76F4;&#x63A5;&#x5B9E;&#x73B0;&#x4EE3;&#x7406;&#x53E0;&#x52A0;&#xFF08;&#x591A;&#x7EA7;&#x4EE3;&#x7406;&#xFF09;&#xFF0C;&#x4E0D;&#x77E5;&#x9053;&#x6709;&#x6CA1;&#x5176;&#x5B83;&#x65B9;&#x6CD5;&#x53EF;&#x4EE5;&#x5B9E;&#x73B0;&#xFF0C;&#x5982;&#x679C;&#x6709;&#x65B9;&#x6CD5;&#xFF0C;&#x6B22;&#x8FCE;&#x7559;&#x8A00;~&#x4F46;&#x662F;CGLIB&#x7684;&#x52A8;&#x6001;&#x4EE3;&#x7406;&#x5BF9;&#x8C61;&#x6027;&#x80FD;&#x5F88;&#x9AD8;&#xFF0C;&#x4F46;&#x521B;&#x5EFA;&#x52A8;&#x6001;&#x4EE3;&#x7406;&#x5BF9;&#x8C61;&#x7684;&#x6210;&#x672C;&#x9AD8;&#xFF0C;&#x6240;&#x4EE5;&#x6BD4;&#x8F83;&#x9002;&#x5408;&#x5355;&#x4F8B;&#x6A21;&#x5F0F;&#x3002;&#x53E6;&#x5916;&#x56E0;&#x4E3A;CGLib &#x7684;&#x672C;&#x8D28;&#x662F;&#x52A8;&#x6001;&#x521B;&#x5EFA;&#x5B50;&#x7C7B;&#xFF0C;&#x6240;&#x4EE5;&#x5BF9;finall&#x4FEE;&#x9970;&#x7684;&#x65B9;&#x6CD5;&#xFF0C;&#x662F;&#x65E0;&#x6CD5;&#x4EE3;&#x7406;&#x7684;&#x3002; &#x9002;&#x914D;&#x5668;&#x6A21;&#x5F0F;1 &#x4F55;&#x4E3A;&#x9002;&#x914D;&#x5668;&#x6A21;&#x5F0F;&#x9002;&#x914D;&#x5668;&#x6A21;&#x5F0F;&#xFF08;&#x6709;&#x65F6;&#x5019;&#x4E5F;&#x79F0;&#x5305;&#x88C5;&#x6837;&#x5F0F;&#x6216;&#x8005;&#x5305;&#x88C5;&#xFF09;&#x662F;&#x5C06;&#x4E00;&#x4E2A;&#x7C7B;&#x7684;&#x63A5;&#x53E3;&#x8F6C;&#x6362;&#x6210;&#x6210;&#x7528;&#x6237;&#x6240;&#x671F;&#x5F85;&#x7684;&#xFF0C;&#x4F7F;&#x5F97;&#x539F;&#x672C;&#x7531;&#x4E8E;&#x63A5;&#x53E3;&#x4E0D;&#x517C;&#x5BB9;&#x800C;&#x4E0D;&#x80FD;&#x5728;&#x4E00;&#x8D77;&#x5DE5;&#x4F5C;&#x7684;&#x7C7B;&#x53EF;&#x4EE5;&#x5728;&#x4E00;&#x8D77;&#x5DE5;&#x4F5C;&#x3002;&#x901A;&#x4FD7;&#x70B9;&#x8BF4;&#x89C1;&#x4EBA;&#x8BF4;&#x4EBA;&#x8BDD;&#xFF0C;&#x89C1;&#x9B3C;&#x8BF4;&#x9B3C;&#x8BDD;&#xFF0C;&#x6211;&#x4EEC;&#x7B14;&#x8BB0;&#x672C;&#x7684;&#x7535;&#x6E90;&#x9002;&#x914D;&#x5668;&#x5C31;&#x5C5E;&#x4E8E;&#x9002;&#x914D;&#x5668;&#x6A21;&#x5F0F;&#xFF0C;&#x56E0;&#x4E3A;&#x7B14;&#x8BB0;&#x672C;&#x4E0D;&#x80FD;&#x76F4;&#x63A5;&#x8DDF;&#x63D2;&#x5EA7;&#x8FDE;&#x8D77;&#x6765;&#x7528;&#xFF0C;&#x7535;&#x6E90;&#x9002;&#x914D;&#x5668;&#x5C31;&#x505A;&#x4E86;&#x8F6C;&#x6362;&#x7684;&#x4F5C;&#x7528;&#x3002;&#x7C7B;&#x56FE;&#x4E2D;&#xFF0C;Target&#x5C31;&#x662F;&#x901A;&#x7528;&#x76EE;&#x6807;&#x63A5;&#x53E3;&#xFF08;&#x5BB6;&#x7528;&#x63D2;&#x5EA7;&#xFF09;&#xFF0C;Adapter&#x662F;&#x9002;&#x914D;&#x5668;&#xFF08;&#x7535;&#x6E90;&#x9002;&#x914D;&#x5668;&#xFF09;&#xFF0C;Adaptee&#x5C5E;&#x4E8E;&#x88AB;&#x9002;&#x914D;&#x7C7B;&#xFF08;&#x7B14;&#x8BB0;&#x672C;&#x7535;&#x6E90;&#x63A5;&#x53E3;&#xFF09;&#x3002;&#x5F00;&#x53D1;&#x4E2D;&#x4F7F;&#x7528;&#x9002;&#x914D;&#x5668;&#x53EF;&#x4EE5;&#x5B9E;&#x73B0;&#x7CFB;&#x7EDF;&#x529F;&#x80FD;&#x66F4;&#x597D;&#x7684;&#x590D;&#x7528;&#x548C;&#x62D3;&#x5C55;&#x6027;&#xFF0C;&#x4E5F;&#x53EF;&#x4EE5;&#x964D;&#x4F4E;&#x529F;&#x80FD;&#x95F4;&#x8026;&#x5408;&#x6027;&#xFF0C;&#x4F8B;&#x5982;&#x53EF;&#x4EE5;&#x5728;&#x4E0D;&#x4FEE;&#x6539;&#x65E7;&#x7C7B;&#x7684;&#x60C5;&#x51B5;&#x4E0B;&#x4F7F;&#x5176;&#x9002;&#x914D;&#x65B0;&#x7684;&#x7CFB;&#x7EDF;&#xFF0C;&#x8FD9;&#x6837;&#x65B0;&#x65E7;&#x7CFB;&#x7EDF;&#x90FD;&#x80FD;&#x4F7F;&#x7528;&#x3002;&#x4F46;&#x4E0D;&#x5EFA;&#x8BAE;&#x7CFB;&#x7EDF;&#x4E2D;&#x8FC7;&#x591A;&#x4F7F;&#x7528;&#x9002;&#x914D;&#x5668;&#xFF0C;&#x56E0;&#x4E3A;&#x4F7F;&#x7528;&#x4E0D;&#x5F53;&#x4F1A;&#x9020;&#x6210;&#x7CFB;&#x7EDF;&#x96F6;&#x4E71;&#xFF0C;&#x4F8B;&#x5982;&#x660E;&#x660E;&#x770B;&#x5230;&#x8C03;&#x7528;&#x7684;&#x662F;A&#x63A5;&#x53E3;&#xFF0C;&#x5176;&#x5B9E;&#x5185;&#x90E8;&#x88AB;&#x9002;&#x914D;&#x6210;&#x4E86;B&#x63A5;&#x53E3;&#x7684;&#x5B9E;&#x73B0;&#x3002;&#x9002;&#x914D;&#x5668;&#x7684;&#x5B9E;&#x73B0;&#x65B9;&#x5F0F;&#x6709;&#x4E24;&#x79CD;&#xFF1A;&#x5BF9;&#x8C61;&#x9002;&#x914D;&#x5668;&#xFF08;&#x7EC4;&#x5408;&#x65B9;&#x5F0F;&#xFF09;&#x548C;&#x7C7B;&#x9002;&#x914D;&#x5668;&#xFF08;&#x7EE7;&#x627F;&#x65B9;&#x5F0F;&#xFF09;&#xFF0C;&#x6211;&#x4EEC;&#x5206;&#x522B;&#x6765;&#x770B;&#x4E00;&#x4E0B;&#x3002; 2 &#x5BF9;&#x8C61;&#x9002;&#x914D;&#x5668;&#x5BF9;&#x8C61;&#x9002;&#x914D;&#x5668;&#x662F;&#x628A;&#x88AB;&#x9002;&#x914D;&#x7C7B;&#x4F5C;&#x4E3A;&#x4E00;&#x4E2A;&#x5BF9;&#x8C61;&#x7EC4;&#x5408;&#x5230;&#x9002;&#x914D;&#x5668;&#x7C7B;&#x4E2D;&#xFF0C;&#x4EE5;&#x4FEE;&#x6539;&#x76EE;&#x6807;&#x63A5;&#x53E3;&#xFF0C;&#x5305;&#x88C5;&#x88AB;&#x9002;&#x914D;&#x7C7B;&#x3002;show the cod&#xFF1A;Adaptee&#x88AB;&#x9002;&#x914D;&#x7C7B;&#xFF0C;&#x7B14;&#x8BB0;&#x672C;&#x5145;&#x7535;&#x53E3;&#xFF1A;123456public class ChargeJack { //&#x5145;&#x7535;&#x65B9;&#x6CD5; &#x6BD4;&#x5982;&#x53EA;&#x80FD;&#x63A5;&#x53D7;&#x8F93;&#x5165;20V public void charge() { System.out.println(&quot;&#x6B63;&#x5728;&#x8FDB;&#x884C;20V&#x7535;&#x6D41;&#x5145;&#x7535;&quot;); }} Target&#x76EE;&#x6807;&#x7C7B;&#xFF0C;&#x901A;&#x7528;&#x7684;220&#x63D2;&#x5934;&#xFF1A;1234public interface Socket { //&#x8F93;&#x51FA;&#x7535;&#x6D41;,&#x8F93;&#x5165;220V public void output();} Adapter&#x9002;&#x914D;&#x5668;&#xFF0C;&#x7535;&#x6E90;&#x8F6C;&#x6362;&#xFF1A;12345678910111213public class Adapter implements Socket { //&#x901A;&#x8FC7;&#x6784;&#x9020;&#x51FD;&#x6570;&#x5C06;&#x88AB;&#x9002;&#x914D;&#x5BF9;&#x8C61;&#x6CE8;&#x5165; private ChargeJack chargeJack; public Adapter(ChargeJack chargeJack) { this.chargeJack = chargeJack; } @Override public void output() { System.out.println(&quot;&#x901A;&#x8FC7;&#x7535;&#x6E90;&#x9002;&#x914D;&#x5668;&quot;); //&#x4F7F;&#x7528;&#x88AB;&#x9002;&#x914D;&#x5BF9;&#x8C61;&#x65B9;&#x6CD5; chargeJack.charge(); }} &#x8C03;&#x7528;&#xFF1A;1234567public class Notebook { public static void main(String[] args) { ChargeJack chargeJack = new ChargeJack(); Socket socket = new Adapter(chargeJack); socket.output(); }} 3 &#x7C7B;&#x9002;&#x914D;&#x5668;&#x7C7B;&#x9002;&#x914D;&#x5668;&#x662F;&#x91C7;&#x7528;&#x7EE7;&#x627F;&#x7684;&#x65B9;&#x5F0F;&#x5B9E;&#x73B0;&#xFF0C;&#x901A;&#x8FC7;&#x591A;&#x91CD;&#x7EE7;&#x627F;&#x4E0D;&#x517C;&#x5BB9;&#x63A5;&#x53E3;&#xFF0C;&#x5B9E;&#x73B0;&#x5BF9;&#x76EE;&#x6807;&#x63A5;&#x53E3;&#x7684;&#x9002;&#x914D;&#x3002;&#x56E0;&#x4E3A;Java&#x4E0D;&#x652F;&#x6301;&#x591A;&#x7EE7;&#x627F;&#xFF0C;&#x6240;&#x4EE5;&#x4E00;&#x822C;&#x5355;&#x72EC;&#x4E3A;&#x67D0;&#x4E2A;&#x7C7B;&#x9002;&#x914D;&#x3002;show the code&#xFF1A;&#x5C06;&#x4E0A;&#x9762;&#x7684;&#x9002;&#x914D;&#x5668;&#x4FEE;&#x6539;&#x4E3A;&#xFF1A;1234567public class AdapterExtends extends ChargeJack implements Socket { @Override public void output() { System.out.print(&quot;&#x901A;&#x8FC7;&#x7535;&#x6E90;&#x9002;&#x914D;&#x5668;&quot;); this.charge(); }} &#x8C03;&#x7528;&#xFF1A;123456public class Notebook { public static void main(String[] args) { Socket socket = new AdapterExtends(); socket1.output(); }} Demo &#x4EE3;&#x7801;&#x5730;&#x5740;&#xFF1A;Github End","tags":[{"name":"技术","slug":"技术","permalink":"http://todoright.com/tags/技术/"},{"name":"Java","slug":"Java","permalink":"http://todoright.com/tags/Java/"},{"name":"设计模式","slug":"设计模式","permalink":"http://todoright.com/tags/设计模式/"}]},{"title":"Java设计模式第一弹创之创建型模式","date":"2016-11-16T15:30:56.000Z","path":"2016/11/16/Java设计模式第一弹创之创建型模式/","text":"1. What And For What&#x5728;&#x8BB2;&#x89E3;&#x8BBE;&#x8BA1;&#x6A21;&#x5F0F;&#x4E4B;&#x524D;&#x5148;&#x8981;&#x7406;&#x89E3;&#x8BBE;&#x8BA1;&#x6A21;&#x5F0F;&#x7684;&#x6982;&#x5FF5;&#x542B;&#x4E49;&#xFF0C;&#x6240;&#x8C13;&#x8BBE;&#x8BA1;&#x6A21;&#x5F0F;&#xFF1A;&#x662F;&#x4E00;&#x5957;&#x88AB;&#x53CD;&#x590D;&#x4F7F;&#x7528;&#x3001;&#x591A;&#x6570;&#x4EBA;&#x77E5;&#x6653;&#x3001;&#x7ECF;&#x8FC7;&#x5206;&#x7C7B;&#x7F16;&#x76EE;&#x7684;&#x4EE3;&#x7801;&#x8BBE;&#x8BA1;&#x7ECF;&#x9A8C;&#x603B;&#x7ED3;&#x3002;&#x901A;&#x4FD7;&#x70B9;&#x8BF4;&#x5C31;&#x662F;&#x65E0;&#x6570;&#x7A0B;&#x5E8F;&#x733F;&#x5728;&#x7F16;&#x7801;&#x7684;&#x5386;&#x53F2;&#x5927;&#x5751;&#x4E2D;&#x603B;&#x7ED3;&#x51FA;&#x6765;&#x7684;&#x7ECF;&#x9A8C;&#x6559;&#x8BAD;&#xFF0C;&#x662F;&#x5957;&#x8DEF;&#xFF0C;&#x5728;&#x7CFB;&#x7EDF;&#x8BBE;&#x8BA1;&#x6216;&#x7F16;&#x7801;&#x4E2D;&#x7528;&#x597D;&#x4E86;&#x8FD9;&#x4E9B;&#x5957;&#x8DEF;&#xFF0C;&#x5C31;&#x53EF;&#x4EE5;&#x8FBE;&#x5230;&#x8FD9;&#x4E9B;&#x76EE;&#x7684;&#xFF1A;&#x63D0;&#x9AD8;&#x4E86;&#x4EE3;&#x7801;&#x7684;&#x53EF;&#x91CD;&#x7528;&#x6027;&#xFF0C;&#x4FDD;&#x8BC1;&#x4EE3;&#x7801;&#x7684;&#x53EF;&#x9760;&#x6027;&#xFF0C;&#x8BA9;&#x4EE3;&#x7801;&#x66F4;&#x6613;&#x88AB;&#x4EBA;&#x7406;&#x89E3;&#x3002; 2. &#x57FA;&#x672C;&#x8BBE;&#x8BA1;&#x6A21;&#x5F0F;&#x5206;&#x7C7B;&#x8BBE;&#x8BA1;&#x6A21;&#x5F0F;&#x6309;&#x7C7B;&#x578B;&#x4E3B;&#x8981;&#x5206;&#x4E3A;&#x521B;&#x5EFA;&#x578B;&#x3001;&#x7ED3;&#x6784;&#x578B;&#x3001;&#x884C;&#x4E3A;&#x578B;3&#x5927;&#x7C7B;23&#x79CD;&#x3002; 1231. &#x521B;&#x5EFA;&#x578B;&#x6A21;&#x5F0F;&#xFF1A;&#x5DE5;&#x5382;&#x6A21;&#x5F0F;&#x3001;&#x62BD;&#x8C61;&#x5DE5;&#x5382;&#x6A21;&#x5F0F;&#x3001;&#x5355;&#x4F8B;&#x6A21;&#x5F0F;&#x3001;&#x5EFA;&#x9020;&#x4E2D;&#x6A21;&#x5F0F;&#x3001;&#x539F;&#x578B;&#x6A21;&#x5F0F;&#xFF1B;2. &#x7ED3;&#x6784;&#x578B;&#x6A21;&#x5F0F;&#xFF1A;&#x9002;&#x914D;&#x5668;&#x6A21;&#x5F0F;&#x3001;&#x88C5;&#x9970;&#x5668;&#x6A21;&#x5F0F;&#x3001;&#x4EE3;&#x7406;&#x6A21;&#x5F0F;&#x3001;&#x5916;&#x89C2;&#x6A21;&#x5F0F;&#x3001;&#x6865;&#x63A5;&#x6A21;&#x5F0F;&#x3001;&#x7EC4;&#x5408;&#x6A21;&#x5F0F;&#x3001;&#x4EAB;&#x5143;&#x6A21;&#x5F0F;&#xFF1B;3. &#x884C;&#x4E3A;&#x578B;&#x6A21;&#x5F0F;&#xFF1A;&#x7B56;&#x7565;&#x6A21;&#x5F0F;&#x3001;&#x6A21;&#x677F;&#x65B9;&#x6CD5;&#x6A21;&#x5F0F;&#x3001;&#x89C2;&#x5BDF;&#x8005;&#x6A21;&#x5F0F;&#x3001;&#x8FED;&#x4EE3;&#x5B50;&#x6A21;&#x5F0F;&#x3001;&#x8D23;&#x4EFB;&#x94FE;&#x6A21;&#x5F0F;&#x3001;&#x547D;&#x4EE4;&#x6A21;&#x5F0F;&#x3001;&#x5907;&#x5FD8;&#x5F55;&#x6A21;&#x5F0F;&#x3001;&#x72B6;&#x6001;&#x6A21;&#x5F0F;&#x3001;&#x8BBF;&#x95EE;&#x8005;&#x6A21;&#x5F0F;&#x3001;&#x4E2D;&#x4ECB;&#x8005;&#x6A21;&#x5F0F;&#x3001;&#x89E3;&#x91CA;&#x5668;&#x6A21;&#x5F0F;&#x3002; &#x6211;&#x4EEC;&#x5728;&#x8FD9;&#x91CC;&#x4E3B;&#x8981;&#x8BB2;&#x89E3;&#x5176;&#x4E2D;&#x5E38;&#x7528;&#x7684;8&#x79CD;&#x6A21;&#x5F0F;&#xFF1A;&#x5355;&#x4F8B;&#x6A21;&#x5F0F;&#x3001;&#x5DE5;&#x5382;&#x6A21;&#x5F0F;&#x3001;&#x4EE3;&#x7406;&#x6A21;&#x5F0F;&#x3001;&#x9002;&#x914D;&#x5668;&#x6A21;&#x5F0F;&#x3001;&#x89C2;&#x5BDF;&#x8005;&#x6A21;&#x5F0F;&#x3001;&#x8D23;&#x4EFB;&#x94FE;&#x6A21;&#x5F0F;&#x3001;&#x7B56;&#x7565;&#x6A21;&#x5F0F;&#x3001;&#x6A21;&#x677F;&#x65B9;&#x6CD5;&#x6A21;&#x5F0F;&#x3002; 3. &#x521B;&#x5EFA;&#x578B;&#x6A21;&#x5F0F;3.1 &#x5355;&#x4F8B;&#x6A21;&#x5F0F;&#x5355;&#x4F8B;&#x6A21;&#x5F0F;&#x53EF;&#x4EE5;&#x8BF4;&#x662F;&#x6700;&#x5E38;&#x89C1;&#x7684;&#x8BBE;&#x8BA1;&#x6A21;&#x5F0F;&#xFF0C;&#x6211;&#x4EEC;&#x65E5;&#x5E38;&#x7528;&#x7684;&#x8FDE;&#x63A5;&#x6C60;&#x3001;&#x65E5;&#x5FD7;&#x7CFB;&#x7EDF;&#x57FA;&#x672C;&#x90FD;&#x662F;&#x5355;&#x4F8B;&#x6A21;&#x5F0F;&#x3002;&#x5B83;&#x7684;&#x6838;&#x5FC3;&#x76EE;&#x7684;&#x5C31;&#x662F;&#xFF1A;&#x5B9E;&#x73B0;&#x67D0;&#x4E2A;&#x5BF9;&#x8C61;&#x5728;&#x6574;&#x4E2A;&#x5E94;&#x7528;&#x4E2D;&#x6709;&#x4E14;&#x53EA;&#x6709;&#x4E00;&#x4E2A;&#x5B9E;&#x4F8B;&#x3002;&#x6240;&#x4EE5;&#x5B83;&#x7684;&#x4F7F;&#x7528;&#x573A;&#x666F;&#x4E5F;&#x5C31;&#x662F;&#x5728;&#x5E94;&#x7528;&#x8FD0;&#x884C;&#x4E2D;&#x67D0;&#x4E9B;&#x5BF9;&#x8C61;&#x53EA;&#x9700;&#x8981;&#x4E00;&#x4E2A;&#xFF0C;&#x4F8B;&#x5982;&#xFF1A;&#x7EBF;&#x7A0B;&#x6C60;&#x3001;&#x7F13;&#x5B58;&#x3001;&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#x7B49;&#xFF0C;&#x5982;&#x679C;&#x521B;&#x9020;&#x4E86;&#x591A;&#x4E2A;&#x5B9E;&#x4F8B;&#xFF0C;&#x53EF;&#x80FD;&#x4F1A;&#x51FA;&#x73B0;&#x4EE5;&#x4E0B;&#x95EE;&#x9898;&#xFF1A;&#x5360;&#x7528;&#x8FC7;&#x591A;&#x8D44;&#x6E90;&#x3001;&#x8D44;&#x6E90;&#x6D6A;&#x8D39;&#x3001;&#x4E0D;&#x4E00;&#x81F4;&#x7684;&#x7ED3;&#x679C;&#x7B49;&#x3002;&#x5355;&#x4F8B;&#x6A21;&#x5F0F;&#x7684;&#x5E38;&#x89C1;&#x5B9E;&#x73B0;&#x65B9;&#x5F0F;&#x6709;&#x4E24;&#x79CD;&#xFF1A;&#x997F;&#x6C49;&#x5F0F;&#x548C;&#x61D2;&#x6C49;&#x5F0F;&#xFF0C;&#x4F46;Java1.5&#x4EE5;&#x540E;&#xFF0C;&#x679A;&#x4E3E;&#x65B9;&#x5F0F;&#x5B9E;&#x73B0;&#x5355;&#x4F8B;&#x6A21;&#x5F0F;&#x53EF;&#x4EE5;&#x8BF4;&#x6210;&#x4E3A;&#x6700;&#x4F73;&#x65B9;&#x5F0F;&#x3002; 3.1.1 &#x997F;&#x6C49;&#x5F0F;&#x997F;&#x6C49;&#x5F0F;&#x662F;&#x5728;&#x7C7B;&#x52A0;&#x8F7D;&#x521D;&#x59CB;&#x5316;&#x65F6;&#x5C31;&#x521B;&#x5EFA;&#x5BF9;&#x8C61;,&#x8FDB;&#x884C;&#x5B9E;&#x4F8B;&#x5316;&#xFF0C;&#x9700;&#x8981;&#x4F7F;&#x7528;&#x5BF9;&#x8C61;&#x65F6;&#x5C31;&#x8FD4;&#x56DE;&#x8BE5;&#x5B9E;&#x4F8B;&#x3002;show the code&#xFF1A; 12345678910111213public class HungrySingleton { //&#x79C1;&#x6709;&#x5316;&#x6784;&#x9020;&#x51FD;&#x6570; private HungrySingleton() { } //&#x7C7B;&#x52A0;&#x8F7D;&#x521D;&#x59CB;&#x5316;&#x65F6;&#x5C31;&#x521B;&#x5EFA;&#x5BF9;&#x8C61;,&#x8FDB;&#x884C;&#x5B9E;&#x4F8B;&#x5316; private static final HungrySingleton hungrySingleton = new HungrySingleton(); //&#x5BF9;&#x5916;&#x63D0;&#x4F9B;&#x5BF9;&#x8C61;&#x7684;&#x83B7;&#x53D6;&#x65B9;&#x6CD5;,&#x5B9E;&#x73B0;&#x5355;&#x4F8B; public static HungrySingleton getSingleton() { return hungrySingleton; }} &#x8FD9;&#x79CD;&#x65B9;&#x5F0F;&#x662F;&#x6700;&#x7B80;&#x5355;&#x7684;&#x65B9;&#x5F0F;&#xFF0C;&#x540C;&#x65F6;&#x4E5F;&#x662F;&#x7EBF;&#x7A0B;&#x5B89;&#x5168;&#x7684;&#xFF0C;&#x4F46;&#x662F;&#x56E0;&#x4E3A;&#x4E0D;&#x662F;&#x6309;&#x9700;&#x4F7F;&#x7528;&#xFF0C;&#x6240;&#x4EE5;&#x53EF;&#x80FD;&#x4F1A;&#x9020;&#x6210;&#x5185;&#x5B58;&#x6D6A;&#x8D39;&#x3002; 3.1.2 &#x61D2;&#x6C49;&#x5F0F;&#x61D2;&#x6C49;&#x5F0F;&#x662F;&#x5728;&#x7B2C;&#x4E00;&#x6B21;&#x9700;&#x8981;&#x7684;&#x65F6;&#x5019;&#x5B9E;&#x4F8B;&#x5316;&#x5BF9;&#x8C61;&#xFF0C;&#x540E;&#x9762;&#x518D;&#x9700;&#x8981;&#x65F6;&#x76F4;&#x63A5;&#x8FD4;&#x56DE;&#x7B2C;&#x4E00;&#x6B21;&#x5B9E;&#x4F8B;&#x5316;&#x7684;&#x5BF9;&#x8C61;&#x3002;show the code&#xFF1A; 12345678910111213141516public class LazySingleton { //&#x79C1;&#x6709;&#x5316;&#x6784;&#x9020;&#x51FD;&#x6570; private LazySingleton() { } //&#x521B;&#x5EFA;&#x79C1;&#x6709;&#x9759;&#x6001;&#x5BF9;&#x8C61; private static LazySingleton lazySingleton = null; //&#x5BF9;&#x5916;&#x63D0;&#x4F9B;&#x5BF9;&#x8C61;&#x7684;&#x83B7;&#x53D6;&#x65B9;&#x6CD5;,&#x5B9E;&#x73B0;&#x5355;&#x4F8B; public static LazySingleton getLazySingleton() { if (lazySingleton == null) { lazySingleton = new LazySingleton(); } return lazySingleton; }} &#x61D2;&#x6C49;&#x5F0F;&#x5C5E;&#x4E8E;&#x61D2;&#x52A0;&#x8F7D;&#xFF0C;&#x4F46;&#x662F;&#x5C5E;&#x4E8E;&#x7EBF;&#x7A0B;&#x4E0D;&#x5B89;&#x5168;&#x7684;&#xFF0C;&#x53EA;&#x80FD;&#x5728;&#x5355;&#x7EBF;&#x7A0B;&#x4E0B;&#x4F7F;&#x7528;&#xFF0C;&#x5982;&#x679C;&#x60F3;&#x8981;&#x7EBF;&#x7A0B;&#x5B89;&#x5168;&#x53EF;&#x4EE5;&#x7528;&#x4EE5;&#x4E0B;&#x4E24;&#x79CD;&#x65B9;&#x5F0F;&#xFF1A; &#x53CC;&#x91CD;&#x6821;&#x9A8C;&#x9501;&#x61D2;&#x6C49;&#x5F0F; 123456789101112131415161718public class DoubleCheckLazySingleton { public volatile static DoubleCheckLazySingleton doubleCheckLazySingleton; private DoubleCheckLazySingleton() { } public static DoubleCheckLazySingleton getSingleton() { if (doubleCheckLazySingleton == null) { synchronized (DoubleCheckLazySingleton.class) { if (doubleCheckLazySingleton == null) { doubleCheckLazySingleton = new DoubleCheckLazySingleton(); } } } return doubleCheckLazySingleton; }} &#x9759;&#x6001;&#x5185;&#x90E8;&#x7C7B;&#x61D2;&#x6C49;&#x5F0F; 12345678910111213public class InnerStaticLazySingleton { //&#x79C1;&#x6709;&#x5316;&#x6784;&#x9020;&#x51FD;&#x6570; private InnerStaticLazySingleton() { } //&#x9759;&#x6001;&#x5185;&#x90E8;&#x7C7B; private static class InnerClass { private static final InnerStaticLazySingleton singleton = new InnerStaticLazySingleton(); } public static InnerStaticLazySingleton getSingleton() { return InnerClass.singleton; } } &#x8FD9;&#x4E24;&#x79CD;&#x65B9;&#x5F0F;&#x90FD;&#x662F;&#x7EBF;&#x7A0B;&#x5B89;&#x5168;&#x7684;&#xFF0C;&#x61D2;&#x52A0;&#x8F7D;&#x4E14;&#x6548;&#x7387;&#x9AD8;&#x3002; 3.1.3 &#x679A;&#x4E3E;&#x5F0F;&#x679A;&#x4E3E;&#x65B9;&#x5F0F;&#x662F;JDK1.5&#x540E;&#x51FA;&#x6765;&#x65B9;&#x5F0F;&#xFF0C;&#x76EE;&#x524D;&#x6BD4;&#x8F83;&#x5C11;&#x89C1;&#xFF0C;&#x4F46;&#x5B83;&#x4E0D;&#x4EC5;&#x80FD;&#x907F;&#x514D;&#x591A;&#x7EBF;&#x7A0B;&#x540C;&#x6B65;&#x95EE;&#x9898;&#xFF0C;&#x800C;&#x4E14;&#x8FD8;&#x80FD;&#x9632;&#x6B62;&#x53CD;&#x5E8F;&#x5217;&#x5316;&#x91CD;&#x65B0;&#x521B;&#x5EFA;&#x65B0;&#x7684;&#x5BF9;&#x8C61;&#xFF0C;&#x4E14;&#x4EE3;&#x7801;&#x7B80;&#x5355;&#xFF0C;&#x300A;Effective Java &#x4E2D;&#x6587;&#x7248; &#x7B2C;&#x4E8C;&#x7248;&#x300B;&#x4E0A;&#x8BF4;&#xFF1A;&#x5355;&#x5143;&#x7D20;&#x7684;&#x679A;&#x4E3E;&#x7C7B;&#x578B;&#x5DF2;&#x7ECF;&#x6210;&#x4E3A;&#x5B9E;&#x73B0;Singleton&#x7684;&#x6700;&#x4F73;&#x65B9;&#x6CD5;&#x3002;&#x3002;show the code&#xFF1A; 12345678910111213public enum EnumSingleton { SINGLETON; //&#x5B9E;&#x73B0;&#x5177;&#x4F53;&#x4E1A;&#x52A1;&#x903B;&#x8F91;&#x7684;&#x65B9;&#x6CD5; EnumSingleton.SINGLETON.methond() &#x8C03;&#x7528; public Object methond() { return null; } //&#x5B9E;&#x73B0;&#x5177;&#x4F53;&#x4E1A;&#x52A1;&#x903B;&#x8F91;&#x7684;&#x65B9;&#x6CD5; &#x53EF;&#x76F4;&#x63A5; EnumSingleton.methond2() &#x8C03;&#x7528; public static Object methond2() { return null; }} 3.2 &#x5DE5;&#x5382;&#x6A21;&#x5F0F;&#x5DE5;&#x5382;&#x6A21;&#x5F0F;&#x4E5F;&#x662F;&#x5E38;&#x89C1;&#x7684;&#x8BBE;&#x8BA1;&#x6A21;&#x5F0F;&#xFF0C;&#x6211;&#x4EEC;&#x5E73;&#x5E38;&#x7528;&#x7684;&#x6570;&#x636E;&#x5E93;&#x8FDE;&#x63A5;&#x6C60;&#xFF08;JDBC&#xFF09;&#x3001;Spring beanfactory&#x5C31;&#x4F7F;&#x7528;&#x4E86;&#x5DE5;&#x5382;&#x6A21;&#x5F0F;&#x3002;&#x5B83;&#x7684;&#x6838;&#x5FC3;&#x5C31;&#x662F;&#x5C06;&#x6211;&#x4EEC;&#x5BF9;&#x4E00;&#x4E2A;&#x5BF9;&#x8C61;&#xFF08;&#x53EF;&#x80FD;&#x4F1A;&#x6709;&#x591A;&#x4E2A;&#x4E0D;&#x540C;&#x8868;&#x73B0;&#x5F62;&#x5F0F;&#x7684;&#x5B9E;&#x4F8B;&#xFF09;&#x7684;&#x5B9E;&#x4F8B;&#x5316;&#x64CD;&#x4F5C;&#x7ED9;&#x62BD;&#x8C61;&#x51FA;&#x6765;&#xFF0C;&#x4EA4;&#x7ED9;&#x4E00;&#x4E2A;&#x5DE5;&#x5382;&#x7C7B;&#x5904;&#x7406;&#xFF0C;&#x5DE5;&#x5382;&#x7C7B;&#x6839;&#x636E;&#x6761;&#x4EF6;&#x4E0D;&#x540C;&#xFF0C;&#x5BF9;&#x5BF9;&#x8C61;&#x8FDB;&#x884C;&#x4E0D;&#x540C;&#x7684;&#x5B9E;&#x4F8B;&#x5316;&#x7136;&#x540E;&#x8FD4;&#x56DE;&#x7684;&#x8FC7;&#x7A0B;&#x3002;&#x5B9E;&#x73B0;&#x5E94;&#x7528;&#x4E2D;&#x7684;&#x53EF;&#x62D3;&#x5C55;&#x6027;&#x3001;&#x4F4E;&#x8026;&#x5408;&#x3001;&#x8D23;&#x4EFB;&#x5206;&#x5272;&#x3002;&#x5DE5;&#x5382;&#x6A21;&#x5F0F;&#x901A;&#x5E38;&#x5206;&#x4E3A;&#xFF1A;&#x7B80;&#x5355;&#x5DE5;&#x5382;&#x6A21;&#x5F0F;&#x3001;&#x5DE5;&#x5382;&#x65B9;&#x6CD5;&#x6A21;&#x5F0F;&#x548C;&#x62BD;&#x8C61;&#x5DE5;&#x5382;&#x6A21;&#x5F0F;&#x3002; 3.2.1 &#x5DE5;&#x5382;&#x65B9;&#x6CD5;&#x6A21;&#x5F0F;1. &#x7B80;&#x5355;&#x5DE5;&#x5382;&#x6A21;&#x5F0F;&#xFF1A; &#x7B80;&#x5355;&#x5DE5;&#x5382;&#x6A21;&#x5F0F;&#x4E00;&#x822C;&#x88AB;&#x79F0;&#x4E3A;&#x5DE5;&#x5382;&#x65B9;&#x6CD5;&#x6A21;&#x5F0F;&#x7684;&#x7279;&#x4F8B;&#xFF0C;&#x4E5F;&#x7B97;&#x4E00;&#x79CD;&#x5DE5;&#x5382;&#x65B9;&#x6CD5;&#x6A21;&#x5F0F;&#xFF0C;&#x4E00;&#x822C;&#x6709;&#x4E09;&#x4E2A;&#x89D2;&#x8272;&#xFF1A;&#x5DE5;&#x5382;&#x7C7B;&#xFF1A;&#x8D1F;&#x8D23;&#x521B;&#x5EFA;&#xFF08;&#x5B9E;&#x4F8B;&#x5316;&#xFF09;&#x5177;&#x4F53;&#x5BF9;&#x8C61;&#xFF0C;&#x8FDB;&#x884C;&#x4E1A;&#x52A1;&#x64CD;&#x4F5C;&#xFF1B;&#x62BD;&#x8C61;&#x7236;&#x7C7B;&#xFF1A;&#x662F;&#x5DE5;&#x5382;&#x7C7B;&#x521B;&#x5EFA;&#x7684;&#x6240;&#x6709;&#x5BF9;&#x8C61;&#x7684;&#x7236;&#x7C7B;&#xFF0C;&#x5305;&#x542B;&#x4E86;&#x6240;&#x6709;&#x5BF9;&#x8C61;&#x5171;&#x540C;&#x62E5;&#x6709;&#x7684;&#x63A5;&#x53E3;&#x65B9;&#x6CD5;&#xFF1B;&#x5177;&#x4F53;&#x5BF9;&#x8C61;&#xFF1A;&#x662F;&#x5DE5;&#x5382;&#x7C7B;&#x5E94;&#x8BE5;&#x521B;&#x5EFA;&#xFF08;&#x5B9E;&#x4F8B;&#x5316;&#xFF09;&#x7684;&#x5177;&#x4F53;&#x7684;&#x5BF9;&#x8C61;&#xFF0C;&#x7EE7;&#x627F;&#x4E8E;&#x62BD;&#x8C61;&#x7236;&#x7C7B;&#x3002;&#x4F8B;&#x5982;&#x6211;&#x4EEC;&#x6709;&#x4E00;&#x4E2A;&#x624B;&#x673A;&#x5BF9;&#x8C61;(&#x62BD;&#x8C61;&#x7236;&#x7C7B;)&#xFF0C;&#x4F46;&#x8FD9;&#x4E2A;&#x5BF9;&#x8C61;&#x662F;&#x62BD;&#x8C61;&#x7684;&#xFF0C;&#x56E0;&#x4E3A;&#x624B;&#x673A;&#x6709;&#x4E0D;&#x540C;&#x54C1;&#x724C;&#x3001;&#x578B;&#x53F7;&#x6216;&#x914D;&#x7F6E;&#x7684;&#xFF0C;&#x4E8E;&#x662F;&#x6211;&#x4EEC;&#x5C06;&#x8FD9;&#x4E9B;&#x6761;&#x4EF6;&#x7ED9;&#x5DE5;&#x5382;&#xFF08;&#x5DE5;&#x5382;&#x7C7B;&#xFF09;&#xFF0C;&#x5DE5;&#x5382;&#x6839;&#x636E;&#x8FD9;&#x4E9B;&#x6761;&#x4EF6;&#x751F;&#x6210;&#x76F8;&#x5E94;&#x6761;&#x4EF6;&#x7684;&#x624B;&#x673A;&#xFF08;&#x5177;&#x4F53;&#x5BF9;&#x8C61;&#xFF09;&#x3002;show the code:&#x5DE5;&#x5382;&#x7C7B;&#xFF08;&#x53EA;&#x9700;&#x7528;&#x5176;&#x4E2D;&#x7684;&#x4E00;&#x79CD;&#x65B9;&#x6CD5;&#xFF09;&#xFF1A; 123456789101112131415161718192021222324252627public class PhoneFactory { //&#x901A;&#x8FC7;&#x53C2;&#x6570;&#x5339;&#x914D;,&#x4E0D;&#x63A8;&#x8350;&#xFF0C;&#x62D3;&#x5C55;&#x6027;&#x4F4E; public static Phone createPhone(String brand) { Phone phone = null; if (&quot;MZ&quot;.equals(brand)) { phone = new MZPhone(); } else if (&quot;Mi&quot;.equals(brand)) { phone = new MiPhone(); } return phone; } //&#x901A;&#x8FC7;&#x7C7B;&#x540D;(&#x63A8;&#x8350;,&#x5B9E;&#x9645;&#x5F00;&#x53D1;&#x4E2D;&#x7C7B;&#x540D;&#x53EF;&#x4EE5;&#x5728;&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#x4E2D;&#x4EE5;KV&#x5F62;&#x5F0F;&#x5B58;&#x50A8;,&#x8C03;&#x7528;&#x65F6;&#x53EA;&#x9700;&#x4F20;key&#x53D6;class&#x503C;) public static Phone createPhoneByClass(String className) { Phone phone = null; try { phone = (Phone) Class.forName(className).newInstance(); } catch (InstantiationException e) { e.printStackTrace(); } catch (IllegalAccessException e) { e.printStackTrace(); } catch (ClassNotFoundException e) { e.printStackTrace(); } return phone; }} &#x62BD;&#x8C61;&#x7236;&#x7C7B;&#xFF1A; 123456789101112131415public abstract class Phone { //&#x914D;&#x7F6E; private String brand; public abstract void make(); public void test() { System.out.println(brand + &quot;&#x724C;&#x624B;&#x673A;&#x6D4B;&#x8BD5;.&quot;); } public String getBrand() { return brand; } public void setBrand(String brand) { this.brand = brand; }} &#x5177;&#x4F53;&#x5BF9;&#x8C61;&#xFF08;&#x4E3E;Mi&#x3001;MZ&#x4E24;&#x4E2A;&#x54C1;&#x724C;&#x7684;&#x4F8B;&#x5B50;&#xFF09;&#xFF1A; 1234567891011121314151617//Mi&#x724C;public class MiPhone extends Phone { @Override public void make() { super.setBrand(&quot;Mi&quot;); System.out.println(super.getBrand() + &quot;&#x724C;&#x624B;&#x673A;&#x751F;&#x4EA7;.&quot;); }}//MZ&#x724C;public class MZPhone extends Phone { @Override public void make() { super.setBrand(&quot;MZ&quot;); System.out.println(super.getBrand() + &quot;&#x724C;&#x624B;&#x673A;&#x751F;&#x4EA7;.&quot;); }} &#x6D4B;&#x8BD5;&#x7C7B;&#xFF1A; 12345678public class test { public static void main(String[] args) {// Phone phone = PhoneFactory.createPhone(&quot;MZNote&quot;); Phone phone = PhoneFactory.createPhoneByClass(&quot;DesignPattern.CreationalPattern.Factory.MiPhone&quot;); phone.make(); phone.test(); }} 2. &#x5DE5;&#x5382;&#x65B9;&#x6CD5;&#x6A21;&#x5F0F;&#xFF1A;&#x968F;&#x7740;&#x5DE5;&#x5382;&#x7684;&#x6269;&#x5927;&#xFF0C;&#x6D8C;&#x73B0;&#x4E86;&#x4E86;&#x8D8A;&#x6765;&#x8D8A;&#x591A;&#x7684;&#x7684;&#x54C1;&#x724C;&#x5BA2;&#x6237;&#xFF0C;&#x5982;HW&#xFF0C;OPPO&#x7B49;&#xFF0C;&#x8FD9;&#x65F6;&#x5019;&#x539F;&#x6765;&#x90A3;&#x4E2A;&#x5DE5;&#x5382;&#x7684;&#x5DE5;&#x4F5C;&#x538B;&#x529B;&#x8D8A;&#x6765;&#x8D8A;&#x5927;&#xFF0C;&#x540C;&#x65F6;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x770B;&#x5230;&#x7B80;&#x5355;&#x5DE5;&#x5382;&#x6A21;&#x5F0F;&#x5176;&#x5B9E;&#x4E5F;&#x8FDD;&#x80CC;&#x4E86;&#x5F00;&#x95ED;&#x539F;&#x5219;&#xFF0C;&#x6211;&#x4EEC;&#x8FD9;&#x65F6;&#x5019;&#x5C31;&#x9700;&#x8981;&#x4F7F;&#x7528;&#x5DE5;&#x5382;&#x65B9;&#x6CD5;&#x6A21;&#x5F0F;&#x4E86;&#xFF0C;&#x5C06;&#x5DE5;&#x5382;&#x7C7B;&#x62BD;&#x8C61;&#x5316;&#xFF0C;&#x5EFA;&#x7ACB;&#x4E0D;&#x540C;&#x54C1;&#x724C;&#x7684;&#x5DE5;&#x5382;&#x7C7B;&#x3002; &#x6240;&#x4EE5;&#x8DDF;&#x7B80;&#x5355;&#x5DE5;&#x5382;&#x6A21;&#x5F0F;&#x76F8;&#x6BD4;&#xFF1A;&#x5DE5;&#x5382;&#x65B9;&#x6CD5;&#x6A21;&#x5F0F;&#x5BF9;&#x5DE5;&#x5382;&#x7C7B;&#x4E5F;&#x8FDB;&#x884C;&#x4E86;&#x62BD;&#x8C61;&#xFF0C;&#x591A;&#x4E86;&#x4E2A;&#x62BD;&#x8C61;&#x5DE5;&#x5382;&#x7684;&#x89D2;&#x8272;&#xFF0C;&#x521B;&#x5EFA;&#x5BF9;&#x8C61;&#x7684;&#x5DE5;&#x4F5C;&#x4EA4;&#x7531;&#x5B9E;&#x73B0;&#x6216;&#x7EE7;&#x627F;&#x4E86;&#x62BD;&#x8C61;&#x5DE5;&#x5382;&#x7684;&#x5177;&#x4F53;&#x7684;&#x5DE5;&#x5382;&#x7C7B;&#x5B9E;&#x73B0;&#x3002;show the code: &#x5DE5;&#x5382;&#x7C7B;&#xFF1A; 12345678910111213141516171819202122&#x62BD;&#x8C61;&#x5DE5;&#x5382;&#x7C7B;:public abstract class PhoneFactory { protected abstract Phone createPhone();}&#x5177;&#x4F53;&#x5B9E;&#x73B0;&#x7684;&#x5DE5;&#x5382;&#x7C7B;&#xFF0C;Mi&#x724C;&#x5DE5;&#x5382;:public class MiPhoneFactory extends PhoneFactory { @Override protected Phone createPhone() { Phone phone = new MiPhone(); return phone; }}&#x5177;&#x4F53;&#x5B9E;&#x73B0;&#x7684;&#x5DE5;&#x5382;&#x7C7B;&#xFF0C;MZ&#x724C;&#x5DE5;&#x5382;:public class MZPhoneFactory extends PhoneFactory { @Override protected Phone createPhone() { Phone phone = new MZPhone(); return phone; }} &#x5177;&#x4F53;&#x5BF9;&#x8C61;&#x7C7B;&#x8DDF;&#x4E0A;&#x9762;&#x7684;&#x7B80;&#x5355;&#x5DE5;&#x5382;&#x6A21;&#x5F0F;&#x4E00;&#x6837;&#xFF0C;&#x4E3B;&#x8981;&#x53D8;&#x5316;&#x5C31;&#x518D;&#x5DE5;&#x5382;&#x7C7B;&#x7684;&#x62BD;&#x8C61;&#xFF0C;&#x8C03;&#x7528;&#x7684;&#x65B9;&#x5F0F;&#x53D8;&#x4E3A;&#xFF1A; 12345678public class test { public static void main(String[] args) { PhoneFactory factory = new MZPhoneFactory(); Phone phone = factory.createPhone(); phone.make(); phone.test(); }} &#x8FD9;&#x79CD;&#x5DE5;&#x5382;&#x65B9;&#x6CD5;&#x6A21;&#x5F0F;&#x76F8;&#x6BD4;&#x7B80;&#x5355;&#x5DE5;&#x5382;&#x6A21;&#x5F0F;&#x76F8;&#x6BD4;&#xFF0C;&#x5DE5;&#x5382;&#x7684;&#x7ED3;&#x6784;&#x662F;&#x7B26;&#x5408;&#x5F00;&#x95ED;&#x539F;&#x5219;&#x7684;&#xFF0C;&#x540C;&#x65F6;&#x539F;&#x6709;&#x5DE5;&#x5382;&#x7C7B;&#x7684;&#x538B;&#x529B;&#x964D;&#x4F4E;&#xFF0C;&#x67D0;&#x79CD;&#x7A0B;&#x5EA6;&#x4E0A;&#x4E5F;&#x662F;&#x964D;&#x4F4E;&#x4E86;&#x8026;&#x5408;&#x6027;&#x3002; 3.2.2 &#x62BD;&#x8C61;&#x5DE5;&#x5382;&#x6A21;&#x5F0F;&#x968F;&#x7740;&#x5DE5;&#x5382;&#x89C4;&#x6A21;&#x8FDB;&#x4E00;&#x6B65;&#x6269;&#x5927;&#xFF0C;&#x53D1;&#x73B0;&#x624B;&#x673A;&#x914D;&#x4EF6;&#x9700;&#x6C42;&#x5F88;&#x5927;&#x4E14;&#x5229;&#x6DA6;&#x5F88;&#x9AD8;&#xFF0C;&#x5F00;&#x59CB;&#x505A;&#x4E0D;&#x540C;&#x54C1;&#x724C;&#x7684;&#x624B;&#x673A;&#x914D;&#x4EF6;&#xFF0C;&#x5982;&#x5145;&#x7535;&#x5668;&#xFF0C;&#x6570;&#x636E;&#x7EBF;&#x7B49;&#xFF0C;&#x8FD9;&#x4E2A;&#x540E;&#x5DE5;&#x5382;&#x5C31;&#x4E0D;&#x6B62;&#x4E00;&#x4E2A;&#x4EA7;&#x54C1;&#x4E86;&#xFF0C;&#x5C31;&#x6709;&#x4E86;&#x4EA7;&#x54C1;&#x65CF;&#x7684;&#x6982;&#x5FF5;&#xFF1A;&#x4F4D;&#x4E8E;&#x4E0D;&#x540C;&#x4EA7;&#x54C1;&#x7B49;&#x7EA7;&#x7ED3;&#x6784;&#x4E2D;&#xFF0C;&#x529F;&#x80FD;&#x76F8;&#x5173;&#x8054;&#x7684;&#x4EA7;&#x54C1;&#x7EC4;&#x6210;&#x7684;&#x5BB6;&#x65CF;&#x3002;&#x4E0E;&#x5DE5;&#x5382;&#x65B9;&#x6CD5;&#x6A21;&#x5F0F;&#x76F8;&#x6BD4;&#xFF1A;&#x5DE5;&#x5382;&#x65B9;&#x6CD5;&#x6A21;&#x5F0F;&#x53EA;&#x6709;&#x4E00;&#x4E2A;&#x62BD;&#x8C61;&#x4EA7;&#x54C1;&#x7C7B;&#xFF0C;&#x800C;&#x62BD;&#x8C61;&#x5DE5;&#x5382;&#x6A21;&#x5F0F;&#x6709;&#x591A;&#x4E2A;&#x3002;&#x5DE5;&#x5382;&#x65B9;&#x6CD5;&#x6A21;&#x5F0F;&#x7684;&#x5177;&#x4F53;&#x5DE5;&#x5382;&#x7C7B;&#x53EA;&#x80FD;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x5177;&#x4F53;&#x4EA7;&#x54C1;&#x7C7B;&#x7684;&#x5B9E;&#x4F8B;&#xFF0C;&#x800C;&#x62BD;&#x8C61;&#x5DE5;&#x5382;&#x6A21;&#x5F0F;&#x53EF;&#x4EE5;&#x521B;&#x5EFA;&#x591A;&#x4E2A;&#x3002;&#x7B80;&#x5355;&#x70B9;&#x8BF4;&#xFF0C;&#x62BD;&#x8C61;&#x5DE5;&#x5382;&#x91CC;&#x4E00;&#x4E2A;&#x5DE5;&#x5382;&#x8981;&#x751F;&#x4EA7;&#x591A;&#x4E2A;&#x4EA7;&#x54C1;&#xFF0C;&#x5F53;&#x62BD;&#x8C61;&#x5DE5;&#x5382;&#x751F;&#x4EA7;&#x7684;&#x4EA7;&#x54C1;&#x53EA;&#x6709;&#x4E00;&#x4E2A;&#x65F6;&#xFF0C;&#x5C31;&#x53D8;&#x6210;&#x5DE5;&#x5382;&#x6A21;&#x5F0F;&#x4E86;&#x3002;&#x6240;&#x4EE5;&#x8FD9;&#x65F6;&#x5019;&#x5C31;&#x9700;&#x8981;&#x589E;&#x52A0;&#x76F8;&#x5E94;&#x7684;&#x62BD;&#x8C61;&#x4EA7;&#x54C1;&#x3001;&#x5177;&#x4F53;&#x7684;&#x4EA7;&#x54C1;&#x5B9E;&#x73B0;&#x3001;&#x62BD;&#x8C61;&#x7236;&#x7C7B;&#x589E;&#x52A0;&#x76F8;&#x5E94;&#x7684;&#x751F;&#x4EA7;&#x65B9;&#x5F0F;&#x3002;show the code:&#x4FEE;&#x6539;&#x7684;&#x62BD;&#x8C61;&#x5DE5;&#x5382;&#x7C7B;&#xFF1A; 1234567public abstract class PhoneFactory { //&#x751F;&#x4EA7;&#x624B;&#x673A; protected abstract Phone createPhone(); //&#x751F;&#x4EA7;&#x5145;&#x7535;&#x5668; protected abstract Charger createCharger();} &#x589E;&#x52A0;&#x7684;&#x5177;&#x4F53;&#x5B9E;&#x73B0;&#x5DE5;&#x5382;&#x7C7B;&#xFF1A; 1234567891011121314151617181920212223242526272829//Mi&#x724C;&#x5DE5;&#x5382;&#x7C7B;public class MiPhoneFactory extends PhoneFactory { @Override protected Phone createPhone() { Phone phone = new MiPhone(); return phone; } @Override protected Charger createCharger() { Charger charger = new MiCharger(); return charger; }}//MZ&#x724C;&#x5DE5;&#x5382;&#x7C7B;public class MZPhoneFactory extends PhoneFactory { @Override protected Phone createPhone() { Phone phone = new MZPhone(); return phone; } @Override protected Charger createCharger() { Charger charger = new MZCharger(); return charger; }} &#x589E;&#x52A0;&#x7684;&#x5145;&#x7535;&#x5668;&#x62BD;&#x8C61;&#x7C7B;&#x548C;&#x5177;&#x4F53;&#x5B9E;&#x73B0;&#xFF1A; 1234567891011121314151617181920212223242526272829303132public abstract class Charger { //&#x54C1;&#x724C; private String brand; public abstract void chargerMake(); public void test() { System.out.println(brand + &quot;&#x724C;&#x5145;&#x7535;&#x5668;&#x6D4B;&#x8BD5;.&quot;); } public String getBrand() { return brand; } public void setBrand(String brand) { this.brand = brand; }}//Mi&#x724C;&#x5B9E;&#x73B0;&#x7C7B;public class MiCharger extends Charger { @Override public void chargerMake() { super.setBrand(&quot;Mi&quot;); System.out.println(super.getBrand() + &quot;&#x724C;&#x5145;&#x7535;&#x5668;&#x751F;&#x4EA7;.&quot;); }}//MZ&#x724C;&#x5B9E;&#x73B0;&#x7C7B;public class MZCharger extends Charger { @Override public void chargerMake() { super.setBrand(&quot;MZ&quot;); System.out.println(super.getBrand() + &quot;&#x724C;&#x5145;&#x7535;&#x5668;&#x751F;&#x4EA7;.&quot;); }} &#x5176;&#x5B83;&#x4EE3;&#x7801;&#x8DDF;&#x5DE5;&#x5382;&#x65B9;&#x6CD5;&#x6A21;&#x5F0F;&#x4E00;&#x81F4;&#xFF0C;&#x8C03;&#x7528;&#x65B9;&#x5F0F;&#xFF1A; 1234567891011121314public class test { public static void main(String[] args) { PhoneFactory factory = new MZPhoneFactory(); //&#x751F;&#x4EA7;&#x624B;&#x673A; Phone phone = factory.createPhone(); phone.phoneMake(); phone.test(); //&#x751F;&#x4EA7;&#x5145;&#x7535;&#x5668; Charger charger = factory.createCharger(); charger.chargerMake(); charger.test(); }} &#x603B;&#x7ED3;&#x4E00;&#x4E0B;&#xFF1A;1. &#x5DE5;&#x5382;&#x6A21;&#x5F0F;&#x662F;&#x4E00;&#x79CD;&#x6781;&#x7AEF;&#x60C5;&#x51B5;&#x7684;&#x62BD;&#x8C61;&#x5DE5;&#x5382;&#x6A21;&#x5F0F;&#xFF0C;&#x800C;&#x62BD;&#x8C61;&#x5DE5;&#x5382;&#x6A21;&#x5F0F;&#x53EF;&#x4EE5;&#x770B;&#x6210;&#x662F;&#x5DE5;&#x5382;&#x6A21;&#x5F0F;&#x7684;&#x63A8;&#x5E7F;&#x3002;2. &#x5DE5;&#x5382;&#x6A21;&#x5F0F;&#x7528;&#x6765;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x4EA7;&#x54C1;&#x7684;&#x7B49;&#x7EA7;&#x7ED3;&#x6784;&#xFF0C;&#x800C;&#x62BD;&#x8C61;&#x5DE5;&#x5382;&#x6A21;&#x5F0F;&#x662F;&#x7528;&#x6765;&#x521B;&#x5EFA;&#x591A;&#x4E2A;&#x4EA7;&#x54C1;&#x7684;&#x7B49;&#x7EA7;&#x7ED3;&#x6784;&#x3002;3. &#x5DE5;&#x5382;&#x6A21;&#x5F0F;&#x53EA;&#x6709;&#x4E00;&#x4E2A;&#x62BD;&#x8C61;&#x4EA7;&#x54C1;&#x7C7B;&#xFF0C;&#x800C;&#x62BD;&#x8C61;&#x5DE5;&#x5382;&#x6A21;&#x5F0F;&#x54E6;&#x6709;&#x591A;&#x4E2A;&#x62BD;&#x8C61;&#x4EA7;&#x54C1;&#x7C7B;&#x3002;","tags":[{"name":"技术","slug":"技术","permalink":"http://todoright.com/tags/技术/"},{"name":"Java","slug":"Java","permalink":"http://todoright.com/tags/Java/"},{"name":"设计模式","slug":"设计模式","permalink":"http://todoright.com/tags/设计模式/"}]},{"title":"Jenkins基础使用进阶（持续更新）","date":"2016-08-03T01:26:12.000Z","path":"2016/08/03/Jenkins基础使用进阶（持续更新）/","text":"&#x672C;&#x6587;&#x4E3B;&#x8981;&#x8BB0;&#x5F55;&#x5728;&#x4F7F;&#x7528;Jenkins&#x7684;&#x5DE5;&#x4F5C;&#x4E2D;&#x9047;&#x5230;&#x7684;&#x4E00;&#x4E9B;&#x95EE;&#x9898;&#x6216;&#x8005;&#x9700;&#x6C42;&#xFF0C;&#x5E76;&#x63D0;&#x4F9B;&#x76F8;&#x5E94;&#x7684;&#x89E3;&#x51B3;&#x65B9;&#x6848;&#xFF08;&#x5168;&#x90E8;&#x6D4B;&#x8BD5;&#x901A;&#x8FC7;&#xFF09;&#xFF0C;&#x56E0;&#x4E3A;&#x662F;&#x521A;&#x521A;&#x5B66;&#x4E60;&#x4F7F;&#x7528;Jenkins&#xFF0C;&#x6709;&#x4E9B;&#x95EE;&#x9898;&#x5728;&#x7F51;&#x4E0A;&#x5E76;&#x6CA1;&#x6709;&#x627E;&#x5230;&#x5408;&#x9002;&#x81EA;&#x5DF1;&#x7684;&#x89E3;&#x51B3;&#x65B9;&#x6CD5;&#xFF0C;&#x662F;&#x81EA;&#x5DF1;&#x63A2;&#x7D22;&#x51FA;&#x6765;&#x7684;&#xFF0C;&#x6240;&#x4EE5;&#x53EF;&#x80FD;&#x5E76;&#x4E0D;&#x662F;&#x5F88;&#x597D;&#x7684;&#x65B9;&#x5F0F;&#xFF0C;&#x4F46;&#x81F3;&#x5C11;&#x80FD;&#x89E3;&#x51B3;&#x5F53;&#x4E0B;&#x7684;&#x95EE;&#x9898;&#xFF0C;&#x5982;&#x679C;&#x5927;&#x5BB6;&#x6709;&#x66F4;&#x597D;&#x7684;&#x89E3;&#x51B3;&#x65B9;&#x6848;&#xFF0C;&#x6073;&#x8BF7;&#x6307;&#x6559;&#x3002;&#x76EE;&#x524D;&#x6D89;&#x53CA;&#x7684;&#x5185;&#x5BB9;&#x4E3B;&#x8981;&#x5982;&#x4E0B;&#xFF1A; &#x6784;&#x5EFA;&#x7ED3;&#x679C;&#x90AE;&#x4EF6;&#x53D1;&#x9001; &#x914D;&#x7F6E;&#x6587;&#x4EF6;&#x66FF;&#x6362; 1. &#x6784;&#x5EFA;&#x7ED3;&#x679C;&#x90AE;&#x4EF6;&#x53D1;&#x9001;&#x8FD9;&#x4E2A;&#x4E3B;&#x8981;&#x5B9E;&#x73B0;&#x7684;&#x662F;&#x6784;&#x5EFA;&#x5B8C;&#x6210;&#x540E;&#xFF0C;&#x50CF;&#x76F8;&#x5173;&#x4EBA;&#x5458;&#x53D1;&#x9001;&#x4E00;&#x4EFD;&#x63A8;&#x9001;&#x90AE;&#x4EF6;&#xFF0C;&#x544A;&#x77E5;&#x6784;&#x5EFA;&#x4FE1;&#x606F;&#x53CA;&#x7ED3;&#x679C;&#x3002;&#x8FD9;&#x91CC;&#x4E3B;&#x8981;&#x4F7F;&#x7528;&#x5230;&#x4E24;&#x4E2A;&#x63D2;&#x4EF6;&#xFF1A;Email Extension Plugin&#x3001;Email Extension Template Plugin&#x3002; &#x5148;&#x8BBE;&#x7F6E;&#x90AE;&#x4EF6;&#x7684;&#x53D1;&#x9001;&#x8D26;&#x6237;(SMTP)&#x4FE1;&#x606F;&#x3002;&#x8FDB;&#x5165;[&#x7CFB;&#x7EDF;&#x7BA1;&#x7406;-&#x7CFB;&#x7EDF;&#x8BBE;&#x7F6E;-Extended E-mail Notification]&#xFF0C;&#x4E3B;&#x8981;&#x8BBE;&#x7F6E;&#x9009;&#x9879;&#xFF1A;SMTP server&#xFF1A;&#x8BBE;&#x7F6E;&#x90AE;&#x4EF6;&#x63D0;&#x4F9B;&#x5546;&#x7684;SMTP&#x5730;&#x5740;&#xFF0C;&#x4F8B;&#x5982;163&#x4F01;&#x4E1A;&#x90AE;&#x7BB1;&#x7684;&#x662F;smtp.ym.163.com&#x3002;Default Content Type&#xFF1A;&#x5185;&#x5BB9;&#x5C55;&#x73B0;&#x7684;&#x683C;&#x5F0F;&#xFF0C;&#x4E00;&#x822C;&#x9009;&#x62E9;HTML&#x3002;Default Recipients&#xFF1A;&#x9ED8;&#x8BA4;&#x6536;&#x4EF6;&#x4EBA;&#x3002;Use SMTP Authentication&#xFF1A;&#x4F7F;&#x7528;SMTP&#x8EAB;&#x4EFD;&#x9A8C;&#x8BC1;&#xFF0C;&#x70B9;&#x5F00;Default user E-mail suffix&#x4E0B;&#x9762;&#x7684;&#x9AD8;&#x7EA7;&#x6309;&#x94AE;&#x624D;&#x80FD;&#x770B;&#x5230;&#xFF0C;&#x9009;&#x4E2D;&#x3002;User Name&#xFF1A;&#x90AE;&#x4EF6;&#x53D1;&#x9001;&#x8D26;&#x6237;&#x7684;&#x7528;&#x6237;&#x540D;&#x3002;Password&#xFF1A;&#x90AE;&#x4EF6;&#x53D1;&#x9001;&#x8D26;&#x6237;&#x7684;&#x5BC6;&#x7801;&#x3002;SMTP port&#xFF1A;SMTP&#x7AEF;&#x53E3;&#x3002; &#x8BBE;&#x7F6E;&#x90AE;&#x4EF6;&#x6A21;&#x677F;&#xFF0C;&#x6A21;&#x677F;&#x7684;&#x529F;&#x80FD;&#x4E3B;&#x8981;&#x662F;&#x65B9;&#x4FBF;&#x540E;&#x9762;&#x76F4;&#x63A5;&#x5728;&#x76F8;&#x5E94;&#x7684;&#x5DE5;&#x7A0B;&#x91CC;&#xFF0C;&#x4E0D;&#x9700;&#x8981;&#x518D;&#x91CD;&#x590D;&#x7F16;&#x5199;&#x6807;&#x9898;&#x3001;&#x5185;&#x5BB9;&#x7B49;&#x5171;&#x901A;&#x4FE1;&#x606F;&#x3002;&#x8FDB;&#x5165;[&#x7CFB;&#x7EDF;&#x7BA1;&#x7406;&#x2014;Editable Email Notification Templates]&#xFF0C;&#x4F1A;&#x9996;&#x5148;&#x770B;&#x5230;&#x5DF2;&#x6709;&#x7684;&#x6A21;&#x677F;&#x5217;&#x8868;&#xFF0C;&#x53EF;&#x4EE5;&#x8FDB;&#x884C;&#x7F16;&#x8F91;&#x3001;&#x5220;&#x9664;&#x64CD;&#x4F5C;&#xFF0C;&#x7136;&#x540E;&#x5DE6;&#x4FA7;&#x83DC;&#x5355;&#x7684;Add New Template&#x53EF;&#x4EE5;&#x65B0;&#x589E;&#x90AE;&#x4EF6;&#x6A21;&#x677F;&#xFF0C;&#x4E3B;&#x8981;&#x8BBE;&#x7F6E;&#x9009;&#x9879;&#xFF1A; Name&#xFF1A;&#x6A21;&#x677F;&#x540D;&#x79F0;&#xFF0C;&#x5DE5;&#x7A0B;&#x4E2D;&#x4F1A;&#x9009;&#x62E9;&#x76F8;&#x5E94;&#x540D;&#x79F0;&#x7684;&#x6A21;&#x677F;&#x8C03;&#x7528;&#x3002; Default Subject&#xFF1A;&#x90AE;&#x4EF6;&#x6807;&#x9898;&#xFF0C;&#x8FD9;&#x91CC;&#x63D0;&#x4F9B;&#x4E00;&#x4E2A;&#x6A21;&#x677F;&#xFF1A;&#x6784;&#x5EFA;&#x901A;&#x77E5;:$PROJECT_NAME - Build # $BUILD_NUMBER - $BUILD_STATUS!&#x3002; Default Content&#xFF1A;&#x90AE;&#x4EF6;&#x5185;&#x5BB9;&#x3002;&#x8FD9;&#x91CC;&#x63D0;&#x4F9B;&#x4E00;&#x4E2A;&#x6A21;&#x677F;&#xFF1A; 12345678910&lt;br/&gt;(&#x672C;&#x90AE;&#x4EF6;&#x662F;&#x7A0B;&#x5E8F;&#x81EA;&#x52A8;&#x4E0B;&#x53D1;&#x7684;&#xFF0C;&#x8BF7;&#x52FF;&#x56DE;&#x590D;&#xFF01;)&lt;br/&gt;&lt;hr/&gt;&#x9879;&#x76EE;&#x540D;&#x79F0;&#xFF1A;$PROJECT_NAME&lt;br/&gt;&lt;hr/&gt;&#x6784;&#x5EFA;&#x7F16;&#x53F7;&#xFF1A;$BUILD_NUMBER&lt;br/&gt;&lt;hr/&gt;svn&#x7248;&#x672C;&#x53F7;&#xFF1A;${SVN_REVISION}&lt;br/&gt;&lt;hr/&gt;&#x6784;&#x5EFA;&#x72B6;&#x6001;&#xFF1A;$BUILD_STATUS&lt;br/&gt;&lt;hr/&gt;&#x89E6;&#x53D1;&#x539F;&#x56E0;&#xFF1A;${CAUSE}&lt;br/&gt;&lt;hr/&gt;&#x6784;&#x5EFA;&#x65E5;&#x5FD7;&#x5730;&#x5740;&#xFF1A;&lt;a href=&quot;${BUILD_URL}console&quot;&gt;${BUILD_URL}console&lt;/a&gt;&lt;br/&gt;&lt;hr/&gt;&#x6784;&#x5EFA;&#x5730;&#x5740;&#xFF1A;&lt;a href=&quot;$BUILD_URL&quot;&gt;$BUILD_URL&lt;/a&gt;&lt;br/&gt;&lt;hr/&gt;&#x53D8;&#x66F4;&#x96C6;:${JELLY_SCRIPT,template=&quot;html&quot;}&lt;br/&gt;&lt;hr/&gt; Attachments&#xFF1A;&#x90AE;&#x4EF6;&#x9644;&#x4EF6;&#x3002; Attach Build Log&#xFF1A;&#x662F;&#x5426;&#x5C06;&#x6784;&#x5EFA;&#x65E5;&#x5FD7;&#x4F5C;&#x4E3A;&#x9644;&#x4EF6;&#xFF0C;&#x4E09;&#x4E2A;&#x9009;&#x9879;&#x5206;&#x522B;&#x4E3A;&#x9700;&#x8981;&#xFF0C;&#x4E0D;&#x9700;&#x8981;&#xFF0C;&#x538B;&#x7F29;&#x4F5C;&#x9644;&#x4EF6;&#x3002; Triggers&#xFF1A;&#x90AE;&#x4EF6;&#x53D1;&#x9001;&#x89E6;&#x53D1;&#x6761;&#x4EF6;&#xFF0C;&#x9700;&#x8981;&#x70B9;&#x51FB;&#x4E0B;&#x9762;&#x7684;Advanced Setting&#x6309;&#x94AE;&#x624D;&#x4F1A;&#x51FA;&#x6765;&#x3002;&#x7136;&#x540E;&#x70B9;&#x51FB;Add Trigger&#x6309;&#x94AE;&#xFF0C;&#x9009;&#x62E9;&#x89E6;&#x53D1;&#x4E8B;&#x4EF6;&#xFF0C;&#x6211;&#x8FD9;&#x91CC;&#x9009;&#x62E9;Always&#xFF0C;&#x5373;&#x4E0D;&#x7BA1;&#x6784;&#x5EFA;&#x72B6;&#x6001;&#xFF0C;&#x5747;&#x53D1;&#x9001;&#x90AE;&#x4EF6;&#x3002;&#x7136;&#x540E;&#x8FD8;&#x6709;&#x4E00;&#x4E2A;Send To&#x9009;&#x9879;&#xFF0C;&#x6211;&#x8FD9;&#x91CC;&#x5206;&#x522B;&#x9009;&#x62E9;Developers&#x548C;Recipient List&#xFF0C;&#x5373;&#x53D1;&#x9001;&#x7ED9;&#x6784;&#x5EFA;&#x7684;&#x4EBA;&#x548C;&#x90AE;&#x4EF6;&#x5217;&#x8868;&#x4E2D;&#x7684;&#x4EBA;&#x5458;&#x3002; &#x5168;&#x90E8;&#x8BBE;&#x7F6E;&#x5B8C;&#x6210;&#x540E;&#xFF0C;&#x70B9;&#x51FB;&#x63D0;&#x4EA4;&#x6309;&#x94AE;&#x5373;&#x53EF;&#x3002; &#x6700;&#x540E;&#x7ED9;&#x76F8;&#x5E94;&#x7684;&#x5DE5;&#x7A0B;&#x7ED1;&#x5B9A;&#x90AE;&#x4EF6;&#x6A21;&#x677F;&#xFF0C;&#x8FDB;&#x5165;&#x5DE5;&#x7A0B;&#x7684;&#x6784;&#x5EFA;&#x914D;&#x7F6E;&#xFF0C;&#x9009;&#x62E9;[&#x6784;&#x5EFA;&#x540E;&#x64CD;&#x4F5C;-&#x589E;&#x52A0;&#x6784;&#x5EFA;&#x540E;&#x64CD;&#x4F5C;&#x6B65;&#x9AA4;]&#xFF0C;&#x9009;&#x62E9;Editable Email Notification Templates&#xFF0C;&#x7136;&#x540E;&#x5728;Templates&#x4E2D;&#x7684;&#x4E0B;&#x62C9;&#x5217;&#x8868;&#x4E2D;&#x9009;&#x62E9;&#x521A;&#x521A;&#x8BBE;&#x7F6E;&#x7684;&#x6A21;&#x677F;&#x5373;&#x53EF;&#x3002; &#x6210;&#x529F;&#x6536;&#x5230;&#x7684;&#x90AE;&#x4EF6;&#xFF1A; 2. &#x914D;&#x7F6E;&#x6587;&#x4EF6;&#x66FF;&#x6362;&#x4E00;&#x822C;&#x5DE5;&#x7A0B;&#x81F3;&#x5C11;&#x90FD;&#x6709;&#x6D4B;&#x8BD5;&#x73AF;&#x5883;&#x548C;&#x6B63;&#x5F0F;&#x73AF;&#x5883;&#xFF0C;&#x4E0D;&#x540C;&#x73AF;&#x5883;&#x7684;&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#x662F;&#x4E0D;&#x4E00;&#x6837;&#x7684;&#xFF0C;&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#x66FF;&#x6362;&#x529F;&#x80FD;&#x5C31;&#x662F;&#x4E8B;&#x5148;&#x5728;Jenkins&#x4E0A;&#x8BBE;&#x7F6E;&#x597D;&#x6B63;&#x786E;&#x7684;&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#xFF0C;&#x6784;&#x5EFA;&#x7684;&#x65F6;&#x5019;&#x66FF;&#x6362;&#x76F8;&#x5E94;&#x7684;&#x6587;&#x4EF6;&#xFF0C;&#x8FD9;&#x6837;&#x5C31;&#x53EF;&#x4EE5;&#x907F;&#x514D;&#x6BCF;&#x6B21;&#x4E0A;&#x4F20;&#x4EE3;&#x7801;&#x7684;&#x65F6;&#x5019;&#x90FD;&#x8981;&#x8BB0;&#x4F4F;&#x6539;&#x73AF;&#x5883;&#x6216;&#x8005;&#x624B;&#x52A8;&#x7684;&#x6539;&#x73AF;&#x5883;&#xFF0C;&#x964D;&#x4F4E;&#x73AF;&#x5883;&#x51FA;&#x9519;&#x7684;&#x6982;&#x7387;&#x3002;&#x8FD9;&#x91CC;&#x9700;&#x8981;&#x4E00;&#x4E2A;&#x5B89;&#x88C5;&#x63D2;&#x4EF6;Config File Provider Plugin&#x3002; &#x65B0;&#x5EFA;&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#xFF0C;&#x63D2;&#x4EF6;&#x5B89;&#x88C5;&#x597D;&#xFF0C;&#x5728;&#x7CFB;&#x7EDF;&#x7BA1;&#x7406;&#x91CC;&#x53EF;&#x4EE5;&#x627E;&#x5230;Managed files&#x9009;&#x9879;&#xFF0C;&#x8FDB;&#x5165;&#x540E;&#xFF0C;&#x53EF;&#x4EE5;&#x770B;&#x5230;&#x914D;&#x7F6E;&#x8FC7;&#x7684;&#x6587;&#x4EF6;&#x5217;&#x8868;&#xFF0C;&#x53EF;&#x4EE5;&#x8FDB;&#x884C;&#x7F16;&#x8F91;&#x6216;&#x8005;&#x5220;&#x9664;&#x3002;&#x5728;&#x5DE6;&#x4FA7;&#x83DC;&#x5355;&#x6709;&#x4E00;&#x4E2A;Add a new Config&#x83DC;&#x5355;&#xFF0C;&#x8FDB;&#x5165;&#x53EF;&#x4EE5;&#x65B0;&#x589E;&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#xFF0C;&#x5B83;&#x4F1A;&#x8BA9;&#x4F60;&#x9009;&#x62E9;&#x65B0;&#x5EFA;&#x7684;&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#x7C7B;&#x578B;&#xFF0C;&#x6839;&#x636E;&#x8981;&#x6C42;&#x9009;&#x62E9;&#xFF0C;&#x6211;&#x8FD9;&#x91CC;&#x9009;&#x62E9;&#x7684;&#x662F;&#x81EA;&#x5B9A;&#x4E49;&#x6587;&#x4EF6;&#x3002;&#x8FDB;&#x5165;&#x5177;&#x4F53;&#x8BBE;&#x7F6E;&#x9875;&#x9762;&#xFF0C;&#x4E3B;&#x8981;&#x8BBE;&#x7F6E;Name&#x3001;Comment&#x3001;Content&#x4E09;&#x4E2A;&#x9009;&#x9879;&#xFF0C;Name&#x5C31;&#x662F;&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#x7684;&#x540D;&#x5B57;&#xFF0C;Comment&#x5907;&#x6CE8;&#xFF0C;Content&#x5C31;&#x662F;&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#x7684;&#x5177;&#x4F53;&#x5185;&#x5BB9;&#x3002; &#x5DE5;&#x7A0B;&#x914D;&#x7F6E;&#xFF0C;&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#x65B0;&#x5EFA;&#x597D;&#x540E;&#xFF0C;&#x8FDB;&#x5165;&#x5DE5;&#x7A0B;&#x7684;&#x6784;&#x5EFA;&#x8BBE;&#x7F6E;&#xFF0C;&#x627E;&#x5230;&#x6784;&#x5EFA;&#x73AF;&#x5883;&#x6A21;&#x5757;&#xFF0C;&#x53EF;&#x4EE5;&#x770B;&#x5230;Provide Configuration files&#x9009;&#x9879;&#xFF0C;&#x9009;&#x62E9;&#x540E;&#xFF0C;&#x4E3B;&#x8981;&#x9700;&#x8981;&#x8BBE;&#x7F6E;File&#x3001;Target&#x4E24;&#x4E2A;&#x9009;&#x9879;&#xFF0C;File&#x5C31;&#x662F;&#x9009;&#x62E9;&#x521A;&#x521A;&#x65B0;&#x5EFA;&#x7684;&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#xFF0C;Target&#x662F;&#x9009;&#x62E9;&#x9700;&#x8981;&#x88AB;&#x66FF;&#x6362;&#x7684;&#x6587;&#x4EF6;&#xFF0C;&#x53EF;&#x4EE5;&#x5305;&#x542B;&#x8DEF;&#x5F84;&#xFF0C;&#x8FD9;&#x91CC;&#x7684;&#x9ED8;&#x8BA4;&#x8DEF;&#x5F84;&#x662F;&#x5F53;&#x524D;&#x5DE5;&#x7A0B;&#x7684;&#x8DDF;&#x76EE;&#x5F55;&#x3002;&#x8BBE;&#x7F6E;&#x5B8C;&#x63D0;&#x4EA4;&#x5373;&#x53EF;&#xFF0C;&#x91CD;&#x65B0;&#x6784;&#x5EFA;&#x65F6;&#x53EF;&#x4EE5;&#x770B;&#x5230;&#x5728;&#x6784;&#x5EFA;&#x524D;Jenkins&#x4F1A;&#x66FF;&#x6362;&#x76F8;&#x5173;&#x6587;&#x4EF6;&#x3002; &#x672C;&#x6587;&#x53C2;&#x8003;&#x7684;&#x6587;&#x7AE0;&#x5730;&#x5740;: http://www.cnblogs.com/zz0412/p/jenkins_jj_01.html http://bookong.iteye.com/blog/2036633","tags":[{"name":"技术","slug":"技术","permalink":"http://todoright.com/tags/技术/"},{"name":"Jenkins","slug":"Jenkins","permalink":"http://todoright.com/tags/Jenkins/"}]},{"title":"Maven+SVN+Tomcat+Jenkins自动化集成入门","date":"2016-07-28T05:21:02.000Z","path":"2016/07/28/Maven-SVN-Tomcat-Jenkins自动化集成入门/","text":"1. &#x5B89;&#x88C5;&#x4E0E;&#x6280;&#x5DE7;&#x672C;&#x6587;&#x7684;&#x5B89;&#x88C5;&#x662F;&#x57FA;&#x4E8E;Mac&#xFF0C;&#x4F7F;&#x7528;&#x5B98;&#x65B9;&#x7684;.pkg&#x5B89;&#x88C5;&#x5305;&#x8FDB;&#x884C;&#x5B89;&#x88C5;&#xFF0C;Jenkins&#x7248;&#x672C;&#x4E3A;2.7.1&#xFF0C;&#x4E0B;&#x8F7D;&#x5730;&#x5740;:&#x70B9;&#x51FB;&#x4E0B;&#x8F7D;&#x3002;&#x5B89;&#x88C5;&#x5B8C;&#x6210;&#x540E;&#xFF0C;&#x4F1A;&#x81EA;&#x52A8;&#x6253;&#x5F00;&#x6D4F;&#x89C8;&#x5668;&#xFF0C;&#x8FDB;&#x5165;Getting Started&#x754C;&#x9762;&#xFF1A;1. Unlock Jenkins&#xFF0C;&#x5373;&#x8F93;&#x5165;Jenkins&#x5B89;&#x88C5;&#x76EE;&#x5F55;&#x5185;&#x7684;/secrets/initialAdminPassword&#x6587;&#x4EF6;&#x5185;&#x7684;&#x5BC6;&#x7801;&#x5373;&#x53EF;&#x3002;2. Customize Jenkins&#xFF0C;&#x4E3B;&#x8981;&#x662F;&#x8FDB;&#x884C;Plugins&#x7684;&#x5B89;&#x88C5;&#xFF0C;&#x9664;&#x4E86;&#x672C;&#x8EAB;&#x63A8;&#x8350;&#x7684;&#xFF0C;&#x8FD9;&#x8FB9;&#x8FD8;&#x63A8;&#x8350;&#x4E00;&#x4E2A;&#x5F88;&#x597D;&#x7528;&#x7684;Publish Over SSH&#xFF0C;&#x4E3B;&#x8981;&#x529F;&#x80FD;&#x662F;&#x5C06;&#x5305;&#x6587;&#x4EF6;&#x4E0A;&#x4F20;&#x5230;&#x670D;&#x52A1;&#x5668;&#xFF0C;&#x540E;&#x9762;&#x4F1A;&#x7528;&#x5230;&#x3002;&#x9009;&#x62E9;&#x5B8C;&#x63D2;&#x4EF6;&#x540E;&#x70B9;&#x51FB;Install&#x8FDB;&#x884C;&#x5B89;&#x88C5;&#x5373;&#x53EF;&#x3002;3. Create First Admin User&#xFF0C;&#x5373;&#x521B;&#x5EFA;&#x7B2C;&#x4E00;&#x4E2A;&#x7BA1;&#x7406;&#x5458;&#x7528;&#x6237;&#xFF0C;&#x8F93;&#x5165;&#x7528;&#x6237;&#x540D;&#x3001;&#x5BC6;&#x7801;&#x7B49;&#x6240;&#x9700;&#x4FE1;&#x606F;&#xFF0C;&#x7136;&#x540E;&#x70B9;&#x51FB;&#x4FDD;&#x5B58;&#x5F00;&#x59CB;&#xFF0C;&#x5B89;&#x88C5;&#x5C31;&#x57FA;&#x672C;Mission Complete&#x4E86;&#x3002;&#x5E38;&#x7528;&#x547D;&#x4EE4;&#xFF1A; &#x66F4;&#x6539;&#x542F;&#x52A8;&#x7AEF;&#x53E3;&#xFF1A;sudo defaults write /Library/Preferences/org.jenkins-ci httpPort 8090 Jenkins &#x542F;&#x52A8;&#x65B9;&#x6CD5;&#xFF1A;sudo launchctl load /Library/LaunchDaemons/org.jenkins-ci.plist Jenkins &#x5173;&#x95ED;&#x65B9;&#x6CD5;&#xFF1A;sudo launchctl unload /Library/LaunchDaemons/org.jenkins-ci.plist Jenkins&#x5378;&#x8F7D;&#x65B9;&#x6CD5;&#xFF1A;/Library/Application Support/Jenkins/Uninstall.command 2. &#x57FA;&#x672C;&#x914D;&#x7F6E;&#x8FD9;&#x91CC;&#x4E3B;&#x8981;&#x914D;&#x7F6E;JDK&#x3001;Maven&#x3001;SSH&#x73AF;&#x5883;&#x6216;&#x4FE1;&#x606F;&#x3002; JDK&#x548C;Maven&#x7684;&#x914D;&#x7F6E;&#x5728;&#x5DE6;&#x4FA7;&#x83DC;&#x5355;&#x7684;[&#x7CFB;&#x7EDF;&#x7BA1;&#x7406; - Global Tool Configuration]&#x91CC;&#x9762;&#xFF0C;&#x8FDB;&#x5165;&#x540E;&#x53EF;&#x4EE5;&#x770B;&#x5230;JDK&#x548C;Maven&#x9009;&#x9879;&#x3002; &#x70B9;&#x51FB;JDK&#x5B89;&#x88C5;&#xFF0C;&#x70B9;&#x51FB;&#x53D6;&#x6D88;&#x81EA;&#x52A8;&#x5B89;&#x88C5;&#xFF0C;JAVA_HOME&#x4E2D;&#x586B;&#x5165;&#x672C;&#x5730;&#x7684;&#x7684;JDK&#x5B89;&#x88C5;&#x76EE;&#x5F55;&#x5373;&#x53EF;&#x3002; &#x70B9;&#x51FB;Maven&#x5B89;&#x88C5;&#xFF0C;&#x70B9;&#x51FB;&#x53D6;&#x6D88;&#x81EA;&#x52A8;&#x5B89;&#x88C5;&#xFF0C;MAVEN_HOME&#x4E2D;&#x586B;&#x5165;&#x672C;&#x5730;&#x7684;Maven&#x5B89;&#x88C5;&#x76EE;&#x5F55;&#x5373;&#x53EF;&#x3002; SSH&#x914D;&#x7F6E;&#x5728;[&#x7CFB;&#x7EDF;&#x7BA1;&#x7406; - &#x7CFB;&#x7EDF;&#x8BBE;&#x7F6E;]&#x91CC;&#x9762;&#xFF0C;&#x8FDB;&#x5165;&#x540E;&#x5E95;&#x90E8;&#x6709;&#x4E00;&#x4E2A;Publish over SSH&#xFF08;&#x8FD9;&#x91CC;&#x91C7;&#x7528;&#x5BC6;&#x7801;&#x767B;&#x5F55;&#x65B9;&#x5F0F;&#xFF0C;&#x4E0D;&#x4F7F;&#x7528;&#x8BC1;&#x4E66;&#xFF09;&#xFF0C;&#x70B9;&#x51FB;SSH Servers&#x65C1;&#x8FB9;&#x7684;&#x589E;&#x52A0;&#xFF0C;&#x8F93;&#x5165;&#x670D;&#x52A1;&#x5668;&#x7684;&#x5730;&#x5740;&#xFF0C;&#x7528;&#x6237;&#x540D;&#xFF08;&#x975E;root&#x7528;&#x6237;&#x9700;&#x8981;&#x5F00;&#x542F;ftp&#x7B49;&#x76F8;&#x5E94;&#x6743;&#x9650;&#xFF0C;&#x5426;&#x5219;&#x4F1A;&#x51FA;&#x73B0;&#x6CA1;&#x6709;&#x6743;&#x9650;&#x4E0A;&#x4F20;&#x6587;&#x4EF6;&#x7684;&#x9519;&#x8BEF;&#xFF09;&#x7B49;&#x4FE1;&#x606F;&#xFF0C;&#x7136;&#x540E;&#x70B9;&#x51FB;&#x4E0B;&#x65B9;&#x7684;&#x9AD8;&#x7EA7;&#x6309;&#x94AE;&#xFF0C;&#x9009;&#x62E9;&#x5BC6;&#x7801;&#x8BA4;&#x8BC1;&#x7684;&#x65B9;&#x5F0F;&#xFF0C;&#x8F93;&#x5165;&#x5BC6;&#x7801;&#x5373;&#x53EF;&#xFF0C;&#x53EF;&#x4EE5;&#x7528;Test&#x6309;&#x94AE;&#x8FDB;&#x884C;&#x6D4B;&#x8BD5;&#x3002; 3. &#x65B0;&#x5EFA;&#x96C6;&#x6210;&#x4EFB;&#x52A1; &#x70B9;&#x51FB;&#x5DE6;&#x4FA7;&#x83DC;&#x5355;&#x7684;&#x65B0;&#x5EFA;&#x6216;&#x8005;&#x4E3B;&#x9875;&#x9762;&#x7684;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x65B0;&#x4EFB;&#x52A1;&#xFF0C;&#x8FDB;&#x5165;&#x65B0;&#x5EFA;&#x9875;&#x9762;&#xFF0C;&#x586B;&#x5199;&#x9879;&#x76EE;&#x540D;&#x79F0;&#xFF0C;&#x9009;&#x62E9;&#x4E0B;&#x65B9;&#x7684;&#x6784;&#x5EFA;&#x4E00;&#x4E2A;&#x81EA;&#x7531;&#x98CE;&#x683C;&#x7684;&#x8F6F;&#x4EF6;&#x9879;&#x76EE;&#x7136;&#x540E;&#x70B9;&#x51FB;&#x4E0B;&#x65B9;&#x7684;OK&#x6309;&#x94AE;&#x8FDB;&#x5165;&#x4E0B;&#x4E00;&#x6B65;&#x914D;&#x7F6E;&#x3002; &#x8FDB;&#x5165;&#x5177;&#x4F53;&#x7684;&#x914D;&#x7F6E;&#x9875;&#x9762;&#xFF0C;&#x6309;&#x7167;&#x96C6;&#x6210;&#x6D41;&#x7A0B;&#x5171;&#x6709;[General-&gt;&#x6E90;&#x7801;&#x7BA1;&#x7406;-&gt;&#x6784;&#x5EFA;&#x89E6;&#x53D1;&#x5668;-&gt;&#x6784;&#x5EFA;&#x73AF;&#x5883;-&gt;&#x6784;&#x5EFA;-&gt;&#x6784;&#x5EFA;&#x540E;&#x64CD;&#x4F5C;]&#x516D;&#x4E2A;&#x914D;&#x7F6E;&#x9009;&#x9879;&#xFF0C;&#x8FD9;&#x91CC;&#x4E3B;&#x8981;&#x914D;&#x7F6E;&#x6E90;&#x7801;&#x7BA1;&#x7406;&#x3001;&#x6784;&#x5EFA;&#x3001;&#x6784;&#x5EFA;&#x540E;&#x64CD;&#x4F5C;&#x3002; 1. &#x6E90;&#x7801;&#x7BA1;&#x7406;: &#x6839;&#x636E;&#x7248;&#x672C;&#x7BA1;&#x7406;&#x5DE5;&#x5177;&#x9009;&#x62E9;&#x4E0D;&#x540C;&#x7684;&#x65B9;&#x5F0F;&#xFF0C;&#x8FD9;&#x91CC;&#x9009;&#x62E9;&#x7684;&#x662F;SVN&#x8FDB;&#x884C;&#x7BA1;&#x7406;&#xFF0C;&#x5176;&#x4E2D;Credentials &#x914D;&#x7F6E;&#x7684;&#x662F;svn&#x7684;&#x7528;&#x6237;&#x540D;&#x5BC6;&#x7801;&#xFF0C;Local module directory &#x914D;&#x7F6E;&#x7684;&#x662F;&#x4ECE;&#x7248;&#x672C;&#x5E93;&#x62C9;&#x4E0B;&#x7684;&#x4EE3;&#x7801;&#x5B58;&#x653E;&#x7684;&#x4F4D;&#x7F6E;&#xFF0C;&#x9ED8;&#x8BA4;&#x662F;.&#xFF0C;&#x4E3A;Jenkins&#x9ED8;&#x8BA4;&#x5B58;&#x653E;&#x7684;&#x6839;&#x76EE;&#x5F55;&#x3002; 2. &#x6784;&#x5EFA;: &#x8FD9;&#x91CC;&#x9009;&#x62E9;&#x6784;&#x5EFA;&#x7684;&#x65B9;&#x5F0F;&#xFF0C;&#x56E0;&#x4E3A;&#x662F;&#x57FA;&#x4E8E;Maven&#x7684;&#xFF0C;&#x6240;&#x4EE5;&#x9009;&#x62E9;Invoke top-level Maven targets&#x65B9;&#x5F0F;&#xFF0C;&#x7136;&#x540E;&#x586B;&#x5165;Maven&#x6253;&#x5305;&#x547D;&#x4EE4;&#xFF0C;&#x586B;&#x5165;pom&#x6587;&#x4EF6;&#x540D;&#x79F0;&#x5373;&#x53EF;&#x3002; &#x7136;&#x540E;&#x518D;&#x9009;&#x62E9;&#x589E;&#x52A0;&#x6784;&#x5EFA;&#x6B65;&#x9AA4;&#xFF0C;&#x9009;&#x62E9;Execute Shell&#xFF0C;&#x8FD9;&#x91CC;&#x586B;&#x5165;Shell&#x547D;&#x4EE4;&#xFF0C;&#x4E3B;&#x8981;&#x5BF9;&#x6784;&#x5EFA;&#x597D;&#x7684;&#x5305;&#x8FDB;&#x884C;&#x6253;&#x5305;&#x538B;&#x7F29;&#xFF0C;&#x4FBF;&#x4E8E;&#x4E0A;&#x4F20;&#x3002; 2. &#x6784;&#x5EFA;&#x540E;&#x64CD;&#x4F5C;: &#x8FD9;&#x6B65;&#x64CD;&#x4F5C;&#x4E3B;&#x8981;&#x5C06;&#x6253;&#x5305;&#x6587;&#x4EF6;&#x4E0A;&#x4F20;&#x5230;&#x670D;&#x52A1;&#x5668;&#xFF0C;&#x5E76;&#x89E3;&#x538B;&#x8FD0;&#x884C;&#xFF0C;&#x70B9;&#x51FB;&#x589E;&#x52A0;&#x6784;&#x5EFA;&#x540E;&#x64CD;&#x4F5C;&#x6B65;&#x9AA4;&#xFF0C;&#x9009;&#x62E9;Send build artifacts over SSH&#xFF0C;&#x5C31;&#x662F;&#x524D;&#x9762;&#x8BF4;&#x5230;&#x7684;Publish Over SSH&#x63D2;&#x4EF6;&#xFF0C;&#x4E3B;&#x8981;&#x586B;&#x5199;&#x9879;&#x76EE;&#x5982;&#x4E0B;: Name&#x9009;&#x9879;&#x53EF;&#x4EE5;&#x9009;&#x62E9;&#x524D;&#x9762;&#x914D;&#x7F6E;&#x8FC7;&#x7684;&#x670D;&#x52A1;&#x5668;&#x4FE1;&#x606F;&#xFF1B; Source files&#x586B;&#x5165;&#x9700;&#x8981;&#x4E0A;&#x4F20;&#x7684;&#x6587;&#x4EF6;&#xFF1B; Remove prefix&#x79FB;&#x9664;&#x4E0D;&#x9700;&#x8981;&#x7684;&#x524D;&#x7F00;&#xFF0C;&#x8FD9;&#x91CC;&#x9700;&#x8981;&#x6CE8;&#x610F;&#x4E00;&#x4E0B;&#x4E0A;&#x9762;&#x7684;Source files&#x5982;&#x679C;&#x5305;&#x542B;&#x4E86;&#x8DEF;&#x5F84;&#xFF0C;&#x5219;&#x4E0A;&#x4F20;&#x540E;&#xFF0C;&#x5B83;&#x4F1A;&#x5728;&#x6307;&#x5B9A;&#x670D;&#x52A1;&#x5668;&#x8DEF;&#x5F84;&#x4E0B;&#x65B0;&#x5EFA;&#x8BE5;&#x8DEF;&#x5F84;&#x5B58;&#x653E;&#x6587;&#x4EF6;&#xFF0C;&#x5982;Source files&#x586B;&#x5199;&#x7684;&#x4E3A;/targe/test.war&#xFF0C;&#x670D;&#x52A1;&#x5668;&#x6307;&#x5B9A;&#x7684;&#x8DEF;&#x5F84;&#x4E3A;/opt&#xFF0C;&#x5219;&#x4E0A;&#x4F20;&#x540E;&#x5B58;&#x653E;&#x7684;&#x8DEF;&#x5F84;&#x4E3A;/opt/target/test.war&#xFF1B; Remove prefix&#x914D;&#x7F6E;/target&#x53EF;&#x4EE5;&#x79FB;&#x9664;&#x8BE5;&#x8DEF;&#x5F84;&#xFF0C;&#x76F4;&#x63A5;&#x5C06;&#x6587;&#x4EF6;&#x5B58;&#x653E;&#x5728;&#x6307;&#x5B9A;&#x7684;&#x76EE;&#x5F55;&#x4E0B;/opt/test.war&#xFF09;&#xFF0C; Remote directory&#x4E0A;&#x4F20;&#x5230;&#x7684;&#x670D;&#x52A1;&#x5668;&#x7684;&#x76EE;&#x5F55;&#xFF0C;&#x56E0;&#x4E3A;&#x6211;&#x524D;&#x9762;&#x5728;SSH&#x7684;&#x914D;&#x7F6E;&#x6307;&#x5B9A;&#x4E86;&#x57FA;&#x7840;&#x76EE;&#x5F55;&#x4E3A;&#x90E8;&#x7F72;&#x76EE;&#x5F55;&#xFF0C;&#x6240;&#x4EE5;&#x8FD9;&#x91CC;&#x4E0D;&#x9700;&#x8981;&#x518D;&#x586B;&#x5199;&#xFF1B; Exec command&#x6267;&#x884C;&#x7684;Shell&#x547D;&#x4EE4;&#x3002; &#x56E0;&#x4E3A;&#x6211;&#x8FD9;&#x91CC;&#x662F;&#x5C06;&#x9879;&#x76EE;(war&#x5305;&#x5F62;&#x5F0F;)&#x90E8;&#x7F72;&#x5728;tomcat&#x4E2D;&#xFF0C;&#x540C;&#x65F6;tomcat&#x5F00;&#x542F;&#x4E86;war&#x5305;&#x81EA;&#x52A8;&#x90E8;&#x7F72;&#xFF0C;&#x6240;&#x4EE5;&#x8FD9;&#x91CC;&#x53EA;&#x8981;&#x5C06;&#x538B;&#x7F29;&#x5305;&#x4E0A;&#x4F20;&#x5230;&#x90E8;&#x7F72;&#x76EE;&#x5F55;&#x89E3;&#x538B;&#x5373;&#x53EF;&#xFF0C;&#x5982;&#x679C;&#x6CA1;&#x6709;&#x5F00;&#x542F;&#x81EA;&#x52A8;&#x90E8;&#x7F72;&#x6216;&#x8005;&#x5176;&#x5B83;&#x7C7B;&#x578B;&#x7684;&#x9879;&#x76EE;&#xFF0C;&#x5219;&#x53EF;&#x80FD;&#x8FD8;&#x9700;&#x8981;&#x7F16;&#x5199;Shell&#x547D;&#x4EE4;&#x8FDB;&#x884C;&#x76F8;&#x5E94;&#x5BB9;&#x5668;&#x670D;&#x52A1;&#x7684;&#x91CD;&#x542F;&#xFF0C;&#x56E0;&#x4E3A;&#x90FD;&#x662F;&#x5E38;&#x89C4;&#x7684;&#x547D;&#x4EE4;&#xFF0C;&#x6240;&#x4EE5;&#x4E0D;&#x518D;&#x8BE6;&#x8FF0;&#x3002; &#x4EE5;&#x4E0A;&#x5168;&#x90E8;&#x914D;&#x7F6E;&#x597D;&#xFF0C;&#x70B9;&#x51FB;&#x4FDD;&#x5B58;&#x5373;&#x53EF;&#xFF0C;&#x56DE;&#x5230;&#x9996;&#x9875;&#x5C31;&#x53EF;&#x4EE5;&#x770B;&#x5230;&#x521A;&#x521A;&#x914D;&#x7F6E;&#x7684;&#x9879;&#x76EE;&#xFF0C;&#x70B9;&#x51FB;&#x6700;&#x540E;&#x7684;&#x7EFF;&#x8272;&#x64AD;&#x653E;&#x6309;&#x94AE;&#x5C31;&#x53EF;&#x4EE5;&#x5F00;&#x59CB;&#x6784;&#x5EFA;&#x3002; 4. &#x5F00;&#x59CB;&#x6784;&#x5EFA;&#x5F00;&#x59CB;&#x6784;&#x5EFA;&#x540E;&#xFF0C;&#x53EF;&#x4EE5;&#x5728;&#x5DE6;&#x4FA7;&#x7684;&#x6784;&#x5EFA;&#x6267;&#x884C;&#x72B6;&#x6001;&#x4E2D;&#x770B;&#x5230;&#x6267;&#x884C;&#x7684;&#x8FDB;&#x5EA6;&#x3002;&#x70B9;&#x51FB;&#x540E;&#x9762;&#x7684;&#x6784;&#x5EFA;&#x6B21;&#x6570;&#xFF0C;&#x8FDB;&#x5165;&#x672C;&#x6B21;&#x7684;&#x6784;&#x5EFA;&#x8BE6;&#x60C5;&#xFF0C;&#x7136;&#x540E;&#x70B9;&#x51FB;&#x5DE6;&#x4FA7;&#x83DC;&#x5355;&#x7684;Console Output&#x53EF;&#x4EE5;&#x770B;&#x51FA;&#x6784;&#x5EFA;&#x7684;&#x5177;&#x4F53;&#x65E5;&#x5FD7;&#x8F93;&#x51FA;&#xFF0C;&#x5982;&#x679C;&#x6784;&#x5EFA;&#x6709;&#x95EE;&#x9898;&#xFF0C;&#x53EF;&#x4EE5;&#x5728;&#x8FD9;&#x91CC;&#x770B;&#x51FA;&#x5177;&#x4F53;&#x95EE;&#x9898;&#x539F;&#x56E0;&#xFF0C;&#x5728;&#x54EA;&#x4E00;&#x6B65;&#x51FA;&#x4E86;&#x95EE;&#x9898;&#x3002;&#x5982;&#x679C;&#x6784;&#x5EFA;&#x6210;&#x529F;&#xFF0C;&#x53EF;&#x4EE5;&#x770B;&#x5230;&#x9996;&#x9875;&#x9879;&#x76EE;&#x5217;&#x8868;&#x4E2D;&#x6700;&#x524D;&#x9762;&#x7684;&#x5706;&#x7403;&#x56FE;&#x6807;&#x4E3A;&#x84DD;&#x8272;&#xFF0C;&#x5982;&#x679C;&#x5931;&#x8D25;&#x5219;&#x4E3A;&#x7EA2;&#x8272;&#xFF0C;&#x8FD9;&#x65F6;&#x5019;&#x5C31;&#x9700;&#x8981;&#x53BB;&#x65E5;&#x5FD7;&#x8F93;&#x51FA;&#x91CC;&#x9762;&#x770B;&#x539F;&#x56E0;&#x4E86;&#x3002;","tags":[{"name":"技术","slug":"技术","permalink":"http://todoright.com/tags/技术/"},{"name":"Jenkins","slug":"Jenkins","permalink":"http://todoright.com/tags/Jenkins/"},{"name":"自动化持续集成","slug":"自动化持续集成","permalink":"http://todoright.com/tags/自动化持续集成/"}]},{"title":"CentOS 通过yum方式安装MySQL5.7","date":"2016-06-08T09:59:47.000Z","path":"2016/06/08/CentOS 通过yum方式安装MySQL5.7/","text":"&#x4E00;. &#x5378;&#x8F7D;&#x81EA;&#x5E26;&#x6216;&#x65E7;&#x7248;&#x672C;&#x5148;&#x68C0;&#x67E5;&#x7CFB;&#x7EDF;&#x662F;&#x5426;&#x81EA;&#x5E26;&#x6216;&#x8005;&#x65E7;&#x7248;&#x672C;&#x7684;MySQL&#xFF0C;&#x5982;&#x679C;&#x5B58;&#x5728;&#x5219;&#x5148;&#x5220;&#x9664;&#x5B83;&#x548C;&#x5B83;&#x7684;&#x4F9D;&#x8D56;&#xFF1A; 1234# &#x68C0;&#x67E5;yum list list installed | grep mysql# &#x5220;&#x9664;yum -y remove mysql-libs.x86_64 &#x4E8C;. &#x5B89;&#x88C5;&#x6700;&#x65B0;&#x7248;&#x672C;1. &#x7ED9;CentOS&#x6DFB;&#x52A0;rpm&#x6E90;&#xFF1A; 1234# &#x83B7;&#x53D6;&#x6700;&#x7684;rpm&#x6E90;wget dev.mysql.com/get/mysql-community-release-el6-5.noarch.rpm# &#x5B89;&#x88C5;rpm&#x6E90;yum localinstall mysql-community-release-el6-5.noarch.rpm 2. &#x7ED9;yum&#x9009;&#x62E9;&#x6700;&#x65B0;&#x7684;rpm&#x6E90; 1234567yum repolist all | grep mysql# &#x5173;&#x95ED;5.5&#x548C;5.6&#x7248;&#x672C;yum-config-manager --disable mysql55-communityyum-config-manager --disable mysql56-community# &#x5F00;&#x542F;5.7&#x7248;&#x672C;yum-config-manager --enable mysql57-community-dmryum repolist enabled | grep mysql 3. &#x5B89;&#x88C5; 1yum install mysql-community-server &#x6700;&#x540E;&#x5982;&#x679C;&#x770B;&#x89C1;Complete!&#x8868;&#x793A;&#x5B89;&#x88C5;&#x5B8C;&#x6210;&#x3002; 4. &#x542F;&#x52A8;&#x670D;&#x52A1;&#x5E76;&#x8BBE;&#x7F6E;&#x5F00;&#x673A;&#x542F;&#x52A8; 123service mysqld startchkconfig --list | grep mysqldchkconfig mysqld on &#x4E09;. &#x5B89;&#x5168;&#x8BBE;&#x7F6E;&#x5B89;&#x88C5;&#x5B8C;&#x540E;&#x4E00;&#x822C;&#x8981;&#x901A;&#x8FC7;&#x4E0B;&#x9762;&#x7684;&#x547D;&#x4EE4;&#x8FDB;&#x5165;MySQL&#x5B89;&#x5168;&#x914D;&#x7F6E;&#x5411;&#x5BFC;&#xFF0C;&#x8FDB;&#x884C;&#x4E00;&#x4E9B;&#x5B89;&#x5168;&#x8BBE;&#x7F6E;: 1mysql_secure_installation &#x5982;&#x679C;&#x6210;&#x529F;&#x4E86;&#xFF0C;&#x5E94;&#x8BE5;&#x4F1A;&#x8FDB;&#x5165;&#x4E0B;&#x9762;&#x7684;&#x754C;&#x9762;&#xFF1A; 1234567891011121314151617181920212223242526272829303132333435363738394041424344[root@server1 ~]# mysql_secure_installationNOTE: RUNNING ALL PARTS OF THIS SCRIPT IS RECOMMENDED FOR ALL MySQLSERVERS IN PRODUCTION USE! PLEASE READ EACH STEP CAREFULLY!In order to log into MySQL to secure it, we&apos;ll need the currentpassword for the root user. If you&apos;ve just installed MySQL, andyou haven&apos;t set the root password yet, the password will be blank,so you should just press enter here.Enter current password for root (enter for none):&lt;&#x2013;&#x521D;&#x6B21;&#x8FD0;&#x884C;&#x76F4;&#x63A5;&#x56DE;&#x8F66;OK, successfully used password, moving on&#x2026;Setting the root password ensures that nobody can log into the MySQLroot user without the proper authorisation.Set root password? [Y/n] &lt;&#x2013; &#x662F;&#x5426;&#x8BBE;&#x7F6E;root&#x7528;&#x6237;&#x5BC6;&#x7801;&#xFF0C;&#x8F93;&#x5165;y&#x5E76;&#x56DE;&#x8F66;&#x6216;&#x76F4;&#x63A5;&#x56DE;&#x8F66;New password: &lt;&#x2013; &#x8BBE;&#x7F6E;root&#x7528;&#x6237;&#x7684;&#x5BC6;&#x7801;Re-enter new password: &lt;&#x2013; &#x518D;&#x8F93;&#x5165;&#x4E00;&#x6B21;&#x4F60;&#x8BBE;&#x7F6E;&#x7684;&#x5BC6;&#x7801;Password updated successfully!Reloading privilege tables..&#x2026; Success!By default, a MySQL installation has an anonymous user, allowing anyoneto log into MySQL without having to have a user account created forthem. This is intended only for testing, and to make the installationgo a bit smoother. You should remove them before moving into aproduction environment.Remove anonymous users? [Y/n] &lt;&#x2013; &#x662F;&#x5426;&#x5220;&#x9664;&#x533F;&#x540D;&#x7528;&#x6237;,&#x751F;&#x4EA7;&#x73AF;&#x5883;&#x5EFA;&#x8BAE;&#x5220;&#x9664;&#xFF0C;&#x6240;&#x4EE5;&#x76F4;&#x63A5;&#x56DE;&#x8F66;&#x2026; Success!Normally, root should only be allowed to connect from &apos;localhost&apos;. Thisensures that someone cannot guess at the root password from the network.Disallow root login remotely? [Y/n] &lt;&#x2013;&#x662F;&#x5426;&#x7981;&#x6B62;root&#x8FDC;&#x7A0B;&#x767B;&#x5F55;,&#x6839;&#x636E;&#x81EA;&#x5DF1;&#x7684;&#x9700;&#x6C42;&#x9009;&#x62E9;Y/n&#x5E76;&#x56DE;&#x8F66;,&#x5EFA;&#x8BAE;&#x7981;&#x6B62;&#x2026; Success!By default, MySQL comes with a database named &apos;test&apos; that anyone canaccess. This is also intended only for testing, and should be removedbefore moving into a production environment.Remove test database and access to it? [Y/n] &lt;&#x2013; &#x662F;&#x5426;&#x5220;&#x9664;test&#x6570;&#x636E;&#x5E93;,&#x76F4;&#x63A5;&#x56DE;&#x8F66;- Dropping test database&#x2026;&#x2026; Success!- Removing privileges on test database&#x2026;&#x2026; Success!Reloading the privilege tables will ensure that all changes made so farwill take effect immediately.Reload privilege tables now? [Y/n] &lt;&#x2013; &#x662F;&#x5426;&#x91CD;&#x65B0;&#x52A0;&#x8F7D;&#x6743;&#x9650;&#x8868;&#xFF0C;&#x76F4;&#x63A5;&#x56DE;&#x8F66;&#x2026; Success!Cleaning up&#x2026;All done! If you&apos;ve completed all of the above steps, your MySQLinstallation should now be secure.Thanks for using MySQL! &#x5982;&#x679C;&#x6CA1;&#x6709;&#x51FA;&#x73B0;&#x8FD9;&#x4E2A;&#x754C;&#x9762;&#xFF0C;&#x800C;&#x662F;&#x8981;&#x6C42;&#x8F93;&#x5165;root&#x5BC6;&#x7801;&#xFF0C;&#x5E76;&#x4E14;&#x8F93;&#x5165;&#x540E;&#x62A5;&#x9519;&#xFF1A; 1ERROR 1045 (28000): Access denied for user &apos;root&apos;@&apos;localhost&apos; (using password: NO) &#x5C31;&#x8981;&#x901A;&#x8FC7;&#x4E0B;&#x9762;&#x7684;&#x64CD;&#x4F5C;&#x5904;&#x7406;&#x4E86;&#xFF1A; 12345678910111213service mysqld stop# &#x8FDB;&#x5165;&#x5B89;&#x5168;&#x6A21;&#x5F0F;mysqld_safe --user=mysql --skip-grant-tables --skip-networking &amp;# &#x65E0;&#x5BC6;&#x7801;&#x767B;&#x5F55;MySQL mysql -u root mysql# MySQL &#x754C;&#x9762;&#x4FEE;&#x6539;root&#x5BC6;&#x7801;&#x5E76;&#x5237;&#x65B0;&#x6743;&#x9650;UPDATE user SET authentication_string=PASSWORD(&apos;sqlroot321&apos;) where USER=&apos;root&apos;;FLUSH PRIVILEGES;quit;# &#x542F;&#x52A8;&#x670D;&#x52A1;service mysqld start# &#x8FD9;&#x65F6;&#x5019;&#x5C31;&#x53EF;&#x4EE5;&#x7528;&#x4E0A;&#x9762;&#x8BBE;&#x7F6E;&#x7684;&#x5BC6;&#x7801;&#x8FDB;&#x884C;&#x5B89;&#x5168;&#x8BBE;&#x7F6E;&#x5411;&#x5BFC;&#x4E86;mysql_secure_installation &#x5F00;&#x59CB;&#x4F7F;&#x7528; &#x5148;&#x767B;&#x5F55;,&#x7136;&#x540E;&#x521B;&#x5EFA;&#x6570;&#x636E;&#x5E93;&#x5E76;&#x6307;&#x5B9A;UTF8&#x7F16;&#x7801; 12CREATE DATABASE dbname DEFAULT CHARACTER SET utf8 COLLATEutf8_general_ci; &#x521B;&#x5EFA;&#x7528;&#x6237;&#xFF0C;&#x5E76;&#x6388;&#x6743;&#x6240;&#x6709;&#x6743;&#x9650;&#x4F7F;&#x7528;&#x521A;&#x521A;&#x65B0;&#x5EFA;&#x7684;&#x6570;&#x636E;&#x5E93;&#xFF0C;@&#x2018;%&#x2019;&#x8868;&#x793A;&#x652F;&#x6301;&#x8FDC;&#x7A0B;&#x767B;&#x5F55;&#x3002; 12grant all privileges on dbname.* to usr_name@&#x2018;%&#x2019; identified by&#x2018;password&#x2019;; &#x67E5;&#x770B;&#x6240;&#x6709;&#x7684;&#x6570;&#x636E;&#x5E93;&#xFF0C;&#x5E76;&#x9009;&#x62E9;&#x9700;&#x8981;&#x4F7F;&#x7528;&#x7684;&#x6570;&#x636E;&#x5E93;,&#x9009;&#x62E9;&#x540E;&#x5C31;&#x53EF;&#x4EE5;&#x8FDB;&#x884C;&#x5EFA;&#x8868;&#x7B49;&#x64CD;&#x4F5C;&#xFF1A; 12show databases;use dbname; &#x56DB;. &#x8FC1;&#x79FB;&#x6570;&#x636E;&#x5E93;&#x5B58;&#x50A8;&#x76EE;&#x5F55;&#x5148;&#x5173;&#x95ED;&#x670D;&#x52A1;&#xFF0C;&#x7136;&#x540E;&#x627E;&#x5230;&#x73B0;&#x6709;&#x7684;&#x6570;&#x636E;&#x5E93;&#x5B58;&#x50A8;&#x76EE;&#x5F55;(&#x6211;&#x8FD9;&#x91CC;&#x662F;/var/lib/mysql)&#xFF0C;&#x5E76;&#x590D;&#x5236;&#x5230;&#x60F3;&#x8981;&#x5B58;&#x50A8;&#x7684;&#x65B0;&#x76EE;&#x5F55;&#x4E0B;&#xFF08;&#x6211;&#x8FD9;&#x8FB9;&#x4F7F;&#x7528;&#x7684;&#x662F;/opt/mysqldata/&#xFF09;&#xFF1A; 1234service mysqld stop;# &#x590D;&#x5236;&#x73B0;&#x6709;&#x76EE;&#x5F55;&#xFF0C;&#x4E00;&#x5B9A;&#x8981;&#x7528;a&#x53C2;&#x6570;&#xFF0C;&#x9632;&#x6B62;&#x6743;&#x9650;&#x4E0D;&#x5BF9;cd /var/libcp -a mysql /opt/mysqldata/ &#x590D;&#x5236;&#x5B8C;&#x6210;&#x540E;&#xFF0C;&#x4FEE;&#x6539;&#x76F8;&#x5173;&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#xFF0C;&#x4FEE;&#x6539;&#x524D;&#x6700;&#x597D;&#x90FD;&#x5148;&#x6700;&#x597D;&#x5907;&#x4EFD;: &#x7B2C;&#x4E00;&#x4E2A;&#x6587;&#x4EF6;&#xFF1A; /etc/my.cnf &#x4FEE;&#x6539;&#x5176;&#x4E2D;&#x7684;datadir&#x4E3A;&#x6700;&#x65B0;&#x7684;&#x5B58;&#x50A8;&#x76EE;&#x5F55;&#x8DEF;&#x5F84;&#xFF0C;socket&#x8DEF;&#x5F84;&#x4FEE;&#x6539;&#x4E3A;&#x6700;&#x65B0;&#x76EE;&#x5F55;&#x4E0B;&#x7684;mysql.sock&#x6587;&#x4EF6; &#x7B2C;&#x4E8C;&#x4E2A;&#x6587;&#x4EF6;&#xFF1A; /etc/init.d/mysqld &#x4FEE;&#x6539;&#x5176;&#x4E2D;&#x7684;datadir&#x4E3A;&#x6700;&#x65B0;&#x7684;&#x5B58;&#x50A8;&#x76EE;&#x5F55;&#x8DEF;&#x5F84;&#xFF0C;&#x53C2;&#x8003;&#x4FEE;&#x6539;&#x5904;&#x4E0B;&#x9762;&#xFF1A; 1get_mysql_option mysqld datadir &quot;/var/lib/mysql&quot; &#x7B2C;&#x4E09;&#x4E2A;&#x6587;&#x4EF6;&#xFF1A; /usr/bin/mysqld_safe &#x4FEE;&#x6539;&#x5176;&#x4E2D;&#x7684;DATADIR&#x4E3A;&#x6700;&#x65B0;&#x7684;&#x5B58;&#x50A8;&#x76EE;&#x5F55;&#x8DEF;&#x5F84;&#x3002;&#x6700;&#x540E;&#x5EFA;&#x7ACB;mysql.sock&#x7684;&#x8F6F;&#x8FDE;&#x63A5;&#x5E76;&#x542F;&#x52A8;&#x670D;&#x52A1;: 123ln -s /opt/mysqldata/mysql/mysql.sock&#xA0; /var/lib/mysql/mysql.sock; service mysqld start; &#x542F;&#x52A8;&#x6210;&#x529F;&#x8868;&#x793A;&#x8FC1;&#x79FB;&#x6210;&#x529F;&#x3002; END","tags":[{"name":"技术","slug":"技术","permalink":"http://todoright.com/tags/技术/"},{"name":"linux","slug":"linux","permalink":"http://todoright.com/tags/linux/"},{"name":"mysql","slug":"mysql","permalink":"http://todoright.com/tags/mysql/"}]},{"title":"CentOS6 搭建自己的ngrok服务","date":"2016-06-07T10:29:41.000Z","path":"2016/06/07/CentOS6 搭建自己的ngrok服务/","text":"&#x3000;&#x3000;ngrok&#x4FD7;&#x79F0;&#x5185;&#x7F51;&#x7A7F;&#x900F;&#x5229;&#x5668;&#xFF0C;&#x7B80;&#x5355;&#x8BF4;&#x5C31;&#x662F;&#x6211;&#x4EEC;&#x6709;&#x4E00;&#x4E2A;&#x670D;&#x52A1;&#x6D4B;&#x8BD5;&#x8FD0;&#x884C;&#x5728;&#x672C;&#x5730;&#xFF0C;&#x4F46;&#x662F;&#x5916;&#x7F51;&#x60F3;&#x770B;&#x770B;&#x6548;&#x679C;&#xFF0C;&#x8FD9;&#x65F6;&#x5019;&#x672C;&#x5730;&#x56E0;&#x4E3A;&#x6CA1;&#x6709;&#x56FA;&#x5B9A;IP&#xFF0C;&#x6240;&#x4EE5;&#x5C31;&#x8BBF;&#x95EE;&#x4E0D;&#x4E86;&#xFF0C;&#x8FD9;&#x65F6;&#x5019;&#x5982;&#x679C;&#x6709;ngrok&#x51FA;&#x573A;&#x5C31;&#x89E3;&#x51B3;&#x4E86;&#xFF0C;&#x73B0;&#x5728;&#x706B;&#x70ED;&#x7684;&#x5FAE;&#x4FE1;&#x5F00;&#x53D1;&#x3001;&#x4E0D;&#x540C;&#x670D;&#x52A1;&#x95F4;&#x7684;&#x8054;&#x8C03;&#x90FD;&#x4F1A;&#x7528;&#x5230;&#x3002;&#x3000;&#x3000;ngrok&#x5B98;&#x7F51;&#x7684;&#x670D;&#x52A1;&#x56E0;&#x4E3A;&#x670D;&#x52A1;&#x5668;&#x5728;&#x56FD;&#x5916;&#xFF0C;&#x6240;&#x4EE5;&#x4E0D;&#x662F;&#x5F88;&#x7A33;&#x5B9A;&#xFF08;&#x5927;&#x5BB6;&#x61C2;&#x5F97;&#xFF09;&#xFF0C;&#x800C;&#x56FD;&#x5185;&#x7684;&#x5F88;&#x591A;&#x670D;&#x52A1;&#x4E0D;&#x652F;&#x6301;&#x81EA;&#x5B9A;&#x4E49;&#x5B50;&#x57DF;&#x540D;&#x6216;&#x8005;&#x5F00;&#x59CB;&#x6536;&#x8D39;&#xFF0C;&#x6B63;&#x597D;&#x624B;&#x91CC;&#x6709;&#x4E00;&#x53F0;&#x95F2;&#x7F6E;&#x7684;&#x963F;&#x91CC;&#x4E91;CES&#xFF0C;&#x5E76;&#x4E14;ngrok&#x7684;&#x4EE3;&#x7801;&#x662F;&#x5F00;&#x6E90;&#x7684;&#xFF0C;&#x6240;&#x4EE5;&#x5C31;&#x60F3;&#x81EA;&#x5DF1;&#x642D;&#x5EFA;&#x4E00;&#x4E2A;&#x670D;&#x52A1;&#x4E86;&#xFF0C;&#x8E29;&#x5751;&#x8BB0;&#x5F55;&#x5982;&#x4E0B;&#xFF1A; &#x4E00;&#x3001; &#x5B89;&#x88C5;&#x4F9D;&#x8D56;&#x7684;&#x5DE5;&#x5177;&#x6216;&#x670D;&#x52A1;1.&#x5B89;&#x88C5;golang&#x53CA;&#x76F8;&#x5173;&#x4F9D;&#x8D56; 1yum install build-essential golang mercurial 2.&#x5B89;&#x88C5;git&#x670D;&#x52A1;&#x8FD9;&#x91CC;&#x6709;&#x4E00;&#x4E2A;&#x5751;&#xFF0C;yum&#x81EA;&#x5E26;&#x7684;git&#x7248;&#x672C;&#x6BD4;&#x8F83;&#x8001;&#xFF0C;&#x5982;&#x679C;&#x5B89;&#x88C5;&#x4E86;&#xFF0C;&#x540E;&#x9762;&#x5728;&#x7F16;&#x8BD1;ngrok&#x7684;&#x65F6;&#x5019;&#x4F1A;&#x5361;&#x4F4F;&#x2026;&#x6240;&#x4EE5;&#x53EA;&#x80FD;&#x81EA;&#x5DF1;&#x4E0B;&#x8F7D;&#x6700;&#x65B0;&#x7684;git&#x7248;&#x672C;&#x7F16;&#x8BD1;&#x5B89;&#x88C5;&#xFF1A; 12345678910111213141516# &#x5148;&#x5B89;&#x88C5;&#x901A;&#x7528;&#x7F16;&#x8BD1;&#x73AF;&#x5883;yum install zlib-devel perl-ExtUtils-MakeMaker asciidoc xmlto openssl-devel curl-devel# &#x4E0B;&#x8F7D;gitwget https://Github.com/Git/Git/archive/v2.3.0.tar.gz# &#x89E3;&#x538B;&#x5B89;&#x88C5;&#x5305;tar -zxvf v2.3.0.tar.gz# &#x7F16;&#x8BD1;&#x5B89;&#x88C5;cd git-2.3.0/./configuremake &amp;&amp; make install#&#x67E5;&#x770B;&#x662F;&#x5426;&#x5B89;&#x88C5;&#x6210;&#x529F;git &#x2014;version# &#x5982;&#x679C;&#x51FA;&#x6765;git version 2.3.0&#x8868;&#x793A;&#x5B89;&#x88C5;&#x6210;&#x529F;# &#x5982;&#x679C;&#x547D;&#x4EE4;&#x65E0;&#x6CD5;&#x8BC6;&#x522B;&#xFF0C;&#x6267;&#x884C;&#x4EE5;&#x4E0B;&#x547D;&#x4EE4;&#x5EFA;&#x7ACB;&#x8F6F;&#x8FDE;&#x63A5;ln -s /usr/local/bin/git /usr/bin/ &#x4E8C;&#x3001;&#x4E0B;&#x8F7D;ngrok&#x5E76;&#x7F16;&#x8BD1;1. &#x51C6;&#x5907;&#x73AF;&#x5883;&#x5148;&#x8FDB;&#x5165;&#x5230;&#x81EA;&#x5DF1;&#x60F3;&#x5B89;&#x88C5;&#x7684;&#x76EE;&#x5F55;&#xFF0C;&#x5E76;&#x4ECE;github clone ngrok&#x7684;&#x9879;&#x76EE; 123cd /optgit clone https://github.com/tutumcloud/ngrok.git ngrokcd grok &#x901A;&#x8FC7;&#x4EE5;&#x4E0B;&#x547D;&#x4EE4;&#x751F;&#x6210;&#x5E76;&#x66FF;&#x6362;&#x6E90;&#x7801;&#x91CC;&#x9ED8;&#x8BA4;&#x7684;&#x8BC1;&#x4E66;&#xFF0C;&#x6CE8;&#x610F;&#x57DF;&#x540D;xxxx.com&#x4FEE;&#x6539;&#x4E3A;&#x4F60;&#x81EA;&#x5DF1;&#x7684;&#x3002; 12345678910111213141516NGROK_DOMAIN=&#x201C;jueduizone.com&quot;openssl genrsa -out base.key 2048openssl req -new -x509 -nodes -key base.key -days 10000 -subj &quot;/CN=$NGROK_DOMAIN&quot; -out base.pemopenssl genrsa -out server.key 2048openssl req -new -key server.key -subj &quot;/CN=$NGROK_DOMAIN&quot; -out server.csropenssl x509 -req -in server.csr -CA base.pem -CAkey base.key -CAcreateserial -days 10000 -out server.crtcp base.pem assets/client/tls/ngrokroot.crt 2.&#x7F16;&#x8BD1;&#x670D;&#x52A1;&#x7AEF;1sudo make release-server &#x5982;&#x679C;&#x4E00;&#x5207;&#x6B63;&#x5E38;&#xFF0C;ngrok/bin &#x76EE;&#x5F55;&#x4E0B;&#x5E94;&#x8BE5;&#x6709; ngrokd &#x6587;&#x4EF6;&#x901A;&#x8FC7;&#x4EE5;&#x4E0B;&#x547D;&#x4EE4;&#x542F;&#x52A8;&#x670D;&#x52A1;&#xFF1A; 12sudo ./bin/ngrokd -tlsKey=server.key -tlsCrt=server.crt &#xFF0D;domain=&quot;jueduizone.com&quot; -httpAddr=&quot;:8081&#x201D; -httpsAddr=&quot;:8082&quot; &#x3000;&#x3000;&#x5176;&#x4E2D;httpAddr&#x3001;httpsAddr &#x5206;&#x522B;&#x662F; ngrok &#x7528;&#x6765;&#x8F6C;&#x53D1; http&#x3001;https &#x670D;&#x52A1;&#x7684;&#x7AEF;&#x53E3;&#xFF0C;&#x53EF;&#x4EE5;&#x968F;&#x610F;&#x6307;&#x5B9A;&#x3002;&#x540C;&#x65F6;ngrokd &#x8FD8;&#x4F1A;&#x5F00;&#x4E00;&#x4E2A; 4443 &#x7AEF;&#x53E3;&#x7528;&#x6765;&#x8DDF;&#x5BA2;&#x6237;&#x7AEF;&#x901A;&#x8BAF;&#xFF08;&#x53EF;&#x901A;&#x8FC7; -tunnelAddr=&#x201D;:xxx&#x201D; &#x6307;&#x5B9A;&#xFF09;&#x3002;&#x3000;&#x3000;&#x8FD9;&#x91CC;&#x5982;&#x679C;&#x4F60;&#x7684;&#x670D;&#x52A1;&#x5668;&#x914D;&#x7F6E;&#x4E86;iptables&#x89C4;&#x5219;&#xFF0C;&#x9700;&#x8981;&#x5BF9;&#x5916;&#x5F00;&#x653E;&#x4F7F;&#x7528;&#x5230;&#x7684;&#x7AEF;&#x53E3;&#xFF0C;&#x53EF;&#x4EE5;&#x672C;&#x5730;telnet&#x76F8;&#x5E94;&#x7684;&#x7AEF;&#x53E3;&#x770B;&#x662F;&#x5426;&#x53EF;&#x7528;&#xFF0C;&#x4E0D;&#x53EF;&#x7528;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x4EE5;&#x4E0B;&#x7684;&#x547D;&#x4EE4;&#x5F00;&#x542F;&#xFF1A; 123456/sbin/iptables -I INPUT -p tcp --dport 8081 -j ACCEPT/sbin/iptables -I INPUT -p tcp --dport 8082 -j ACCEPT/sbin/iptables -I INPUT -p tcp --dport 4443 -j ACCEPT/etc/rc.d/init.d/iptables save/etc/rc.d/init.d/iptables restart/etc/init.d/iptables status &#x3000;&#x3000;&#x63A5;&#x4E0B;&#x6765;&#x5C31;&#x662F;&#x9700;&#x8981;&#x5728;&#x81EA;&#x5DF1;&#x7684;&#x57DF;&#x540D;&#x63D0;&#x4F9B;&#x5546;&#x90A3;&#x91CC;&#x505A;&#x57DF;&#x540D;&#x6620;&#x5C04;&#x4E86;&#xFF0C;&#x8FD9;&#x91CC;&#x6700;&#x597D;&#x628A;&#x57DF;&#x540D;&#x6CDB;&#x89E3;&#x6790;&#x5230;&#x76F8;&#x5E94;&#x7684;&#x670D;&#x52A1;&#x5668;&#xFF1A;*.jueduizone.com &#x7136;&#x540E;&#x542F;&#x52A8;&#x540E;&#xFF0C;&#x901A;&#x8FC7;&#x6D4F;&#x89C8;&#x5668;&#x8BBF;&#x95EE; test.jueduizone.com:8081 &#x5982;&#x679C;&#x9875;&#x9762;&#x663E;&#x793A; 1Tunnel test.jueduizone.com:8081 not found &#x8868;&#x793A;&#x542F;&#x52A8;&#x6210;&#x529F;&#xFF0C;&#x53EF;&#x4EE5;&#x7528;&#x5BA2;&#x6237;&#x7AEF;&#x8FDE;&#x63A5;&#x4E86;&#x3002; 3.&#x7F16;&#x8BD1;&#x5BA2;&#x6237;&#x7AEF;3.1 &#x7F16;&#x8BD1;linux&#x5BA2;&#x6237;&#x7AEF; 1make release-client &#x7F16;&#x8BD1;&#x540E;&#x4F1A;&#x5728;ngrok/bin &#x76EE;&#x5F55;&#x4E0B;&#x6709; ngrok &#x6587;&#x4EF6;&#x3002;3.2 &#x7F16;&#x8BD1;Mac&#x5BA2;&#x6237;&#x7AEF;* 1sudo GOOS=darwin GOARCH=amd64 make release-client &#x7F16;&#x8BD1;&#x540E;&#x4F1A;&#x5728;ngrok/bin/darwin_amd64 &#x76EE;&#x5F55;&#x4E0B;&#x6709; ngrok &#x6587;&#x4EF6;&#x3002;3.3 &#x7F16;&#x8BD1;windows&#x5BA2;&#x6237;&#x7AEF; 1sudo GOOS=windows GOARCH=amd64 make release-client &#x7F16;&#x8BD1;&#x540E;&#x4F1A;&#x5728;ngrok/bin/windows_amd64 &#x76EE;&#x5F55;&#x4E0B;&#x6709; ngrok.exe &#x6587;&#x4EF6;&#x3002; 4.&#x8FD0;&#x884C;&#x6D4B;&#x8BD5;&#x5BA2;&#x6237;&#x7AEF;&#x5C06;&#x4EE5;&#x4E0A;&#x7684;&#x4E0D;&#x540C;&#x7CFB;&#x7EDF;&#x7248;&#x672C;&#x7684;&#x5BA2;&#x6237;&#x7AEF;&#x4E0B;&#x8F7D;&#x5230;&#x76F8;&#x5E94;&#x7CFB;&#x7EDF;&#x540E;&#xFF0C;&#x540C;&#x4E00;&#x76EE;&#x5F55;&#x65B0;&#x589E;&#x914D;&#x7F6E;&#x6587;&#x4EF6;ngrok.cfg&#xFF1A; 12server_addr: jueduizone.com:4443trust_host_root_certs: false Mac&#x4E0A;&#x6267;&#x884C;&#x5BA2;&#x6237;&#x7AEF;&#x6620;&#x5C04;&#x672C;&#x5730;8080&#x7AEF;&#x53E3;&#xFF0C;&#x81EA;&#x5B9A;&#x4E49;&#x5B50;&#x57DF;&#x540D;test&#xFF0C;&#x901A;&#x8FC7;&#x7EC8;&#x7AEF;&#x6267;&#x884C;&#x4EE5;&#x4E0B;&#x547D;&#x4EE4;&#xFF1A; 1./ngrok -subdomain test -config=ngrok.cfg 8080 Windows&#x4E0A;&#x6267;&#x884C;&#x5BA2;&#x6237;&#x7AEF;&#xFF1A;&#x6620;&#x5C04;&#x672C;&#x5730;8090&#x7AEF;&#x53E3;&#xFF0C;&#x81EA;&#x5B9A;&#x4E49;&#x5B50;&#x57DF;&#x540D;test&#xFF0C;&#x901A;&#x8FC7;DOS&#x754C;&#x9762;&#x8FDB;&#x5165;grok&#x5BA2;&#x6237;&#x7AEF;&#x7684;&#x76F8;&#x5E94;&#x76EE;&#x5F55;: 1ngrok -config=ngrok.cfg -subdomain=test 8080 &#x5982;&#x679C;&#x8FDE;&#x63A5;&#x6210;&#x529F;&#xFF0C;&#x4F1A;&#x51FA;&#x73B0;&#x5927;&#x6982;&#x4EE5;&#x4E0B;&#x5185;&#x5BB9;&#xFF1A; 12345678910ngrok (Ctrl+C to quit) Tunnel Status online Version 1.7/1.7 Forwarding http://test.jueduizone.com:8081 -&gt; 127.0.0.1:8080 Forwarding https://test.jueduizone.com:8082 -&gt; 127.0.0.1:8080 Web Interface 127.0.0.1:4040 # Conn 0 Avg Conn Time 0.00ms &#x3000;&#x3000;&#x8FD9;&#x6837;&#x901A;&#x8FC7;&#x8BBF;&#x95EE; http://test.jueduizone.com:8081 &#x5373;&#x53EF;&#x8BBF;&#x95EE;&#x5230;&#x672C;&#x5730;&#x7684;8080&#x7AEF;&#x53E3;&#x4E0A;&#x7684;&#x670D;&#x52A1;&#x3002;&#x3000;&#x3000;&#x5B66;&#x4E60;&#x53C2;&#x8003;&#x94FE;&#x63A5;&#xFF1A;https://imququ.com/post/self-hosted-ngrokd.html#toc-0 END","tags":[{"name":"技术","slug":"技术","permalink":"http://todoright.com/tags/技术/"},{"name":"linux","slug":"linux","permalink":"http://todoright.com/tags/linux/"},{"name":"centos","slug":"centos","permalink":"http://todoright.com/tags/centos/"},{"name":"ngrok","slug":"ngrok","permalink":"http://todoright.com/tags/ngrok/"}]},{"title":"Java网络通信编程学习","date":"2016-06-03T02:05:38.000Z","path":"2016/06/03/Java网络通信编程学习/","text":"1. &#x57FA;&#x7840;&#x7F51;&#x7EDC;&#x77E5;&#x8BC6;&#x6982;&#x5FF5;&#x5B66;&#x4E60;&#x7F51;&#x7EDC;&#x901A;&#x4FE1;&#x7F16;&#x7A0B;&#x5B66;&#x4E60;&#x4E4B;&#x524D;&#xFF0C;&#x5148;&#x8981;&#x5BF9;&#x76F8;&#x5173;&#x77E5;&#x8BC6;&#x6982;&#x5FF5;&#x6709;&#x4E00;&#x5B9A;&#x4E86;&#x89E3;&#x3002;IP&#x5730;&#x5740;&#xFF1A;&#x5904;&#x4E8E;&#x7F51;&#x7EDC;&#x4E0A;&#x7684;&#x6BCF;&#x4E00;&#x4E2A;&#x8BBE;&#x5907;&#x90FD;&#x6709;&#x4E00;&#x4E2A;&#x552F;&#x4E00;&#x7684;&#x6807;&#x8BC6;&#xFF08;&#x5730;&#x5740;&#xFF09;&#xFF0C;&#x8FD9;&#x5C31;&#x662F;IP&#x3002; &#x7AEF;&#x53E3;&#xFF08;Port&#xFF09;&#xFF1A;&#x4E00;&#x4E2A;&#x8BBE;&#x5907;&#x4E0A;&#x53EF;&#x80FD;&#x6709;&#x591A;&#x4E2A;&#x9700;&#x8981;&#x901A;&#x4FE1;&#x7684;&#x5BF9;&#x8C61;&#xFF08;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#xFF09;&#xFF0C;&#x4E3A;&#x4E86;&#x5728;&#x4E00;&#x4E2A;&#x552F;&#x4E00;&#x7684;IP&#x5730;&#x5740;&#x4E0A;&#x627E;&#x5230;&#x6B63;&#x786E;&#x7684;&#x5BF9;&#x8C61;&#xFF0C;&#x9700;&#x8981;&#x7ED9;&#x6BCF;&#x4E2A;&#x5BF9;&#x8C61;&#x5206;&#x914D;&#x552F;&#x4E00;&#x7684;&#x7AEF;&#x53E3;&#xFF08;0-65535&#xFF0C;&#x5176;&#x4E2D;0-1013&#x4E3A;&#x7CFB;&#x7EDF;&#x4FDD;&#x7559;&#xFF09;&#x3002;IP&#x52A0;&#x7AEF;&#x53E3;&#xFF08;&#x7EC4;&#x6210;Socket&#xFF09;&#x5C31;&#x53EF;&#x4EE5;&#x6B63;&#x786E;&#x7684;&#x5728;&#x7F51;&#x7EDC;&#x4E0A;&#x7684;&#x4F60;&#x9700;&#x8981;&#x7684;&#x5BF9;&#x8C61;&#x4E86;&#x3002; &#x534F;&#x8BAE;&#xFF1A;&#x627E;&#x5230;&#x4F60;&#x9700;&#x8981;&#x4EA4;&#x6D41;&#x7684;&#x5BF9;&#x8C61;&#x540E;&#xFF0C;&#x8FD9;&#x65F6;&#x5C31;&#x9700;&#x8981;&#x5927;&#x5BB6;&#x8BED;&#x8A00;&#x76F8;&#x901A;&#xFF0C;&#x5426;&#x5219;&#x90FD;&#x4E0D;&#x77E5;&#x9053;&#x5BF9;&#x65B9;&#x5728;&#x8BF4;&#x5565;&#x4E86;&#xFF0C;&#x56E0;&#x6B64;&#x9700;&#x8981;&#x4E00;&#x4E2A;&#x8BED;&#x8A00;&#x6807;&#x51C6;&#xFF0C;&#x65B9;&#x4FBF;&#x5927;&#x5BB6;&#x4EA4;&#x6D41;&#xFF0C;&#x8FD9;&#x5C31;&#x662F;&#x534F;&#x8BAE;&#xFF0C;&#x5F53;&#x4E0B;&#x7528;&#x7684;&#x5C31;&#x662F;&#x968F;&#x5904;&#x53EF;&#x95FB;&#x7684;TCP/IP&#x534F;&#x8BAE;&#x4E86;&#x3002; TCP/IP&#x534F;&#x8BAE;&#xFF1A;&#x4E94;&#x5C42;&#x6A21;&#x578B;&#xFF1A;1.&#x7F51;&#x7EDC;&#x63A5;&#x53E3;&#x5C42;(&#x94FE;&#x8DEF;&#x5C42;)&#xFF1A;&#x8D1F;&#x8D23;&#x63A5;&#x6536;IP&#x6570;&#x636E;&#x5305;&#x5E76;&#x901A;&#x8FC7;&#x7F51;&#x7EDC;&#x53D1;&#x9001;&#x3002;2.&#x7F51;&#x7EDC;&#x5C42;(&#x4E92;&#x8054;&#x5C42;)&#xFF1A;&#x8D1F;&#x8D23;&#x76F8;&#x90BB;&#x8BA1;&#x7B97;&#x673A;&#x4E4B;&#x95F4;&#x7684;&#x901A;&#x4FE1;&#xFF0C;&#x4E3B;&#x8981;IP&#x534F;&#x8BAE;&#x3002;3.&#x4F20;&#x8F93;&#x5C42;(&#x4E3B;&#x673A;&#x5230;&#x4E3B;&#x673A;&#x5C42;)&#xFF1A;&#x63D0;&#x4F9B;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x95F4;&#x7684;&#x901A;&#x4FE1;&#xFF0C;&#x4E3B;&#x8981;TCP&#x3001;UDP&#x534F;&#x8BAE;&#x3002;4.&#x5E94;&#x7528;&#x5C42;&#xFF1A;&#x5411;&#x7528;&#x6237;&#x63D0;&#x4F9B;&#x5E38;&#x7528;&#x7684;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#xFF0C;&#x6BD4;&#x5982;&#x7535;&#x5B50;&#x90AE;&#x4EF6;&#x3001;&#x6587;&#x4EF6;&#x4F20;&#x8F93;&#x8BBF;&#x95EE;&#x3001;&#x8FDC;&#x7A0B;&#x767B;&#x5F55;&#x7B49;&#x3002;&#x4E3B;&#x8981;&#x534F;&#x8BAE;&#x6709;FTP&#x3001;TELNET&#x3001;DNS&#x3001;SMTP&#x3001;NFS&#x3001;HTTP&#x3002;&#x56E0;&#x4E3A;&#x91CC;&#x9762;&#x5305;&#x542B;&#x4E86;&#x5F88;&#x591A;&#x7F51;&#x7EDC;&#x901A;&#x4FE1;&#x534F;&#x8BAE;&#xFF0C;&#x56E0;&#x6B64;&#x8FD8;&#x53EB;TCP/IP&#x534F;&#x8BAE;&#x65CF;&#xFF08;&#x6808;&#xFF09;&#xFF0C;&#x7528;&#x8FD9;&#x4E9B;&#x534F;&#x8BAE;&#x4E2D;&#x6700;&#x5E38;&#x7528;&#x7684;&#x4E24;&#x4E2A;&#x534F;&#x8BAE;&#xFF08;&#x5747;&#x5904;&#x4E8E;&#x4F20;&#x8F93;&#x5C42;&#xFF09;&#x6765;&#x547D;&#x540D;&#x3002;TCP&#xFF1A;Transmission Control Protocol &#x4F20;&#x8F93;&#x63A7;&#x5236;&#x534F;&#x8BAE;&#x3002;IP&#xFF1A;Internet Protocol &#x4E92;&#x8054;&#x7F51;&#x534F;&#x8BAE;&#x3002; 2. Java&#x7684;&#x7F51;&#x7EDC;&#x901A;&#x4FE1;&#x529F;&#x80FD;Java&#x63D0;&#x4F9B;&#x4E86;4&#x4E2A;&#x5E38;&#x7528;&#x7C7B;&#xFF0C;&#x6765;&#x9488;&#x5BF9;&#x4E0D;&#x540C;&#x7684;&#x7F51;&#x7EDC;&#x901A;&#x4FE1;&#x5C42;&#x6B21;&#x8FDB;&#x884C;&#x5904;&#x7406;&#xFF1A;InetAddress&#xFF1A;&#x7528;&#x4E8E;&#x6807;&#x8BC6;&#x5904;&#x7406;&#x7F51;&#x7EDC;&#x4E0A;&#x7684;&#x786C;&#x4EF6;&#x8D44;&#x6E90;,&#x8868;&#x793A;IP&#x5730;&#x5740;&#x3002;URL&#xFF1A;&#x7EDF;&#x4E00;&#x8D44;&#x6E90;&#x5B9A;&#x4F4D;&#x7B26;&#xFF0C;&#x901A;&#x8FC7;&#x5B83;&#x53EF;&#x4EE5;&#x8BBF;&#x95EE;&#x5904;&#x7406;&#x7F51;&#x7EDC;&#x4E0A;&#x7684;&#x8D44;&#x6E90;&#x6570;&#x636E;&#xFF0C;&#x7531;&#x534F;&#x8BAE;&#x540D;&#x79F0;&#x52A0;&#x8D44;&#x6E90;&#x540D;&#x79F0;&#x6784;&#x6210;&#xFF0C;&#x4E2D;&#x95F4;&#x5192;&#x53F7;&#x9694;&#x5F00;&#x3002;Socket&#xFF1A;&#x4F7F;&#x7528;TCP&#x534F;&#x8BAE;&#x5B9E;&#x73B0;&#x7F51;&#x7EDC;&#x901A;&#x4FE1;&#x7684;&#x7C7B;&#x3002;Datagram&#xFF1A;&#x4F7F;&#x7528;UDP&#x534F;&#x8BAE;&#xFF0C;&#x5C06;&#x901A;&#x4FE1;&#x5185;&#x5BB9;&#x653E;&#x5728;&#x6570;&#x636E;&#x62A5;&#x4E2D;&#xFF0C;&#x8FDB;&#x884C;&#x7F51;&#x7EDC;&#x901A;&#x4FE1;&#x3002; 2.1 InetAddress&#x5E94;&#x7528;&#x6B64;&#x7C7B;&#x6CA1;&#x6709;&#x6784;&#x9020;&#x65B9;&#x6CD5;&#xFF0C;&#x4F46;&#x662F;&#x63D0;&#x4F9B;&#x4E86;&#x4E00;&#x4E9B;&#x9759;&#x6001;&#x65B9;&#x6CD5;&#x83B7;&#x53D6;&#x5B9E;&#x4F8B;&#x3002; 1234567891011121314151617import java.net.*;public class InetAddressTest{ public static void main(String[] args) throws UnknownHostException{ //&#x83B7;&#x53D6;&#x672C;&#x673A;&#x7684;&#x4FE1;&#x606F; InetAddress address = InetAddress.getLocalHost(); //&#x901A;&#x8FC7;&#x4E3B;&#x673A;&#x540D;&#x6216;&#x8005;IP&#x5730;&#x5740;&#x83B7;&#x53D6;&#x4FE1;&#x606F; //InetAddress address2 = InetAddress.getByName(&quot;my-pc&quot;); InetAddress address2 = InetAddress.getByName(&quot;192.168.0.104&quot;); System.out.println(&quot;&#x8BA1;&#x7B97;&#x673A;&#x540D;&#xFF1A;&quot;+address.getHostName()); System.out.println(&quot;IP&#x5730;&#x5740;&#xFF1A;&quot;+address.getHostAddress()); System.out.println(&quot;address&#x5BF9;&#x8C61;:&quot;+address); System.out.println(&quot;address2 &#x8BA1;&#x7B97;&#x673A;&#x540D;&#xFF1A;&quot;+address2.getHostName()); System.out.println(&quot;address2 IP&#x5730;&#x5740;&#xFF1A;&quot;+address2.getHostAddress()); System.out.println(&quot;address2 address&#x5BF9;&#x8C61;:&quot;+address2); }} 2.2 URL&#x5E94;&#x7528;123456789101112131415161718192021222324252627282930import java.net.*;import java.io.*;public class UrlDemo{ public static void main(String[] args)throws MalformedURLException,IOException { URL baidu = new URL(&quot;http://www.baidu.com&quot;); System.out.println(&quot;&#x534F;&#x8BAE;&#xFF1A;&quot;+baidu.getProtocol()); System.out.println(&quot;&#x4E3B;&#x673A;&#xFF1A;&quot;+baidu.getHost()); //&#x5982;&#x679C;&#x6CA1;&#x6709;&#x6307;&#x5B9A;&#xFF0C;&#x5219;&#x663E;&#x793A;-1 System.out.println(&quot;&#x7AEF;&#x53E3;&#xFF1A;&quot;+baidu.getPort()); //&#x5B57;&#x8282;&#x6D41;&#x8F6C;&#x6362;&#x4E3A;&#x5B57;&#x7B26;&#x6D41;&#xFF0C;&#x5E76;&#x7528;&#x7F13;&#x51B2;&#x7C7B;&#x5305;&#x88C5; InputStream is = baidu.openStream(); InputStreamReader isr = new InputStreamReader(is,&quot;UTF-8&quot;); BufferedReader br = new BufferedReader(isr); //&#x5199;&#x5165;&#x672C;&#x5730;&#x6587;&#x4EF6; FileWriter fw = new FileWriter(&quot;baidu.txt&quot;); BufferedWriter bw = new BufferedWriter(fw); String line = null; while((line = br.readLine()) != null){ bw.write(line); bw.newLine(); } //&#x5173;&#x95ED;&#x8D44;&#x6E90; bw.close(); fw.close(); br.close(); isr.close(); is.close(); }} 2.3 Socket&#x5E94;&#x7528;Socket&#x662F;&#x57FA;&#x4E8E;TCP&#x534F;&#x8BAE;&#x8FDB;&#x884C;&#x7684;&#x3002;TCP&#x534F;&#x8BAE;&#x7684;&#x7279;&#x70B9;&#x662F;&#x9762;&#x5411;&#x8FDE;&#x63A5;&#xFF0C;&#x53EF;&#x9760;&#x7684;&#xFF0C;&#x6709;&#x5E8F;&#x7684;&#xFF0C;&#x4EE5;&#x5B57;&#x8282;&#x6D41;&#x7684;&#x65B9;&#x5F0F;&#x53D1;&#x9001;&#x6570;&#x636E;&#x3002;&#x56E0;&#x4E3A;&#x901A;&#x4FE1;&#x662F;&#x53CC;&#x65B9;&#x7684;&#xFF0C;&#x6240;&#x4EE5;&#x6709;&#x4E24;&#x4E2A;&#x76F8;&#x5173;&#x7C7B;&#x8FDB;&#x884C;&#x5904;&#x7406;&#xFF1A;&#x5BA2;&#x6237;&#x7AEF;Socket&#xFF0C;&#x670D;&#x52A1;&#x7AEF;ServerSocket&#x3002;&#x901A;&#x4FE1;&#x6D41;&#x7A0B;&#x6A21;&#x578B;&#xFF1A;&#x5BA2;&#x6237;&#x7AEF;&#x4EE3;&#x7801;&#xFF1A; 1234567891011121314151617181920212223242526272829303132import java.net.*;import java.io.*;public class ClientDemo{ //&#x5077;&#x61D2;&#x4E86;&#xFF0C;&#x76F4;&#x63A5;&#x629B;&#x51FA;Exception&#x4E86;... public static void main(String[] args) throws Exception { //&#x6839;&#x636E;&#x6307;&#x5B9A;&#x5730;&#x5740;&#x548C;&#x7AEF;&#x53E3;&#xFF0C;&#x521B;&#x5EFA;&#x5BA2;&#x6237;&#x7AEF;socket Socket client = new Socket(&quot;localhost&quot;,2222); //&#x83B7;&#x53D6;&#x8F93;&#x51FA;&#x6D41;&#xFF0C;&#x53D1;&#x9001;&#x8BF7;&#x6C42; OutputStream os = client.getOutputStream(); PrintWriter pw = new PrintWriter(os); pw.write(&quot;&#x4F60;&#x597D;&#xFF0C;&#x670D;&#x52A1;&#x5668;&#xFF01;&quot;); pw.flush(); //&#x5173;&#x95ED;&#x8F93;&#x51FA;&#x6D41; client.shutdownOutput(); //&#x83B7;&#x53D6;&#x670D;&#x52A1;&#x7AEF;&#x8F93;&#x5165;&#x6D41; InputStream is = client.getInputStream(); BufferedReader br = new BufferedReader(new InputStreamReader(is)); String line = null; while(null != (line = br.readLine())){ System.out.println(&quot;&#x670D;&#x52A1;&#x5668;&#x8BF4;&#xFF1A;&quot;+line); } //&#x5173;&#x95ED;&#x8F93;&#x5165;&#x6D41; client.shutdownInput(); //&#x5173;&#x95ED;&#x5404;&#x7C7B;&#x8D44;&#x6E90; br.close(); is.close(); pw.close(); os.close(); client.close(); }} &#x670D;&#x52A1;&#x7AEF;&#x4EE3;&#x7801;&#xFF1A; 12345678910111213141516171819202122232425import java.net.*;import java.io.*;public class ServerDemo { //&#x5077;&#x61D2;&#x4E86;&#xFF0C;&#x76F4;&#x63A5;&#x629B;&#x51FA;Exception&#x4E86;... public static void main(String[] args) throws Exception{ //&#x521B;&#x5EFA;&#x670D;&#x52A1;&#x7AEF;&#x7684;ServerSocket&#xFF0C;&#x7ED1;&#x5B9A;&#x7AEF;&#x53E3; ServerSocket serverSocket = new ServerSocket(2222); Socket socket = null; System.out.println(&quot;***&#x670D;&#x52A1;&#x5668;&#x542F;&#x52A8;&#xFF0C;&#x7B49;&#x5F85;&#x5BA2;&#x6237;&#x7AEF;&#x7684;&#x8FDE;&#x63A5;***&quot;); while(true){ //&#x5F00;&#x59CB;&#x76D1;&#x542C;&#xFF0C;&#x7B49;&#x5F85;&#x5BA2;&#x6237;&#x7AEF;&#x7684;&#x8FDE;&#x63A5; socket = serverSocket.accept(); //&#x8C03;&#x7528;&#x5E76;&#x6267;&#x884C;&#x591A;&#x7EBF;&#x7A0B; ThreadServerDemo tsd = new ThreadServerDemo(socket); tsd.run(); //&#x67E5;&#x8BE2;&#x76D1;&#x542C;&#x7684;&#x7AEF;&#x53E3; int port = serverSocket.getLocalPort(); //&#x67E5;&#x8BE2;&#x8FDE;&#x63A5;&#x7684;&#x5BA2;&#x6237;&#x7AEF;IP&#x5730;&#x5740; InetAddress address = socket.getInetAddress(); System.out.println(&quot;&#x5F53;&#x524D;&#x76D1;&#x542C;&#x7684;&#x7AEF;&#x53E3;&#xFF1A;&quot;+port); System.out.println(&quot;&#x5F53;&#x524D;&#x8BBF;&#x95EE;&#x7684;&#x5BA2;&#x6237;&#x7AEF;IP&#xFF1A;&quot;+address.getHostAddress()); } }} &#x670D;&#x52A1;&#x7AEF;&#x8C03;&#x7528;&#x7684;&#x591A;&#x7EBF;&#x7A0B;&#x4EE3;&#x7801;&#xFF1A; 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152import java.net.*;import java.io.*;public class ThreadServerDemo implements Runnable{ Socket socket = null; public ThreadServerDemo(Socket socket){ this.socket = socket; } //&#x5B9E;&#x73B0;Runnable&#x63A5;&#x53E3;&#x7684;run&#x65B9;&#x6CD5;&#xFF0C;&#x6267;&#x884C;&#x7EBF;&#x7A0B;&#x64CD;&#x4F5C; public void run(){ //&#x8F93;&#x5165;&#x8F93;&#x51FA;&#x6D41;&#xFF0C;&#x7528;&#x4E8E;&#x63A5;&#x6536;&#x548C;&#x8FD4;&#x56DE;&#x8BF7;&#x6C42; InputStream is = null; InputStreamReader isr = null; BufferedReader br = null; OutputStream os = null; PrintWriter pw = null; try{ //&#x8FD4;&#x56DE;&#x5957;&#x63A5;&#x5B57;&#x7684;&#x8F93;&#x5165;&#x6D41; is = socket.getInputStream(); isr = new InputStreamReader(is); br = new BufferedReader(isr); String line = null; while(null != (line = br.readLine())){ System.out.println(&quot;&#x6211;&#x662F;&#x670D;&#x52A1;&#x5668;&#xFF0C;&#x5BA2;&#x6237;&#x7AEF;&#x8BF4;&#xFF1A;&quot;+line); } //&#x5173;&#x95ED;&#x8F93;&#x5165;&#x6D41; socket.shutdownInput(); //&#x83B7;&#x53D6;&#x5957;&#x63A5;&#x5B57;&#x7684;&#x8F93;&#x51FA;&#x6D41; os = socket.getOutputStream(); pw = new PrintWriter(os); //&#x8FD4;&#x56DE;&#x8BF7;&#x6C42;&#x5E76;&#x5237;&#x65B0;&#x7F13;&#x51B2; pw.write(&quot;&#x6B22;&#x8FCE;&#x60A8;&#x7684;&#x8BBF;&#x95EE;&#xFF01;&quot;); pw.flush(); //&#x5173;&#x95ED;&#x8F93;&#x51FA;&#x6D41; socket.shutdownOutput(); }catch(IOException e){ e.printStackTrace(); }finally{ try{ //&#x5173;&#x95ED;&#x8D44;&#x6E90; pw.close(); os.close(); br.close(); isr.close(); is.close(); socket.close(); }catch(IOException e){ e.printStackTrace(); } } }} 2.4 Datagram&#x5E94;&#x7528;Datagram&#xFF08;&#x6570;&#x636E;&#x62A5;&#xFF09;&#x662F;&#x57FA;&#x4E8E;UDP&#x534F;&#x8BAE;&#x7684;&#x3002;UDP&#x534F;&#x8BAE;&#x7279;&#x70B9;&#x662F;&#xFF1A;&#x65E0;&#x8FDE;&#x63A5;&#x3001;&#x4E0D;&#x53EF;&#x9760;&#x3001;&#x65E0;&#x5E8F;&#x7684;&#xFF0C;&#x4F20;&#x8F93;&#x901F;&#x5EA6;&#x5FEB;&#x3002;&#x4F7F;&#x7528;&#x6570;&#x636E;&#x5305;&#x8FDB;&#x884C;&#x901A;&#x4FE1;&#x65F6;&#xFF0C;&#x9996;&#x5148;&#x9700;&#x8981;&#x5C06;&#x901A;&#x4FE1;&#x7684;&#x4FE1;&#x606F;&#x5B9A;&#x4E49;&#x6210;&#x6570;&#x636E;&#x62A5;&#xFF0C;&#x7136;&#x540E;&#x5728;&#x6570;&#x636E;&#x62A5;&#x4E2D;&#x6307;&#x660E;&#x9700;&#x8981;&#x8FBE;&#x5230;&#x7684;&#x76EE;&#x6807;&#xFF08;&#x4E3B;&#x673A;+&#x7AEF;&#x53E3;&#xFF09;&#xFF0C;&#x7136;&#x540E;&#x518D;&#x8BB2;&#x6570;&#x636E;&#x62A5;&#x53D1;&#x9001;&#x51FA;&#x53BB;&#x3002;&#x9700;&#x8981;&#x4F7F;&#x7528;&#x5230;&#x4E24;&#x4E2A;&#x7C7B;&#xFF1A;DatagramPacket:&#x8868;&#x793A;&#x6570;&#x636E;&#x62A5;&#x5305;&#x3002;DatagramSocket:&#x8868;&#x793A;&#x7528;&#x6765;&#x53D1;&#x9001;&#x548C;&#x63A5;&#x6536;&#x6570;&#x636E;&#x62A5;&#x5305;&#x7684;&#x5957;&#x63A5;&#x5B57;&#xFF0C;&#x8FDB;&#x884C;&#x7AEF;&#x5230;&#x7AEF;&#x901A;&#x4FE1;&#x3002;&#x670D;&#x52A1;&#x7AEF;&#x4EE3;&#x7801;&#xFF1A; 123456789101112131415161718192021222324252627282930313233343536373839404142import java.net.*;import java.io.IOException;public class UDPServerDemo{ public static void main(String[] args) { try{ /* **&#x63A5;&#x6536;&#x5BA2;&#x6237;&#x7AEF;&#x53D1;&#x9001;&#x7684;&#x6570;&#x636E; */ //&#x6784;&#x9020;&#x7ED1;&#x5B9A;8888&#x7AEF;&#x53E3;&#x7684;&#x5957;&#x63A5;&#x5B57; DatagramSocket dataSocket = new DatagramSocket(8888); //&#x6784;&#x9020;&#x63A5;&#x6536;&#x7684;&#x6570;&#x636E;&#x62A5; byte[] content = new byte[1024]; DatagramPacket dataPacket = new DatagramPacket(content,content.length); System.out.println(&quot;===&#x670D;&#x52A1;&#x5668;&#x5F00;&#x59CB;&#x76D1;&#x542C;&#x63A5;&#x6536;&#x6570;&#x636E;===&quot;); //&#x63A5;&#x6536;&#x6570;&#x636E; dataSocket.receive(dataPacket); //&#x8F6C;&#x6362;&#x4E3A;&#x5B57;&#x7B26;&#x4E32;&#x8F93;&#x51FA; String client = new String(content,0,dataPacket.getLength(),&quot;UTF-8&quot;); System.out.println(&quot;&#x6211;&#x662F;&#x670D;&#x52A1;&#x5668;&#xFF0C;&#x5BA2;&#x6237;&#x7AEF;&#x8BF4;&#xFF1A;&quot;+client); /* **&#x5411;&#x5BA2;&#x6237;&#x7AEF;&#x53D1;&#x9001;&#x7684;&#x6570;&#x636E; */ //&#x83B7;&#x53D6;&#x5BA2;&#x6237;&#x7AEF;&#x7684;IP&#xFF0C;&#x7AEF;&#x53E3; InetAddress address = dataPacket.getAddress(); int port = dataPacket.getPort(); String reContent = &quot;&#x4F60;&#x597D;&#xFF0C;&#x5BA2;&#x6237;&#x7AEF;&#xFF01;&quot;; byte[] reData = reContent.getBytes(); //&#x6784;&#x9020;&#x8FD4;&#x56DE;&#x7ED9;&#x5BA2;&#x6237;&#x7AEF;&#x7684;&#x6570;&#x636E;&#x62A5;&#x5E76;&#x53D1;&#x9001; DatagramPacket dataPacket2 = new DatagramPacket(reData,reData.length,address,port); dataSocket.send(dataPacket2); //&#x5173;&#x95ED;&#x5957;&#x63A5;&#x5B57; dataSocket.close(); }catch(SocketException e){ e.printStackTrace(); }catch(IOException e){ e.printStackTrace(); } }} &#x5BA2;&#x6237;&#x7AEF;&#x4EE3;&#x7801; 1234567891011121314151617181920212223242526272829303132333435363738394041import java.net.*;import java.io.IOException;public class UDPClinetDemo { public static void main(String[] args) { String str = &quot;&#x670D;&#x52A1;&#x5668;&#xFF0C;&#x4F60;&#x597D;&#xFF01;&quot;; byte[] content = str.getBytes(); try{ /* **&#x5411;&#x670D;&#x52A1;&#x5668;&#x53D1;&#x9001;&#x6570;&#x636E; */ //&#x8BBE;&#x7F6E;&#x83B7;&#x53D6;&#x670D;&#x52A1;&#x5668;&#x7684;&#x5730;&#x5740;&#xFF0C;&#x7AEF;&#x53E3; int port = 8888; InetAddress address=InetAddress.getByName(&quot;localhost&quot;); //&#x6784;&#x9020;&#x53D1;&#x9001;&#x7684;&#x6570;&#x636E;&#x62A5;&#xFF0C;&#x5E76;&#x53D1;&#x9001;&#x6570;&#x636E; DatagramPacket dataPacket = new DatagramPacket(content,content.length,address,port); DatagramSocket dataSocket = new DatagramSocket(); dataSocket.send(dataPacket); /* **&#x63A5;&#x6536;&#x670D;&#x52A1;&#x5668;&#x6570;&#x636E; */ //&#x6784;&#x9020;&#x63A5;&#x6536;&#x7684;&#x6570;&#x636E;&#x62A5; byte[] serverData = new byte[1024]; DatagramPacket dataPacket2 = new DatagramPacket(serverData,serverData.length); //&#x63A5;&#x6536;&#x6570;&#x636E; dataSocket.receive(dataPacket2); //&#x5904;&#x7406;&#x63A5;&#x6536;&#x5230;&#x7684;&#x6570;&#x636E;&#xFF0C;&#x8C03;&#x7528;packet&#x7684;getLength&#x65B9;&#x6CD5;&#x83B7;&#x53D6;&#x63A5;&#x6536;&#x5230;&#x7684;&#x6570;&#x636E;&#x957F;&#x5EA6; String server = new String(serverData,0,dataPacket2.getLength(),&quot;UTF-8&quot;); System.out.println(&quot;&#x6211;&#x662F;&#x5BA2;&#x6237;&#x7AEF;&#xFF0C;&#x670D;&#x52A1;&#x5668;&#x8BF4;&#xFF1A;&quot;+server); //&#x5173;&#x95ED;&#x5957;&#x63A5;&#x5B57; dataSocket.close(); }catch (SocketException e) { e.printStackTrace(); }catch(IOException e){ e.printStackTrace(); } }} 3 &#x603B;&#x7ED3;1.&#x5728;Socket&#x7F16;&#x7A0B;&#x4E2D;&#xFF0C;&#x5BF9;&#x4E8E;&#x540C;&#x4E00;&#x4E2A;Socket&#x5BF9;&#x8C61;&#xFF0C;&#x4E00;&#x822C;&#x4E0D;&#x9700;&#x8981;&#x5173;&#x95ED;&#x8F93;&#x5165;&#x8F93;&#x51FA;&#x6D41;&#xFF0C;&#x53EA;&#x8981;&#x5173;&#x95ED;Socket&#x5BF9;&#x8C61;&#xFF0C;&#x4F1A;&#x81EA;&#x52A8;&#x5173;&#x95ED;&#x5BF9;&#x5E94;&#x6D41;&#x3002;2.&#x4F7F;&#x7528;TCP&#x4F20;&#x8F93;&#x5BF9;&#x8C61;&#x65F6;&#xFF0C;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;ObjectOutputStream&#x548C;ObjectInputStream&#x8FDB;&#x884C;&#x5904;&#x7406;&#x3002;3.&#x4F7F;&#x7528;Socket&#x8FDB;&#x884C;&#x6587;&#x4EF6;&#x7684;&#x4F20;&#x8F93;&#x65F6;&#xFF0C;&#x4E00;&#x822C;&#x662F;&#x76F4;&#x63A5;&#x8FDB;&#x884C;&#x5B57;&#x8282;&#x7684;&#x8BFB;&#x5199;&#x590D;&#x5236;&#x3002;","tags":[{"name":"技术","slug":"技术","permalink":"http://todoright.com/tags/技术/"},{"name":"Java网络编程","slug":"Java网络编程","permalink":"http://todoright.com/tags/Java网络编程/"}]},{"title":"Java IO流知识笔记","date":"2016-06-01T07:03:52.000Z","path":"2016/06/01/JavaIO流知识笔记/","text":"1 &#x6D41;&#x7684;&#x5206;&#x7C7B;IO&#x6D41;&#x4E3B;&#x8981;&#x7528;&#x4E8E;&#x5BF9;&#x8BA1;&#x7B97;&#x673A;&#x7684;&#x786C;&#x677F;&#x3001;&#x5185;&#x5B58;&#x3001;&#x952E;&#x76D8;&#x7B49;&#x5904;&#x7406;&#x8BBE;&#x5907;&#x4E0A;&#x7684;&#x6570;&#x636E;&#x8FDB;&#x884C;&#x64CD;&#x4F5C;&#xFF0C;&#x8BF4;&#x7684;&#x901A;&#x4FD7;&#x4E00;&#x70B9;&#x5C31;&#x662F;&#x7528;&#x6765;&#x5BF9;&#x6587;&#x4EF6;&#x5185;&#x5BB9;&#x8FDB;&#x884C;&#x64CD;&#x4F5C;&#x7684;&#x3002; &#x6309;&#x6D41;&#x7684;&#x65B9;&#x5411;&#x5206;&#x4E3A;&#xFF1A;&#x8F93;&#x5165;&#x6D41;&#x548C;&#x8F93;&#x51FA;&#x6D41;&#x3002;&#x6309;&#x6570;&#x636E;&#x7C7B;&#x578B;&#x5206;&#x4E3A;&#xFF1A;&#x5B57;&#x8282;&#x6D41;&#x548C;&#x5B57;&#x7B26;&#x6D41;&#x3002;&#x6309;&#x6D41;&#x7684;&#x529F;&#x80FD;&#x5206;&#x4E3A;&#xFF1A;&#x8282;&#x70B9;&#x6D41;&#x548C;&#x5904;&#x7406;&#x6D41;&#x3002; &#x5B57;&#x7B26;&#x6D41;&#x548C;&#x5B57;&#x8282;&#x6D41;&#x7684;&#x533A;&#x522B;&#xFF1A;&#x9996;&#x5148;&#x719F;&#x6089;&#x4E00;&#x4E9B;&#x6982;&#x5FF5;&#xFF1A;&#x5B57;&#x8282;&#xFF1A;&#x4E5F;&#x5C31;&#x662F;Byte&#xFF0C;&#x5B83;&#x662F;&#x901A;&#x8FC7;&#x7F51;&#x7EDC;&#x4F20;&#x8F93;&#x4FE1;&#x606F;&#x6216;&#x4FE1;&#x606F;&#x5B58;&#x50A8;&#x7684;&#x5355;&#x4F4D;&#x3002;&#x5B57;&#x8282;&#x662F;&#x8BA1;&#x7B97;&#x673A;&#x4FE1;&#x606F;&#x6280;&#x672F;&#x7528;&#x4E8E;&#x8BA1;&#x91CF;&#x5B58;&#x50A8;&#x5BB9;&#x91CF;&#x548C;&#x4F20;&#x8F93;&#x5BB9;&#x91CF;&#x7684;&#x4E00;&#x79CD;&#x8BA1;&#x91CF;&#x5355;&#x4F4D;&#xFF0C;1&#x4E2A;&#x5B57;&#x8282;&#x7B49;&#x4E8E;8&#x4F4D;&#x4E8C;&#x8FDB;&#x5236;&#xFF0C;&#x5B83;&#x662F;&#x4E00;&#x4E2A;8&#x4F4D;&#x7684;&#x4E8C;&#x8FDB;&#x5236;&#x6570;&#xFF0C;&#x662F;&#x4E00;&#x4E2A;&#x5F88;&#x5177;&#x4F53;&#x7684;&#x5B58;&#x50A8;&#x7A7A;&#x95F4;&#x3002;&#x5B57;&#x7B26;&#xFF1A; &#x5B57;&#x7B26;&#x662F;&#x6307;&#x8BA1;&#x7B97;&#x673A;&#x4E2D;&#x4F7F;&#x7528;&#x7684;&#x5B57;&#x6BCD;&#x3001;&#x6570;&#x5B57;&#x3001;&#x5B57;&#x548C;&#x7B26;&#x53F7;&#xFF0C;&#x662F;&#x4EBA;&#x4EEC;&#x4F7F;&#x7528;&#x7684;&#x8BB0;&#x53F7;&#xFF0C;&#x62BD;&#x8C61;&#x610F;&#x4E49;&#x4E0A;&#x7684;&#x4E00;&#x4E2A;&#x7B26;&#x53F7;&#x3002;&#x5305;&#x62EC;&#xFF1A;1&#x3001;2&#x3001;3&#x3001;A&#x3001;B&#x3001;C&#x3001;~&#xFF01;&#xB7;#&#xFFE5;%&#x2026;&#x2026;&#x2014;&#xFF08;&#xFF09;&#x2014;&#x2014;+&#x7B49;&#x7B49;&#x3002;*&#x9996;&#x5148;&#x7A0B;&#x5E8F;&#x4E2D;&#x7684;&#x6570;&#x636E;&#x90FD;&#x662F;&#x4EE5;&#x6D41;&#x7684;&#x5F62;&#x5F0F;&#x4FDD;&#x5B58;&#x7684;&#xFF0C;&#x800C;&#x6D41;&#x4E2D;&#x4FDD;&#x5B58;&#x5B9E;&#x9645;&#x4E0A;&#x90FD;&#x662F;&#x5B57;&#x8282;&#x6587;&#x4EF6;&#x3002;&#x5B57;&#x7B26;&#x3001;&#x5B57;&#x8282;&#x6D41;&#x7684;&#x4E3B;&#x8981;&#x7C7B;&#x6846;&#x67B6;&#xFF1A;&#x4EE5;&#x4E0A;&#x53EA;&#x5305;&#x542B;&#x4E86;&#x4E3B;&#x8981;&#x7528;&#x5230;&#x7684;&#x4E00;&#x4E9B;&#x7C7B;&#xFF0C;&#x4E0D;&#x5E38;&#x7528;&#x7684;&#x6CA1;&#x6709;&#x5217;&#x4E3E;&#x3002; 2 &#x5B57;&#x7B26;&#x6D41;2.1 &#x5B57;&#x7B26;&#x6D41;&#x7684;&#x8BFB;&#x5199;&#x64CD;&#x4F5C;1. FileReader&#x8BFB;&#x53D6;&#x6587;&#x4EF6;&#x5185;&#x5BB9;&#xFF1A;12345678910111213141516171819202122232425import java.io.FileReader; import java.io.IOException;public class FileWriter{public static void main(String[] args) { FileReader fr = null; try{ fr = new FileReader(&quot;demo.txt&quot;); int temp = 0; while ((temp = fr.read()) != -1) { System.out.print((char)temp); } }catch (IOException e) { e.printStackTrace(); }finally{ if(null != fr){ try{ fr.close(); }catch(IOException e){ e.printStackTrace(); } } } } } 2. FileWriter&#x5199;&#x5165;&#x6587;&#x4EF6;12345678910111213141516171819202122232425import java.io.FileWriter; import java.io.IOException; public class FileWriterTest{ public static void main(String[] args){ //&#x629B;&#x51FA;&#x5F02;&#x5E38;&#xFF0C;&#x5173;&#x95ED;Writer&#x4F7F;&#x7528; FileWriter fw = null; try{ fw = new FileWriter(&quot;Writer.txt&quot;); fw.write(&quot;Hello World!&quot;); //&#x5237;&#x65B0;&#x7F13;&#x51B2;&#xFF0C;&#x53EF;&#x7ACB;&#x5373;&#x770B;&#x5230;&#x5199;&#x5165;&#x6548;&#x679C; fw.flush(); }catch(IOException e){ e.printStackTrace(); }finally{ //&#x5224;&#x65AD;&#x5BF9;&#x8C61;&#x662F;&#x5426;&#x5B58;&#x5728;&#xFF0C;&#x4E0D;&#x5B58;&#x5728;&#x4E0D;&#x9700;&#x8981;&#x5173;&#x95ED; if(null != fw){ try{ fw.close(); }catch(IOException e){ e.printStackTrace(); } } } } } 2.2 &#x4F7F;&#x7528;&#x5B57;&#x7B26;&#x7F13;&#x51B2;&#x7C7B;&#x6765;&#x590D;&#x5236;&#x6587;&#x4EF6;12345678910111213141516171819202122232425262728293031323334353637import java.io.*;public class CopyFile{ public static void main(String[] args){ BufferedReader br = null; BufferedWriter bw = null; try{ //&#x7528;&#x76F8;&#x5E94;&#x7684;&#x7F13;&#x51B2;&#x7C7B;&#x5305;&#x88C5; br = new BufferedReader(new FileReader(&quot;from.txt&quot;)); bw = new BufferedWriter(new FileWriter(&quot;to.txt&quot;)); String Line = null; while(null != (Line = br.readLine())){ bw.write(Line); //&#x6362;&#x884C;&#xFF0C;&#x56E0;&#x4E3A;readLine&#x8BFB;&#x53D6;&#x7684;&#x65F6;&#x5019;&#x56DE;&#x53BB;&#x6389;&#x6362;&#x884C;&#x7B26;&#xFF0C;&#x9700;&#x8981;&#x624B;&#x52A8;&#x6362;&#x884C; //&#x5982;&#x679C;&#x7528;read&#x5C31;&#x4E0D;&#x9700;&#x8981;&#xFF0C;&#x56E0;&#x4E3A;&#x662F;&#x6309;&#x5B57;&#x8282;&#x8BFB;&#x53D6;&#xFF0C;&#x6362;&#x884C;&#x7B26;&#x90FD;&#x4F1A;&#x8BFB;&#x53D6; bw.newLine(); } }catch(IOException e){ e.printStackTrace(); }finally{ if(null != br){ try{ br.close(); }catch(IOException e){ e.printStackTrace(); } } if(null != bw){ try{ bw.close(); }catch(IOException e){ e.printStackTrace(); } } } } } 3 &#x5B57;&#x8282;&#x6D41;3.1 &#x5B57;&#x8282;&#x6D41;&#x7684;&#x8BFB;&#x5199;&#x64CD;&#x4F5C;1. FileInputStream&#x8BFB;&#x53D6;&#x6587;&#x4EF6; 12345678910111213141516171819202122232425262728293031import java.io.FileInputStream;import java.io.IOException;public class InputStreamTest{ public static void main(String[] args) { FileInputStream fis = null; try{ fis = new FileInputStream(&quot;demo.txt&quot;); // &#x4EE5;&#x4E0B;&#x65B9;&#x6CD5;&#x8BFB;&#x53D6;&#x6C49;&#x5B57;&#x65F6;&#x4F1A;&#x4E71;&#x7801;&#xFF0C;&#x56E0;&#x4E3A;&#x6C49;&#x5B57;&#x7B49;&#x4E8E;2&#x4E2A;&#x5B57;&#x8282; // int temp = 0; // while((temp = fis.read()) != -1){ // System.out.print((char)temp); // } byte[] temp = new byte[1024]; while(fis.read(temp) != -1){ String result = new String(temp,0,temp.length); System.out.print(result); } }catch(IOException e){ e.printStackTrace(); }finally{ if(null != fis){ try{ fis.close(); }catch(IOException e){ e.printStackTrace(); } } } }} 2. FileOutputStream&#x5199;&#x5165;&#x6587;&#x4EF6; 12345678910111213141516171819202122232425import java.io.FileOutputStream;import java.io.IOException;public class OutputStreamTest { public static void main(String[] args) { FileOutputStream fos = null; try{ fos = new FileOutputStream(&quot;demo.txt&quot;); String str = &quot;hello world ! &#x4F60;&#x597D;&#x4E16;&#x754C;!zzzzzZZZZzz\\n&quot;; byte[] strByte = str.getBytes(&quot;UTF-8&quot;); fos.write(strByte); }catch(IOException e){ e.printStackTrace(); }finally{ if(null != fos){ try{ fos.close(); }catch(IOException e){ e.printStackTrace(); } } } }} 3.2 &#x4F7F;&#x7528;&#x5B57;&#x8282;&#x7F13;&#x51B2;&#x7C7B;&#x6765;&#x590D;&#x5236;&#x6587;&#x4EF6;123456789101112131415161718192021222324252627282930313233343536373839import java.io.BufferedOutputStream;import java.io.BufferedInputStream;import java.io.FileInputStream;import java.io.FileOutputStream;import java.io.IOException;public class CopyFileByByte { public static void main(String[] args) { BufferedOutputStream bos = null; BufferedInputStream bis = null; try{ bis = new BufferedInputStream(new FileInputStream(&quot;inbyte.txt&quot;)); bos = new BufferedOutputStream(new FileOutputStream(&quot;outbyte.txt&quot;)); byte[] inByte = new byte[1024]; int tmp = 0; while((tmp = bis.read(inByte)) != -1){ bos.write(inByte,0,tmp); }; }catch(IOException e){ e.printStackTrace(); } finally{ if(null != bis){ try{ bis.close(); }catch(IOException e){ e.printStackTrace(); } }; if(null != bos){ try{ bos.close(); }catch(IOException e){ e.printStackTrace(); } }; } }} 3 &#x5176;&#x4ED6;3.1 &#x5B57;&#x8282;&#x6D41;&#x8F6C;&#x6362;&#x4E3A;&#x5B57;&#x7B26;&#x6D41;&#x4E00;&#x822C;&#x4F7F;&#x7528;InputStreamReader&#x6765;&#x5C06;&#x5B57;&#x8282;&#x6D41;&#x8F6C;&#x6362;&#x4E3A;&#x5B57;&#x7B26;&#x6D41;&#xFF0C;&#x5B98;&#x65B9;API&#x7ED9;&#x7684;&#x4F8B;&#x5B50;&#xFF1A; 12345BufferedReader in = new BufferedReader(new InputStreamReader(System.in));Writer out = new BufferedWriter(new OutputStreamWriter(System.out)); 3.2 &#x4F7F;&#x7528;&#x573A;&#x5408;&#x5982;&#x679C;&#x662F;&#x6587;&#x672C;&#x7C7B;&#x7684;&#xFF0C;&#x4E00;&#x822C;&#x4F7F;&#x7528;&#x5B57;&#x7B26;&#x6D41;&#xFF0C;&#x4E0D;&#x786E;&#x5B9A;&#x7C7B;&#x578B;&#xFF0C;&#x6216;&#x8005;&#x4E8C;&#x8FDB;&#x5236;&#x4E4B;&#x7C7B;&#x7684;&#xFF0C;&#x80AF;&#x5B9A;&#x7528;&#x5B57;&#x8282;&#x6D41;&#x4E86;&#x3002;","tags":[{"name":"技术","slug":"技术","permalink":"http://todoright.com/tags/技术/"},{"name":"Java","slug":"Java","permalink":"http://todoright.com/tags/Java/"},{"name":"IO","slug":"IO","permalink":"http://todoright.com/tags/IO/"}]}]